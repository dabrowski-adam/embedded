ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 1


   1              		.code	16
   2              		.file	"tasks.c"
   3              		.section	.debug_abbrev,"",%progbits
   4              	.Ldebug_abbrev0:
   5              		.section	.debug_info,"",%progbits
   6              	.Ldebug_info0:
   7              		.section	.debug_line,"",%progbits
   8              	.Ldebug_line0:
   9 0000 62020000 		.text
   9      02007600 
   9      00000201 
   9      FB0E0D00 
   9      01010101 
  10              	.Ltext0:
  11              		.align	2
  12              		.global	xTaskIsTaskSuspended
  13              		.code 16
  14              		.thumb_func
  15              		.type	xTaskIsTaskSuspended, %function
  16              	xTaskIsTaskSuspended:
  17              	.LFB9:
  18              		.file 1 "FreeRTOS/tasks.c"
   1:FreeRTOS/tasks.c **** /*
   2:FreeRTOS/tasks.c **** 	FreeRTOS.org V5.1.1 - Copyright (C) 2003-2008 Richard Barry.
   3:FreeRTOS/tasks.c **** 
   4:FreeRTOS/tasks.c **** 	This file is part of the FreeRTOS.org distribution.
   5:FreeRTOS/tasks.c **** 
   6:FreeRTOS/tasks.c **** 	FreeRTOS.org is free software; you can redistribute it and/or modify
   7:FreeRTOS/tasks.c **** 	it under the terms of the GNU General Public License as published by
   8:FreeRTOS/tasks.c **** 	the Free Software Foundation; either version 2 of the License, or
   9:FreeRTOS/tasks.c **** 	(at your option) any later version.
  10:FreeRTOS/tasks.c **** 
  11:FreeRTOS/tasks.c **** 	FreeRTOS.org is distributed in the hope that it will be useful,
  12:FreeRTOS/tasks.c **** 	but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:FreeRTOS/tasks.c **** 	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:FreeRTOS/tasks.c **** 	GNU General Public License for more details.
  15:FreeRTOS/tasks.c **** 
  16:FreeRTOS/tasks.c **** 	You should have received a copy of the GNU General Public License
  17:FreeRTOS/tasks.c **** 	along with FreeRTOS.org; if not, write to the Free Software
  18:FreeRTOS/tasks.c **** 	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  19:FreeRTOS/tasks.c **** 
  20:FreeRTOS/tasks.c **** 	A special exception to the GPL can be applied should you wish to distribute
  21:FreeRTOS/tasks.c **** 	a combined work that includes FreeRTOS.org, without being obliged to provide
  22:FreeRTOS/tasks.c **** 	the source code for any proprietary components.  See the licensing section
  23:FreeRTOS/tasks.c **** 	of http://www.FreeRTOS.org for full details of how and when the exception
  24:FreeRTOS/tasks.c **** 	can be applied.
  25:FreeRTOS/tasks.c **** 
  26:FreeRTOS/tasks.c ****     ***************************************************************************
  27:FreeRTOS/tasks.c ****     ***************************************************************************
  28:FreeRTOS/tasks.c ****     *                                                                         *
  29:FreeRTOS/tasks.c ****     * SAVE TIME AND MONEY!  We can port FreeRTOS.org to your own hardware,    *
  30:FreeRTOS/tasks.c ****     * and even write all or part of your application on your behalf.          *
  31:FreeRTOS/tasks.c ****     * See http://www.OpenRTOS.com for details of the services we provide to   *
  32:FreeRTOS/tasks.c ****     * expedite your project.                                                  *
  33:FreeRTOS/tasks.c ****     *                                                                         *
  34:FreeRTOS/tasks.c ****     ***************************************************************************
  35:FreeRTOS/tasks.c ****     ***************************************************************************
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 2


  36:FreeRTOS/tasks.c **** 
  37:FreeRTOS/tasks.c **** 	Please ensure to read the configuration and relevant port sections of the
  38:FreeRTOS/tasks.c **** 	online documentation.
  39:FreeRTOS/tasks.c **** 
  40:FreeRTOS/tasks.c **** 	http://www.FreeRTOS.org - Documentation, latest information, license and 
  41:FreeRTOS/tasks.c **** 	contact details.
  42:FreeRTOS/tasks.c **** 
  43:FreeRTOS/tasks.c **** 	http://www.SafeRTOS.com - A version that is certified for use in safety 
  44:FreeRTOS/tasks.c **** 	critical systems.
  45:FreeRTOS/tasks.c **** 
  46:FreeRTOS/tasks.c **** 	http://www.OpenRTOS.com - Commercial support, development, porting, 
  47:FreeRTOS/tasks.c **** 	licensing and training services.
  48:FreeRTOS/tasks.c **** */
  49:FreeRTOS/tasks.c **** 
  50:FreeRTOS/tasks.c **** 
  51:FreeRTOS/tasks.c **** #include <stdio.h>
  52:FreeRTOS/tasks.c **** #include <stdlib.h>
  53:FreeRTOS/tasks.c **** #include <string.h>
  54:FreeRTOS/tasks.c **** 
  55:FreeRTOS/tasks.c **** #include "FreeRTOS.h"
  56:FreeRTOS/tasks.c **** #include "task.h"
  57:FreeRTOS/tasks.c **** #include "StackMacros.h"
  58:FreeRTOS/tasks.c **** 
  59:FreeRTOS/tasks.c **** /*
  60:FreeRTOS/tasks.c ****  * Macro to define the amount of stack available to the idle task.
  61:FreeRTOS/tasks.c ****  */
  62:FreeRTOS/tasks.c **** #define tskIDLE_STACK_SIZE	configMINIMAL_STACK_SIZE
  63:FreeRTOS/tasks.c **** 
  64:FreeRTOS/tasks.c **** /*
  65:FreeRTOS/tasks.c ****  * Task control block.  A task control block (TCB) is allocated to each task,
  66:FreeRTOS/tasks.c ****  * and stores the context of the task.
  67:FreeRTOS/tasks.c ****  */
  68:FreeRTOS/tasks.c **** typedef struct tskTaskControlBlock
  69:FreeRTOS/tasks.c **** {
  70:FreeRTOS/tasks.c **** 	volatile portSTACK_TYPE	*pxTopOfStack;		/*< Points to the location of the last item placed on the 
  71:FreeRTOS/tasks.c **** 	xListItem				xGenericListItem;	/*< List item used to place the TCB in ready and blocked queues. */
  72:FreeRTOS/tasks.c **** 	xListItem				xEventListItem;		/*< List item used to place the TCB in event lists. */
  73:FreeRTOS/tasks.c **** 	unsigned portBASE_TYPE	uxPriority;			/*< The priority of the task where 0 is the lowest priority. 
  74:FreeRTOS/tasks.c **** 	portSTACK_TYPE			*pxStack;			/*< Points to the start of the stack. */
  75:FreeRTOS/tasks.c **** 	signed portCHAR			pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task whe
  76:FreeRTOS/tasks.c **** 
  77:FreeRTOS/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
  78:FreeRTOS/tasks.c **** 		portSTACK_TYPE *pxEndOfStack;			/*< Used for stack overflow checking on architectures where the s
  79:FreeRTOS/tasks.c **** 	#endif
  80:FreeRTOS/tasks.c **** 
  81:FreeRTOS/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
  82:FreeRTOS/tasks.c **** 		unsigned portBASE_TYPE uxCriticalNesting;
  83:FreeRTOS/tasks.c **** 	#endif
  84:FreeRTOS/tasks.c **** 
  85:FreeRTOS/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
  86:FreeRTOS/tasks.c **** 		unsigned portBASE_TYPE	uxTCBNumber;		/*< This is used for tracing the scheduler and making debugg
  87:FreeRTOS/tasks.c **** 	#endif	
  88:FreeRTOS/tasks.c **** 		
  89:FreeRTOS/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
  90:FreeRTOS/tasks.c **** 		unsigned portBASE_TYPE uxBasePriority;
  91:FreeRTOS/tasks.c **** 	#endif
  92:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 3


  93:FreeRTOS/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
  94:FreeRTOS/tasks.c **** 		pdTASK_HOOK_CODE pxTaskTag;
  95:FreeRTOS/tasks.c **** 	#endif
  96:FreeRTOS/tasks.c **** 		
  97:FreeRTOS/tasks.c **** } tskTCB;
  98:FreeRTOS/tasks.c **** 
  99:FreeRTOS/tasks.c **** /*
 100:FreeRTOS/tasks.c ****  * Some kernel aware debuggers require data to be viewed to be global, rather
 101:FreeRTOS/tasks.c ****  * than file scope.
 102:FreeRTOS/tasks.c ****  */
 103:FreeRTOS/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 104:FreeRTOS/tasks.c **** 	#define static
 105:FreeRTOS/tasks.c **** #endif
 106:FreeRTOS/tasks.c **** 
 107:FreeRTOS/tasks.c **** /*lint -e956 */
 108:FreeRTOS/tasks.c **** 
 109:FreeRTOS/tasks.c **** tskTCB * volatile pxCurrentTCB = NULL;					
 110:FreeRTOS/tasks.c **** 
 111:FreeRTOS/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 112:FreeRTOS/tasks.c **** 
 113:FreeRTOS/tasks.c **** static xList pxReadyTasksLists[ configMAX_PRIORITIES ];	/*< Prioritised ready tasks. */
 114:FreeRTOS/tasks.c **** static xList xDelayedTaskList1;							/*< Delayed tasks. */
 115:FreeRTOS/tasks.c **** static xList xDelayedTaskList2;							/*< Delayed tasks (two lists are used - one for delays that h
 116:FreeRTOS/tasks.c **** static xList * volatile pxDelayedTaskList;				/*< Points to the delayed task list currently being u
 117:FreeRTOS/tasks.c **** static xList * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task list currently b
 118:FreeRTOS/tasks.c **** static xList xPendingReadyList;							/*< Tasks that have been readied while the scheduler was susp
 119:FreeRTOS/tasks.c **** 
 120:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 121:FreeRTOS/tasks.c **** 
 122:FreeRTOS/tasks.c **** 	static volatile xList xTasksWaitingTermination;		/*< Tasks that have been deleted - but the their 
 123:FreeRTOS/tasks.c **** 	static volatile unsigned portBASE_TYPE uxTasksDeleted = ( unsigned portBASE_TYPE ) 0;
 124:FreeRTOS/tasks.c **** 
 125:FreeRTOS/tasks.c **** #endif
 126:FreeRTOS/tasks.c **** 
 127:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 128:FreeRTOS/tasks.c **** 
 129:FreeRTOS/tasks.c **** 	static xList xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 130:FreeRTOS/tasks.c **** 
 131:FreeRTOS/tasks.c **** #endif
 132:FreeRTOS/tasks.c **** 
 133:FreeRTOS/tasks.c **** /* File private variables. --------------------------------*/
 134:FreeRTOS/tasks.c **** static volatile unsigned portBASE_TYPE uxCurrentNumberOfTasks	= ( unsigned portBASE_TYPE ) 0;
 135:FreeRTOS/tasks.c **** static volatile portTickType xTickCount							= ( portTickType ) 0;
 136:FreeRTOS/tasks.c **** static unsigned portBASE_TYPE uxTopUsedPriority					= tskIDLE_PRIORITY;
 137:FreeRTOS/tasks.c **** static volatile unsigned portBASE_TYPE uxTopReadyPriority		= tskIDLE_PRIORITY;
 138:FreeRTOS/tasks.c **** static volatile signed portBASE_TYPE xSchedulerRunning			= pdFALSE;
 139:FreeRTOS/tasks.c **** static volatile unsigned portBASE_TYPE uxSchedulerSuspended		= ( unsigned portBASE_TYPE ) pdFALSE;
 140:FreeRTOS/tasks.c **** static volatile unsigned portBASE_TYPE uxMissedTicks			= ( unsigned portBASE_TYPE ) 0;
 141:FreeRTOS/tasks.c **** static volatile portBASE_TYPE xMissedYield						= ( portBASE_TYPE ) pdFALSE;
 142:FreeRTOS/tasks.c **** static volatile portBASE_TYPE xNumOfOverflows					= ( portBASE_TYPE ) 0;
 143:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 144:FreeRTOS/tasks.c **** 	static unsigned portBASE_TYPE uxTaskNumber = 0; /*lint !e956 Static is deliberate - this is guarde
 145:FreeRTOS/tasks.c **** #endif
 146:FreeRTOS/tasks.c **** 
 147:FreeRTOS/tasks.c **** /* Debugging and trace facilities private variables and macros. ------------*/
 148:FreeRTOS/tasks.c **** 
 149:FreeRTOS/tasks.c **** /*
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 4


 150:FreeRTOS/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 151:FreeRTOS/tasks.c ****  * is used purely for checking the high water mark for tasks.
 152:FreeRTOS/tasks.c ****  */
 153:FreeRTOS/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5 )
 154:FreeRTOS/tasks.c **** 
 155:FreeRTOS/tasks.c **** /*
 156:FreeRTOS/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 157:FreeRTOS/tasks.c ****  */
 158:FreeRTOS/tasks.c **** #define tskBLOCKED_CHAR		( ( signed portCHAR ) 'B' )
 159:FreeRTOS/tasks.c **** #define tskREADY_CHAR		( ( signed portCHAR ) 'R' )
 160:FreeRTOS/tasks.c **** #define tskDELETED_CHAR		( ( signed portCHAR ) 'D' )
 161:FreeRTOS/tasks.c **** #define tskSUSPENDED_CHAR	( ( signed portCHAR ) 'S' )
 162:FreeRTOS/tasks.c **** 
 163:FreeRTOS/tasks.c **** /*
 164:FreeRTOS/tasks.c ****  * Macros and private variables used by the trace facility.
 165:FreeRTOS/tasks.c ****  */
 166:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 167:FreeRTOS/tasks.c **** 
 168:FreeRTOS/tasks.c **** 	#define tskSIZE_OF_EACH_TRACE_LINE			( ( unsigned portLONG ) ( sizeof( unsigned portLONG ) + sizeo
 169:FreeRTOS/tasks.c **** 	static volatile signed portCHAR * volatile pcTraceBuffer;
 170:FreeRTOS/tasks.c **** 	static signed portCHAR *pcTraceBufferStart;
 171:FreeRTOS/tasks.c **** 	static signed portCHAR *pcTraceBufferEnd;
 172:FreeRTOS/tasks.c **** 	static signed portBASE_TYPE xTracing = pdFALSE;
 173:FreeRTOS/tasks.c **** 	static unsigned portBASE_TYPE uxPreviousTask = 255;
 174:FreeRTOS/tasks.c **** 	static portCHAR pcStatusString[ 50 ];
 175:FreeRTOS/tasks.c **** #endif
 176:FreeRTOS/tasks.c **** 
 177:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 178:FreeRTOS/tasks.c **** 
 179:FreeRTOS/tasks.c **** /*
 180:FreeRTOS/tasks.c ****  * Macro that writes a trace of scheduler activity to a buffer.  This trace
 181:FreeRTOS/tasks.c ****  * shows which task is running when and is very useful as a debugging tool.
 182:FreeRTOS/tasks.c ****  * As this macro is called each context switch it is a good idea to undefine
 183:FreeRTOS/tasks.c ****  * it if not using the facility.
 184:FreeRTOS/tasks.c ****  */
 185:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 186:FreeRTOS/tasks.c **** 
 187:FreeRTOS/tasks.c **** 	#define vWriteTraceToBuffer()																	\
 188:FreeRTOS/tasks.c **** 	{																								\
 189:FreeRTOS/tasks.c **** 		if( xTracing )																				\
 190:FreeRTOS/tasks.c **** 		{																							\
 191:FreeRTOS/tasks.c **** 			if( uxPreviousTask != pxCurrentTCB->uxTCBNumber )										\
 192:FreeRTOS/tasks.c **** 			{																						\
 193:FreeRTOS/tasks.c **** 				if( ( pcTraceBuffer + tskSIZE_OF_EACH_TRACE_LINE ) < pcTraceBufferEnd )				\
 194:FreeRTOS/tasks.c **** 				{																					\
 195:FreeRTOS/tasks.c **** 					uxPreviousTask = pxCurrentTCB->uxTCBNumber;										\
 196:FreeRTOS/tasks.c **** 					*( unsigned portLONG * ) pcTraceBuffer = ( unsigned portLONG ) xTickCount;		\
 197:FreeRTOS/tasks.c **** 					pcTraceBuffer += sizeof( unsigned portLONG );									\
 198:FreeRTOS/tasks.c **** 					*( unsigned portLONG * ) pcTraceBuffer = ( unsigned portLONG ) uxPreviousTask;	\
 199:FreeRTOS/tasks.c **** 					pcTraceBuffer += sizeof( unsigned portLONG );									\
 200:FreeRTOS/tasks.c **** 				}																					\
 201:FreeRTOS/tasks.c **** 				else																				\
 202:FreeRTOS/tasks.c **** 				{																					\
 203:FreeRTOS/tasks.c **** 					xTracing = pdFALSE;																\
 204:FreeRTOS/tasks.c **** 				}																					\
 205:FreeRTOS/tasks.c **** 			}																						\
 206:FreeRTOS/tasks.c **** 		}																							\
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 5


 207:FreeRTOS/tasks.c **** 	}
 208:FreeRTOS/tasks.c **** 
 209:FreeRTOS/tasks.c **** #else
 210:FreeRTOS/tasks.c **** 
 211:FreeRTOS/tasks.c **** 	#define vWriteTraceToBuffer()
 212:FreeRTOS/tasks.c **** 
 213:FreeRTOS/tasks.c **** #endif
 214:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 215:FreeRTOS/tasks.c **** 
 216:FreeRTOS/tasks.c **** /*
 217:FreeRTOS/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready queue for
 218:FreeRTOS/tasks.c ****  * the task.  It is inserted at the end of the list.  One quirk of this is
 219:FreeRTOS/tasks.c ****  * that if the task being inserted is at the same priority as the currently
 220:FreeRTOS/tasks.c ****  * executing task, then it will only be rescheduled after the currently
 221:FreeRTOS/tasks.c ****  * executing task has been rescheduled.
 222:FreeRTOS/tasks.c ****  */
 223:FreeRTOS/tasks.c **** #define prvAddTaskToReadyQueue( pxTCB )																			\
 224:FreeRTOS/tasks.c **** {																												\
 225:FreeRTOS/tasks.c **** 	if( pxTCB->uxPriority > uxTopReadyPriority )																\
 226:FreeRTOS/tasks.c **** 	{																											\
 227:FreeRTOS/tasks.c **** 		uxTopReadyPriority = pxTCB->uxPriority;																	\
 228:FreeRTOS/tasks.c **** 	}																											\
 229:FreeRTOS/tasks.c **** 	vListInsertEnd( ( xList * ) &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListIte
 230:FreeRTOS/tasks.c **** }
 231:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/		
 232:FreeRTOS/tasks.c **** 
 233:FreeRTOS/tasks.c **** /*
 234:FreeRTOS/tasks.c ****  * Macro that looks at the list of tasks that are currently delayed to see if
 235:FreeRTOS/tasks.c ****  * any require waking.
 236:FreeRTOS/tasks.c ****  *
 237:FreeRTOS/tasks.c ****  * Tasks are stored in the queue in the order of their wake time - meaning
 238:FreeRTOS/tasks.c ****  * once one tasks has been found whose timer has not expired we need not look
 239:FreeRTOS/tasks.c ****  * any further down the list.
 240:FreeRTOS/tasks.c ****  */
 241:FreeRTOS/tasks.c **** #define prvCheckDelayedTasks()																						\
 242:FreeRTOS/tasks.c **** {																													\
 243:FreeRTOS/tasks.c **** register tskTCB *pxTCB;																								\
 244:FreeRTOS/tasks.c **** 																													\
 245:FreeRTOS/tasks.c **** 	while( ( pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ) ) != NULL )						\
 246:FreeRTOS/tasks.c **** 	{																												\
 247:FreeRTOS/tasks.c **** 		if( xTickCount < listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) ) )									\
 248:FreeRTOS/tasks.c **** 		{																											\
 249:FreeRTOS/tasks.c **** 			break;																									\
 250:FreeRTOS/tasks.c **** 		}																											\
 251:FreeRTOS/tasks.c **** 		vListRemove( &( pxTCB->xGenericListItem ) );																\
 252:FreeRTOS/tasks.c **** 		/* Is the task waiting on an event also? */																	\
 253:FreeRTOS/tasks.c **** 		if( pxTCB->xEventListItem.pvContainer )																		\
 254:FreeRTOS/tasks.c **** 		{																											\
 255:FreeRTOS/tasks.c **** 			vListRemove( &( pxTCB->xEventListItem ) );																\
 256:FreeRTOS/tasks.c **** 		}																											\
 257:FreeRTOS/tasks.c **** 		prvAddTaskToReadyQueue( pxTCB );																			\
 258:FreeRTOS/tasks.c **** 	}																												\
 259:FreeRTOS/tasks.c **** }
 260:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 261:FreeRTOS/tasks.c **** 
 262:FreeRTOS/tasks.c **** /*
 263:FreeRTOS/tasks.c ****  * Several functions take an xTaskHandle parameter that can optionally be NULL,
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 6


 264:FreeRTOS/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 265:FreeRTOS/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 266:FreeRTOS/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 267:FreeRTOS/tasks.c ****  */
 268:FreeRTOS/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( pxHandle == NULL ) ? ( tskTCB * ) pxCurrentTCB : ( tskT
 269:FreeRTOS/tasks.c **** 
 270:FreeRTOS/tasks.c **** 
 271:FreeRTOS/tasks.c **** /* File private functions. --------------------------------*/
 272:FreeRTOS/tasks.c **** 
 273:FreeRTOS/tasks.c **** /*
 274:FreeRTOS/tasks.c ****  * Utility to ready a TCB for a given task.  Mainly just copies the parameters
 275:FreeRTOS/tasks.c ****  * into the TCB structure.
 276:FreeRTOS/tasks.c ****  */
 277:FreeRTOS/tasks.c **** static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed portCHAR * const pcName, unsigne
 278:FreeRTOS/tasks.c **** 
 279:FreeRTOS/tasks.c **** /*
 280:FreeRTOS/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 281:FreeRTOS/tasks.c ****  * automatically upon the creation of the first task.
 282:FreeRTOS/tasks.c ****  */
 283:FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void );
 284:FreeRTOS/tasks.c **** 
 285:FreeRTOS/tasks.c **** /*
 286:FreeRTOS/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 287:FreeRTOS/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 288:FreeRTOS/tasks.c ****  * creation of the first user task.
 289:FreeRTOS/tasks.c ****  *
 290:FreeRTOS/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 291:FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 292:FreeRTOS/tasks.c ****  *
 293:FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
 294:FreeRTOS/tasks.c ****  *
 295:FreeRTOS/tasks.c ****  */
 296:FreeRTOS/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 297:FreeRTOS/tasks.c **** 
 298:FreeRTOS/tasks.c **** /*
 299:FreeRTOS/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 300:FreeRTOS/tasks.c ****  * including the stack pointed to by the TCB.
 301:FreeRTOS/tasks.c ****  *
 302:FreeRTOS/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 303:FreeRTOS/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 304:FreeRTOS/tasks.c ****  */
 305:FreeRTOS/tasks.c **** #if ( ( INCLUDE_vTaskDelete == 1 ) || ( INCLUDE_vTaskCleanUpResources == 1 ) )
 306:FreeRTOS/tasks.c **** 	static void prvDeleteTCB( tskTCB *pxTCB );
 307:FreeRTOS/tasks.c **** #endif
 308:FreeRTOS/tasks.c **** 
 309:FreeRTOS/tasks.c **** /*
 310:FreeRTOS/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 311:FreeRTOS/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 312:FreeRTOS/tasks.c ****  * and its TCB deleted.
 313:FreeRTOS/tasks.c ****  */
 314:FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void );
 315:FreeRTOS/tasks.c **** 
 316:FreeRTOS/tasks.c **** /*
 317:FreeRTOS/tasks.c ****  * Allocates memory from the heap for a TCB and associated stack.  Checks the
 318:FreeRTOS/tasks.c ****  * allocation was successful.
 319:FreeRTOS/tasks.c ****  */
 320:FreeRTOS/tasks.c **** static tskTCB *prvAllocateTCBAndStack( unsigned portSHORT usStackDepth );
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 7


 321:FreeRTOS/tasks.c **** 
 322:FreeRTOS/tasks.c **** /*
 323:FreeRTOS/tasks.c ****  * Called from vTaskList.  vListTasks details all the tasks currently under
 324:FreeRTOS/tasks.c ****  * control of the scheduler.  The tasks may be in one of a number of lists.
 325:FreeRTOS/tasks.c ****  * prvListTaskWithinSingleList accepts a list and details the tasks from
 326:FreeRTOS/tasks.c ****  * within just that list.
 327:FreeRTOS/tasks.c ****  *
 328:FreeRTOS/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 329:FreeRTOS/tasks.c ****  * NORMAL APPLICATION CODE.
 330:FreeRTOS/tasks.c ****  */
 331:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 332:FreeRTOS/tasks.c **** 
 333:FreeRTOS/tasks.c **** 	static void prvListTaskWithinSingleList( const signed portCHAR *pcWriteBuffer, xList *pxList, sign
 334:FreeRTOS/tasks.c **** 
 335:FreeRTOS/tasks.c **** #endif
 336:FreeRTOS/tasks.c **** 
 337:FreeRTOS/tasks.c **** /*
 338:FreeRTOS/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 339:FreeRTOS/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 340:FreeRTOS/tasks.c ****  * determining how much of the stack remains at the original preset value.
 341:FreeRTOS/tasks.c ****  */
 342:FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 343:FreeRTOS/tasks.c **** 
 344:FreeRTOS/tasks.c **** 	unsigned portSHORT usTaskCheckFreeStackSpace( const unsigned portCHAR * pucStackByte );
 345:FreeRTOS/tasks.c **** 
 346:FreeRTOS/tasks.c **** #endif
 347:FreeRTOS/tasks.c **** 
 348:FreeRTOS/tasks.c **** 
 349:FreeRTOS/tasks.c **** /*lint +e956 */
 350:FreeRTOS/tasks.c **** 
 351:FreeRTOS/tasks.c **** 
 352:FreeRTOS/tasks.c **** 
 353:FreeRTOS/tasks.c **** /*-----------------------------------------------------------
 354:FreeRTOS/tasks.c ****  * TASK CREATION API documented in task.h
 355:FreeRTOS/tasks.c ****  *----------------------------------------------------------*/
 356:FreeRTOS/tasks.c **** 
 357:FreeRTOS/tasks.c **** signed portBASE_TYPE xTaskCreate( pdTASK_CODE pvTaskCode, const signed portCHAR * const pcName, uns
 358:FreeRTOS/tasks.c **** {
 359:FreeRTOS/tasks.c **** signed portBASE_TYPE xReturn;
 360:FreeRTOS/tasks.c **** tskTCB * pxNewTCB;
 361:FreeRTOS/tasks.c **** 
 362:FreeRTOS/tasks.c **** 	/* Allocate the memory required by the TCB and stack for the new task.
 363:FreeRTOS/tasks.c **** 	checking that the allocation was successful. */
 364:FreeRTOS/tasks.c **** 	pxNewTCB = prvAllocateTCBAndStack( usStackDepth );
 365:FreeRTOS/tasks.c **** 
 366:FreeRTOS/tasks.c **** 	if( pxNewTCB != NULL )
 367:FreeRTOS/tasks.c **** 	{		
 368:FreeRTOS/tasks.c **** 		portSTACK_TYPE *pxTopOfStack;
 369:FreeRTOS/tasks.c **** 
 370:FreeRTOS/tasks.c **** 		/* Setup the newly allocated TCB with the initial state of the task. */
 371:FreeRTOS/tasks.c **** 		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority );
 372:FreeRTOS/tasks.c **** 
 373:FreeRTOS/tasks.c **** 		/* Calculate the top of stack address.  This depends on whether the
 374:FreeRTOS/tasks.c **** 		stack grows from high memory to low (as per the 80x86) or visa versa.
 375:FreeRTOS/tasks.c **** 		portSTACK_GROWTH is used to make the result positive or negative as
 376:FreeRTOS/tasks.c **** 		required by the port. */
 377:FreeRTOS/tasks.c **** 		#if portSTACK_GROWTH < 0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 8


 378:FreeRTOS/tasks.c **** 		{
 379:FreeRTOS/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
 380:FreeRTOS/tasks.c **** 		}
 381:FreeRTOS/tasks.c **** 		#else
 382:FreeRTOS/tasks.c **** 		{
 383:FreeRTOS/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack;	
 384:FreeRTOS/tasks.c **** 
 385:FreeRTOS/tasks.c **** 			/* If we want to use stack checking on architectures that use
 386:FreeRTOS/tasks.c **** 			a positive stack growth direction then we also need to store the
 387:FreeRTOS/tasks.c **** 			other extreme of the stack space. */
 388:FreeRTOS/tasks.c **** 			pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
 389:FreeRTOS/tasks.c **** 		}
 390:FreeRTOS/tasks.c **** 		#endif
 391:FreeRTOS/tasks.c **** 
 392:FreeRTOS/tasks.c **** 		/* Initialize the TCB stack to look as if the task was already running,
 393:FreeRTOS/tasks.c **** 		but had been interrupted by the scheduler.  The return address is set
 394:FreeRTOS/tasks.c **** 		to the start of the task function. Once the stack has been initialised
 395:FreeRTOS/tasks.c **** 		the	top of stack variable is updated. */
 396:FreeRTOS/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pvTaskCode, pvParameters );
 397:FreeRTOS/tasks.c **** 
 398:FreeRTOS/tasks.c **** 		/* We are going to manipulate the task queues to add this task to a
 399:FreeRTOS/tasks.c **** 		ready list, so must make sure no interrupts occur. */
 400:FreeRTOS/tasks.c **** 		portENTER_CRITICAL();
 401:FreeRTOS/tasks.c **** 		{
 402:FreeRTOS/tasks.c **** 			uxCurrentNumberOfTasks++;
 403:FreeRTOS/tasks.c **** 			if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
 404:FreeRTOS/tasks.c **** 			{
 405:FreeRTOS/tasks.c **** 				/* As this is the first task it must also be the current task. */
 406:FreeRTOS/tasks.c **** 				pxCurrentTCB =  pxNewTCB;
 407:FreeRTOS/tasks.c **** 
 408:FreeRTOS/tasks.c **** 				/* This is the first task to be created so do the preliminary
 409:FreeRTOS/tasks.c **** 				initialisation required.  We will not recover if this call
 410:FreeRTOS/tasks.c **** 				fails, but we will report the failure. */
 411:FreeRTOS/tasks.c **** 				prvInitialiseTaskLists();
 412:FreeRTOS/tasks.c **** 			}
 413:FreeRTOS/tasks.c **** 			else
 414:FreeRTOS/tasks.c **** 			{	
 415:FreeRTOS/tasks.c **** 				/* If the scheduler is not already running, make this task the
 416:FreeRTOS/tasks.c **** 				current task if it is the highest priority task to be created
 417:FreeRTOS/tasks.c **** 				so far. */
 418:FreeRTOS/tasks.c **** 				if( xSchedulerRunning == pdFALSE )
 419:FreeRTOS/tasks.c **** 				{
 420:FreeRTOS/tasks.c **** 					if( pxCurrentTCB->uxPriority <= uxPriority )
 421:FreeRTOS/tasks.c **** 					{
 422:FreeRTOS/tasks.c **** 						pxCurrentTCB = pxNewTCB;	
 423:FreeRTOS/tasks.c **** 					}
 424:FreeRTOS/tasks.c **** 				}
 425:FreeRTOS/tasks.c **** 			}				
 426:FreeRTOS/tasks.c **** 
 427:FreeRTOS/tasks.c **** 			/* Remember the top priority to make context switching faster.  Use
 428:FreeRTOS/tasks.c **** 			the priority in pxNewTCB as this has been capped to a valid value. */
 429:FreeRTOS/tasks.c **** 			if( pxNewTCB->uxPriority > uxTopUsedPriority )
 430:FreeRTOS/tasks.c **** 			{
 431:FreeRTOS/tasks.c **** 				uxTopUsedPriority = pxNewTCB->uxPriority;
 432:FreeRTOS/tasks.c **** 			}
 433:FreeRTOS/tasks.c **** 
 434:FreeRTOS/tasks.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 9


 435:FreeRTOS/tasks.c **** 			{
 436:FreeRTOS/tasks.c **** 				/* Add a counter into the TCB for tracing only. */
 437:FreeRTOS/tasks.c **** 				pxNewTCB->uxTCBNumber = uxTaskNumber;
 438:FreeRTOS/tasks.c **** 				uxTaskNumber++;
 439:FreeRTOS/tasks.c **** 			}
 440:FreeRTOS/tasks.c **** 			#endif
 441:FreeRTOS/tasks.c **** 
 442:FreeRTOS/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 443:FreeRTOS/tasks.c **** 
 444:FreeRTOS/tasks.c **** 			xReturn = pdPASS;
 445:FreeRTOS/tasks.c **** 			traceTASK_CREATE( pxNewTCB );
 446:FreeRTOS/tasks.c **** 		}
 447:FreeRTOS/tasks.c **** 		portEXIT_CRITICAL();
 448:FreeRTOS/tasks.c **** 	}
 449:FreeRTOS/tasks.c **** 	else
 450:FreeRTOS/tasks.c **** 	{
 451:FreeRTOS/tasks.c **** 		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 452:FreeRTOS/tasks.c **** 		traceTASK_CREATE_FAILED( pxNewTCB );
 453:FreeRTOS/tasks.c **** 	}
 454:FreeRTOS/tasks.c **** 
 455:FreeRTOS/tasks.c **** 	if( xReturn == pdPASS )
 456:FreeRTOS/tasks.c **** 	{
 457:FreeRTOS/tasks.c **** 		if( ( void * ) pxCreatedTask != NULL )
 458:FreeRTOS/tasks.c **** 		{
 459:FreeRTOS/tasks.c **** 			/* Pass the TCB out - in an anonymous way.  The calling function/
 460:FreeRTOS/tasks.c **** 			task can use this as a handle to delete the task later if
 461:FreeRTOS/tasks.c **** 			required.*/
 462:FreeRTOS/tasks.c **** 			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
 463:FreeRTOS/tasks.c **** 		}
 464:FreeRTOS/tasks.c **** 
 465:FreeRTOS/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 466:FreeRTOS/tasks.c **** 		{
 467:FreeRTOS/tasks.c **** 			/* If the created task is of a higher priority than the current task
 468:FreeRTOS/tasks.c **** 			then it should run now. */
 469:FreeRTOS/tasks.c **** 			if( pxCurrentTCB->uxPriority < uxPriority )
 470:FreeRTOS/tasks.c **** 			{
 471:FreeRTOS/tasks.c **** 				taskYIELD();
 472:FreeRTOS/tasks.c **** 			}
 473:FreeRTOS/tasks.c **** 		}
 474:FreeRTOS/tasks.c **** 	}
 475:FreeRTOS/tasks.c **** 
 476:FreeRTOS/tasks.c **** 	return xReturn;
 477:FreeRTOS/tasks.c **** }
 478:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 479:FreeRTOS/tasks.c **** 
 480:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 481:FreeRTOS/tasks.c **** 
 482:FreeRTOS/tasks.c **** 	void vTaskDelete( xTaskHandle pxTaskToDelete )
 483:FreeRTOS/tasks.c **** 	{
 484:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
 485:FreeRTOS/tasks.c **** 
 486:FreeRTOS/tasks.c **** 		taskENTER_CRITICAL();
 487:FreeRTOS/tasks.c **** 		{
 488:FreeRTOS/tasks.c **** 			/* Ensure a yield is performed if the current task is being
 489:FreeRTOS/tasks.c **** 			deleted. */
 490:FreeRTOS/tasks.c **** 			if( pxTaskToDelete == pxCurrentTCB )
 491:FreeRTOS/tasks.c **** 			{
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 10


 492:FreeRTOS/tasks.c **** 				pxTaskToDelete = NULL;
 493:FreeRTOS/tasks.c **** 			}
 494:FreeRTOS/tasks.c **** 
 495:FreeRTOS/tasks.c **** 			/* If null is passed in here then we are deleting ourselves. */
 496:FreeRTOS/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToDelete );
 497:FreeRTOS/tasks.c **** 
 498:FreeRTOS/tasks.c **** 			traceTASK_DELETE( pxTCB );
 499:FreeRTOS/tasks.c **** 
 500:FreeRTOS/tasks.c **** 			/* Remove task from the ready list and place in the	termination list.
 501:FreeRTOS/tasks.c **** 			This will stop the task from be scheduled.  The idle task will check
 502:FreeRTOS/tasks.c **** 			the termination list and free up any memory allocated by the
 503:FreeRTOS/tasks.c **** 			scheduler for the TCB and stack. */
 504:FreeRTOS/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 505:FreeRTOS/tasks.c **** 
 506:FreeRTOS/tasks.c **** 			/* Is the task waiting on an event also? */												
 507:FreeRTOS/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 508:FreeRTOS/tasks.c **** 			{
 509:FreeRTOS/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 510:FreeRTOS/tasks.c **** 			}
 511:FreeRTOS/tasks.c **** 
 512:FreeRTOS/tasks.c **** 			vListInsertEnd( ( xList * ) &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
 513:FreeRTOS/tasks.c **** 
 514:FreeRTOS/tasks.c **** 			/* Increment the ucTasksDeleted variable so the idle task knows
 515:FreeRTOS/tasks.c **** 			there is a task that has been deleted and that it should therefore
 516:FreeRTOS/tasks.c **** 			check the xTasksWaitingTermination list. */
 517:FreeRTOS/tasks.c **** 			++uxTasksDeleted;
 518:FreeRTOS/tasks.c **** 		}
 519:FreeRTOS/tasks.c **** 		taskEXIT_CRITICAL();
 520:FreeRTOS/tasks.c **** 
 521:FreeRTOS/tasks.c **** 		/* Force a reschedule if we have just deleted the current task. */
 522:FreeRTOS/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 523:FreeRTOS/tasks.c **** 		{
 524:FreeRTOS/tasks.c **** 			if( ( void * ) pxTaskToDelete == NULL )
 525:FreeRTOS/tasks.c **** 			{
 526:FreeRTOS/tasks.c **** 				taskYIELD();
 527:FreeRTOS/tasks.c **** 			}
 528:FreeRTOS/tasks.c **** 		}
 529:FreeRTOS/tasks.c **** 	}
 530:FreeRTOS/tasks.c **** 
 531:FreeRTOS/tasks.c **** #endif
 532:FreeRTOS/tasks.c **** 
 533:FreeRTOS/tasks.c **** 
 534:FreeRTOS/tasks.c **** 
 535:FreeRTOS/tasks.c **** 
 536:FreeRTOS/tasks.c **** 
 537:FreeRTOS/tasks.c **** 
 538:FreeRTOS/tasks.c **** /*-----------------------------------------------------------
 539:FreeRTOS/tasks.c ****  * TASK CONTROL API documented in task.h
 540:FreeRTOS/tasks.c ****  *----------------------------------------------------------*/
 541:FreeRTOS/tasks.c **** 
 542:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 543:FreeRTOS/tasks.c **** 
 544:FreeRTOS/tasks.c **** 	void vTaskDelayUntil( portTickType * const pxPreviousWakeTime, portTickType xTimeIncrement )
 545:FreeRTOS/tasks.c **** 	{
 546:FreeRTOS/tasks.c **** 	portTickType xTimeToWake;
 547:FreeRTOS/tasks.c **** 	portBASE_TYPE xAlreadyYielded, xShouldDelay = pdFALSE;
 548:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 11


 549:FreeRTOS/tasks.c **** 		vTaskSuspendAll();
 550:FreeRTOS/tasks.c **** 		{
 551:FreeRTOS/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
 552:FreeRTOS/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 553:FreeRTOS/tasks.c **** 
 554:FreeRTOS/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 555:FreeRTOS/tasks.c **** 			{
 556:FreeRTOS/tasks.c **** 				/* The tick count has overflowed since this function was
 557:FreeRTOS/tasks.c **** 				lasted called.  In this case the only time we should ever
 558:FreeRTOS/tasks.c **** 				actually delay is if the wake time has also	overflowed,
 559:FreeRTOS/tasks.c **** 				and the wake time is greater than the tick time.  When this
 560:FreeRTOS/tasks.c **** 				is the case it is as if neither time had overflowed. */
 561:FreeRTOS/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xTickCount ) )
 562:FreeRTOS/tasks.c **** 				{
 563:FreeRTOS/tasks.c **** 					xShouldDelay = pdTRUE;
 564:FreeRTOS/tasks.c **** 				}
 565:FreeRTOS/tasks.c **** 			}
 566:FreeRTOS/tasks.c **** 			else
 567:FreeRTOS/tasks.c **** 			{
 568:FreeRTOS/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
 569:FreeRTOS/tasks.c **** 				delay if either the wake time has overflowed, and/or the
 570:FreeRTOS/tasks.c **** 				tick time is less than the wake time. */
 571:FreeRTOS/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
 572:FreeRTOS/tasks.c **** 				{
 573:FreeRTOS/tasks.c **** 					xShouldDelay = pdTRUE;
 574:FreeRTOS/tasks.c **** 				}
 575:FreeRTOS/tasks.c **** 			}
 576:FreeRTOS/tasks.c **** 
 577:FreeRTOS/tasks.c **** 			/* Update the wake time ready for the next call. */
 578:FreeRTOS/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 579:FreeRTOS/tasks.c **** 
 580:FreeRTOS/tasks.c **** 			if( xShouldDelay )
 581:FreeRTOS/tasks.c **** 			{
 582:FreeRTOS/tasks.c **** 				traceTASK_DELAY_UNTIL();
 583:FreeRTOS/tasks.c **** 
 584:FreeRTOS/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 585:FreeRTOS/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 586:FreeRTOS/tasks.c **** 				both lists. */
 587:FreeRTOS/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 588:FreeRTOS/tasks.c **** 
 589:FreeRTOS/tasks.c **** 				/* The list item will be inserted in wake time order. */
 590:FreeRTOS/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 591:FreeRTOS/tasks.c **** 
 592:FreeRTOS/tasks.c **** 				if( xTimeToWake < xTickCount )
 593:FreeRTOS/tasks.c **** 				{
 594:FreeRTOS/tasks.c **** 					/* Wake time has overflowed.  Place this item in the
 595:FreeRTOS/tasks.c **** 					overflow list. */
 596:FreeRTOS/tasks.c **** 					vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericL
 597:FreeRTOS/tasks.c **** 				}
 598:FreeRTOS/tasks.c **** 				else
 599:FreeRTOS/tasks.c **** 				{
 600:FreeRTOS/tasks.c **** 					/* The wake time has not overflowed, so we can use the
 601:FreeRTOS/tasks.c **** 					current block list. */
 602:FreeRTOS/tasks.c **** 					vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem 
 603:FreeRTOS/tasks.c **** 				}
 604:FreeRTOS/tasks.c **** 			}
 605:FreeRTOS/tasks.c **** 		}
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 12


 606:FreeRTOS/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 607:FreeRTOS/tasks.c **** 
 608:FreeRTOS/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 609:FreeRTOS/tasks.c **** 		have put ourselves to sleep. */
 610:FreeRTOS/tasks.c **** 		if( !xAlreadyYielded )
 611:FreeRTOS/tasks.c **** 		{
 612:FreeRTOS/tasks.c **** 			taskYIELD();
 613:FreeRTOS/tasks.c **** 		}
 614:FreeRTOS/tasks.c **** 	}	
 615:FreeRTOS/tasks.c **** 	
 616:FreeRTOS/tasks.c **** #endif
 617:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 618:FreeRTOS/tasks.c **** 
 619:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
 620:FreeRTOS/tasks.c **** 
 621:FreeRTOS/tasks.c **** 	void vTaskDelay( portTickType xTicksToDelay )
 622:FreeRTOS/tasks.c **** 	{
 623:FreeRTOS/tasks.c **** 	portTickType xTimeToWake;
 624:FreeRTOS/tasks.c **** 	signed portBASE_TYPE xAlreadyYielded = pdFALSE;
 625:FreeRTOS/tasks.c **** 
 626:FreeRTOS/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
 627:FreeRTOS/tasks.c **** 		if( xTicksToDelay > ( portTickType ) 0 )
 628:FreeRTOS/tasks.c **** 		{
 629:FreeRTOS/tasks.c **** 			vTaskSuspendAll();
 630:FreeRTOS/tasks.c **** 			{
 631:FreeRTOS/tasks.c **** 				traceTASK_DELAY();
 632:FreeRTOS/tasks.c **** 
 633:FreeRTOS/tasks.c **** 				/* A task that is removed from the event list while the
 634:FreeRTOS/tasks.c **** 				scheduler is suspended will not get placed in the ready
 635:FreeRTOS/tasks.c **** 				list or removed from the blocked list until the scheduler
 636:FreeRTOS/tasks.c **** 				is resumed.
 637:FreeRTOS/tasks.c **** 				
 638:FreeRTOS/tasks.c **** 				This task cannot be in an event list as it is the currently
 639:FreeRTOS/tasks.c **** 				executing task. */
 640:FreeRTOS/tasks.c **** 
 641:FreeRTOS/tasks.c **** 				/* Calculate the time to wake - this may overflow but this is
 642:FreeRTOS/tasks.c **** 				not a problem. */
 643:FreeRTOS/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 644:FreeRTOS/tasks.c **** 
 645:FreeRTOS/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 646:FreeRTOS/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 647:FreeRTOS/tasks.c **** 				both lists. */
 648:FreeRTOS/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 649:FreeRTOS/tasks.c **** 
 650:FreeRTOS/tasks.c **** 				/* The list item will be inserted in wake time order. */
 651:FreeRTOS/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 652:FreeRTOS/tasks.c **** 
 653:FreeRTOS/tasks.c **** 				if( xTimeToWake < xTickCount )
 654:FreeRTOS/tasks.c **** 				{
 655:FreeRTOS/tasks.c **** 					/* Wake time has overflowed.  Place this item in the
 656:FreeRTOS/tasks.c **** 					overflow list. */
 657:FreeRTOS/tasks.c **** 					vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericL
 658:FreeRTOS/tasks.c **** 				}
 659:FreeRTOS/tasks.c **** 				else
 660:FreeRTOS/tasks.c **** 				{
 661:FreeRTOS/tasks.c **** 					/* The wake time has not overflowed, so we can use the
 662:FreeRTOS/tasks.c **** 					current block list. */
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 13


 663:FreeRTOS/tasks.c **** 					vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem 
 664:FreeRTOS/tasks.c **** 				}
 665:FreeRTOS/tasks.c **** 			}
 666:FreeRTOS/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 667:FreeRTOS/tasks.c **** 		}
 668:FreeRTOS/tasks.c **** 		
 669:FreeRTOS/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 670:FreeRTOS/tasks.c **** 		have put ourselves to sleep. */
 671:FreeRTOS/tasks.c **** 		if( !xAlreadyYielded )
 672:FreeRTOS/tasks.c **** 		{
 673:FreeRTOS/tasks.c **** 			taskYIELD();
 674:FreeRTOS/tasks.c **** 		}
 675:FreeRTOS/tasks.c **** 	}
 676:FreeRTOS/tasks.c **** 	
 677:FreeRTOS/tasks.c **** #endif
 678:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 679:FreeRTOS/tasks.c **** 
 680:FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 681:FreeRTOS/tasks.c **** 
 682:FreeRTOS/tasks.c **** 	unsigned portBASE_TYPE uxTaskPriorityGet( xTaskHandle pxTask )
 683:FreeRTOS/tasks.c **** 	{
 684:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
 685:FreeRTOS/tasks.c **** 	unsigned portBASE_TYPE uxReturn;
 686:FreeRTOS/tasks.c **** 
 687:FreeRTOS/tasks.c **** 		taskENTER_CRITICAL();
 688:FreeRTOS/tasks.c **** 		{
 689:FreeRTOS/tasks.c **** 			/* If null is passed in here then we are changing the
 690:FreeRTOS/tasks.c **** 			priority of the calling function. */
 691:FreeRTOS/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 692:FreeRTOS/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 693:FreeRTOS/tasks.c **** 		}
 694:FreeRTOS/tasks.c **** 		taskEXIT_CRITICAL();
 695:FreeRTOS/tasks.c **** 
 696:FreeRTOS/tasks.c **** 		return uxReturn;
 697:FreeRTOS/tasks.c **** 	}
 698:FreeRTOS/tasks.c **** 
 699:FreeRTOS/tasks.c **** #endif
 700:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 701:FreeRTOS/tasks.c **** 
 702:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 703:FreeRTOS/tasks.c **** 
 704:FreeRTOS/tasks.c **** 	void vTaskPrioritySet( xTaskHandle pxTask, unsigned portBASE_TYPE uxNewPriority )
 705:FreeRTOS/tasks.c **** 	{
 706:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
 707:FreeRTOS/tasks.c **** 	unsigned portBASE_TYPE uxCurrentPriority, xYieldRequired = pdFALSE;
 708:FreeRTOS/tasks.c **** 
 709:FreeRTOS/tasks.c **** 		/* Ensure the new priority is valid. */
 710:FreeRTOS/tasks.c **** 		if( uxNewPriority >= configMAX_PRIORITIES )
 711:FreeRTOS/tasks.c **** 		{
 712:FreeRTOS/tasks.c **** 			uxNewPriority = configMAX_PRIORITIES - 1;
 713:FreeRTOS/tasks.c **** 		}
 714:FreeRTOS/tasks.c **** 
 715:FreeRTOS/tasks.c **** 		taskENTER_CRITICAL();
 716:FreeRTOS/tasks.c **** 		{
 717:FreeRTOS/tasks.c **** 			if( pxTask == pxCurrentTCB )
 718:FreeRTOS/tasks.c **** 			{
 719:FreeRTOS/tasks.c **** 				pxTask = NULL;
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 14


 720:FreeRTOS/tasks.c **** 			}
 721:FreeRTOS/tasks.c **** 
 722:FreeRTOS/tasks.c **** 			/* If null is passed in here then we are changing the
 723:FreeRTOS/tasks.c **** 			priority of the calling function. */
 724:FreeRTOS/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 725:FreeRTOS/tasks.c **** 			
 726:FreeRTOS/tasks.c **** 			traceTASK_PRIORITY_SET( pxTask, uxNewPriority );
 727:FreeRTOS/tasks.c **** 
 728:FreeRTOS/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
 729:FreeRTOS/tasks.c **** 			{
 730:FreeRTOS/tasks.c **** 				uxCurrentPriority = pxTCB->uxBasePriority;
 731:FreeRTOS/tasks.c **** 			}
 732:FreeRTOS/tasks.c **** 			#else
 733:FreeRTOS/tasks.c **** 			{
 734:FreeRTOS/tasks.c **** 				uxCurrentPriority = pxTCB->uxPriority;
 735:FreeRTOS/tasks.c **** 			}
 736:FreeRTOS/tasks.c **** 			#endif
 737:FreeRTOS/tasks.c **** 
 738:FreeRTOS/tasks.c **** 			if( uxCurrentPriority != uxNewPriority )
 739:FreeRTOS/tasks.c **** 			{
 740:FreeRTOS/tasks.c **** 				/* The priority change may have readied a task of higher
 741:FreeRTOS/tasks.c **** 				priority than the calling task. */
 742:FreeRTOS/tasks.c **** 				if( uxNewPriority > uxCurrentPriority )
 743:FreeRTOS/tasks.c **** 				{
 744:FreeRTOS/tasks.c **** 					if( pxTask != NULL )
 745:FreeRTOS/tasks.c **** 					{
 746:FreeRTOS/tasks.c **** 						/* The priority of another task is being raised.  If we
 747:FreeRTOS/tasks.c **** 						were raising the priority of the currently running task
 748:FreeRTOS/tasks.c **** 						there would be no need to switch as it must have already
 749:FreeRTOS/tasks.c **** 						been the highest priority task. */
 750:FreeRTOS/tasks.c **** 						xYieldRequired = pdTRUE;
 751:FreeRTOS/tasks.c **** 					}
 752:FreeRTOS/tasks.c **** 				}
 753:FreeRTOS/tasks.c **** 				else if( pxTask == NULL )
 754:FreeRTOS/tasks.c **** 				{
 755:FreeRTOS/tasks.c **** 					/* Setting our own priority down means there may now be another
 756:FreeRTOS/tasks.c **** 					task of higher priority that is ready to execute. */
 757:FreeRTOS/tasks.c **** 					xYieldRequired = pdTRUE;
 758:FreeRTOS/tasks.c **** 				}
 759:FreeRTOS/tasks.c **** 			
 760:FreeRTOS/tasks.c **** 				
 761:FreeRTOS/tasks.c **** 
 762:FreeRTOS/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
 763:FreeRTOS/tasks.c **** 				{
 764:FreeRTOS/tasks.c **** 					/* Only change the priority being used if the task is not
 765:FreeRTOS/tasks.c **** 					currently using an inherited priority. */
 766:FreeRTOS/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 767:FreeRTOS/tasks.c **** 					{
 768:FreeRTOS/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 769:FreeRTOS/tasks.c **** 					}
 770:FreeRTOS/tasks.c **** 					
 771:FreeRTOS/tasks.c **** 					/* The base priority gets set whatever. */
 772:FreeRTOS/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;					
 773:FreeRTOS/tasks.c **** 				}
 774:FreeRTOS/tasks.c **** 				#else
 775:FreeRTOS/tasks.c **** 				{
 776:FreeRTOS/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 15


 777:FreeRTOS/tasks.c **** 				}
 778:FreeRTOS/tasks.c **** 				#endif
 779:FreeRTOS/tasks.c **** 
 780:FreeRTOS/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( configMAX_PRIORITIES - ( portTickType ) 
 781:FreeRTOS/tasks.c **** 
 782:FreeRTOS/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
 783:FreeRTOS/tasks.c **** 				nothing more than change it's priority variable. However, if
 784:FreeRTOS/tasks.c **** 				the task is in a ready list it needs to be removed and placed
 785:FreeRTOS/tasks.c **** 				in the queue appropriate to its new priority. */
 786:FreeRTOS/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 787:FreeRTOS/tasks.c **** 				{
 788:FreeRTOS/tasks.c **** 					/* The task is currently in its ready list - remove before adding
 789:FreeRTOS/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
 790:FreeRTOS/tasks.c **** 					can do this even if the scheduler is suspended. */
 791:FreeRTOS/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 792:FreeRTOS/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 793:FreeRTOS/tasks.c **** 				}			
 794:FreeRTOS/tasks.c **** 				
 795:FreeRTOS/tasks.c **** 				if( xYieldRequired == pdTRUE )
 796:FreeRTOS/tasks.c **** 				{
 797:FreeRTOS/tasks.c **** 					taskYIELD();
 798:FreeRTOS/tasks.c **** 				}				
 799:FreeRTOS/tasks.c **** 			}
 800:FreeRTOS/tasks.c **** 		}
 801:FreeRTOS/tasks.c **** 		taskEXIT_CRITICAL();
 802:FreeRTOS/tasks.c **** 	}
 803:FreeRTOS/tasks.c **** 
 804:FreeRTOS/tasks.c **** #endif
 805:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 806:FreeRTOS/tasks.c **** 
 807:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 808:FreeRTOS/tasks.c **** 
 809:FreeRTOS/tasks.c **** 	void vTaskSuspend( xTaskHandle pxTaskToSuspend )
 810:FreeRTOS/tasks.c **** 	{
 811:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
 812:FreeRTOS/tasks.c **** 
 813:FreeRTOS/tasks.c **** 		taskENTER_CRITICAL();
 814:FreeRTOS/tasks.c **** 		{
 815:FreeRTOS/tasks.c **** 			/* Ensure a yield is performed if the current task is being
 816:FreeRTOS/tasks.c **** 			suspended. */
 817:FreeRTOS/tasks.c **** 			if( pxTaskToSuspend == pxCurrentTCB )
 818:FreeRTOS/tasks.c **** 			{
 819:FreeRTOS/tasks.c **** 				pxTaskToSuspend = NULL;
 820:FreeRTOS/tasks.c **** 			}
 821:FreeRTOS/tasks.c **** 
 822:FreeRTOS/tasks.c **** 			/* If null is passed in here then we are suspending ourselves. */
 823:FreeRTOS/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToSuspend );
 824:FreeRTOS/tasks.c **** 
 825:FreeRTOS/tasks.c **** 			traceTASK_SUSPEND( pxTaskToSuspend );
 826:FreeRTOS/tasks.c **** 
 827:FreeRTOS/tasks.c **** 			/* Remove task from the ready/delayed list and place in the	suspended list. */
 828:FreeRTOS/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 829:FreeRTOS/tasks.c **** 
 830:FreeRTOS/tasks.c **** 			/* Is the task waiting on an event also? */												
 831:FreeRTOS/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 832:FreeRTOS/tasks.c **** 			{
 833:FreeRTOS/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 16


 834:FreeRTOS/tasks.c **** 			}
 835:FreeRTOS/tasks.c **** 
 836:FreeRTOS/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, &( pxTCB->xGenericListItem ) );
 837:FreeRTOS/tasks.c **** 		}
 838:FreeRTOS/tasks.c **** 		taskEXIT_CRITICAL();
 839:FreeRTOS/tasks.c **** 
 840:FreeRTOS/tasks.c **** 		/* We may have just suspended the current task. */
 841:FreeRTOS/tasks.c **** 		if( ( void * ) pxTaskToSuspend == NULL )
 842:FreeRTOS/tasks.c **** 		{
 843:FreeRTOS/tasks.c **** 			taskYIELD();
 844:FreeRTOS/tasks.c **** 		}
 845:FreeRTOS/tasks.c **** 	}
 846:FreeRTOS/tasks.c **** 
 847:FreeRTOS/tasks.c **** #endif
 848:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 849:FreeRTOS/tasks.c **** 
 850:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 851:FreeRTOS/tasks.c **** 
 852:FreeRTOS/tasks.c **** 	signed portBASE_TYPE xTaskIsTaskSuspended( xTaskHandle xTask )
 853:FreeRTOS/tasks.c **** 	{
  19              		.loc 1 853 0
  20              	.LVL0:
 854:FreeRTOS/tasks.c **** 	portBASE_TYPE xReturn = pdFALSE;
 855:FreeRTOS/tasks.c **** 	const tskTCB * const pxTCB = ( tskTCB * ) xTask;
 856:FreeRTOS/tasks.c **** 
 857:FreeRTOS/tasks.c **** 		/* Is the task we are attempting to resume actually in the
 858:FreeRTOS/tasks.c **** 		suspended list? */
 859:FreeRTOS/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
  21              		.loc 1 859 0
  22 0000 074A     		ldr	r2, .L8
  23 0002 4369     		ldr	r3, [r0, #20]
  24              		.loc 1 853 0
  25              		@ lr needed for prologue
  26              		.loc 1 859 0
  27 0004 9342     		cmp	r3, r2
  28 0006 09D1     		bne	.L2
 860:FreeRTOS/tasks.c **** 		{
 861:FreeRTOS/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
 862:FreeRTOS/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
  29              		.loc 1 862 0
  30 0008 806A     		ldr	r0, [r0, #40]
  31              	.LVL1:
  32 000a 064B     		ldr	r3, .L8+4
  33 000c 9842     		cmp	r0, r3
  34 000e 05D0     		beq	.L2
  35 0010 0023     		mov	r3, #0
  36 0012 0028     		cmp	r0, #0
  37 0014 00D1     		bne	.L5
  38 0016 0123     		mov	r3, #1
  39              	.L5:
  40 0018 181C     		mov	r0, r3
  41              	.LVL2:
  42 001a 00E0     		b	.L6
  43              	.LVL3:
  44              	.L2:
  45 001c 0020     		mov	r0, #0
  46              	.LVL4:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 17


  47              	.L6:
  48              	.LVL5:
 863:FreeRTOS/tasks.c **** 			{			
 864:FreeRTOS/tasks.c **** 				/* Is it in the suspended list because it is in the
 865:FreeRTOS/tasks.c **** 				Suspended state?  It is possible to be in the suspended
 866:FreeRTOS/tasks.c **** 				list because it is blocked on a task with no timeout
 867:FreeRTOS/tasks.c **** 				specified. */
 868:FreeRTOS/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) == pdTRUE )
 869:FreeRTOS/tasks.c **** 				{
 870:FreeRTOS/tasks.c **** 					xReturn = pdTRUE;
 871:FreeRTOS/tasks.c **** 				}
 872:FreeRTOS/tasks.c **** 			}
 873:FreeRTOS/tasks.c **** 		}
 874:FreeRTOS/tasks.c **** 
 875:FreeRTOS/tasks.c **** 		return xReturn;
 876:FreeRTOS/tasks.c **** 	}
  49              		.loc 1 876 0
  50              		@ sp needed for prologue
  51 001e 7047     		bx	lr
  52              	.L9:
  53              		.align	2
  54              	.L8:
  55 0020 E8000000 		.word	xSuspendedTaskList
  56 0024 C0000000 		.word	xPendingReadyList
  57              	.LFE9:
  58              		.size	xTaskIsTaskSuspended, .-xTaskIsTaskSuspended
  59              		.align	2
  60              		.global	vTaskSwitchContext
  61              		.code 16
  62              		.thumb_func
  63              		.type	vTaskSwitchContext, %function
  64              	vTaskSwitchContext:
  65              	.LFB19:
 877:FreeRTOS/tasks.c **** 
 878:FreeRTOS/tasks.c **** #endif
 879:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 880:FreeRTOS/tasks.c **** 
 881:FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 882:FreeRTOS/tasks.c **** 
 883:FreeRTOS/tasks.c **** 	void vTaskResume( xTaskHandle pxTaskToResume )
 884:FreeRTOS/tasks.c **** 	{
 885:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
 886:FreeRTOS/tasks.c **** 
 887:FreeRTOS/tasks.c **** 		/* Remove the task from whichever list it is currently in, and place
 888:FreeRTOS/tasks.c **** 		it in the ready list. */
 889:FreeRTOS/tasks.c **** 		pxTCB = ( tskTCB * ) pxTaskToResume;
 890:FreeRTOS/tasks.c **** 
 891:FreeRTOS/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
 892:FreeRTOS/tasks.c **** 		currently executing task. */
 893:FreeRTOS/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 894:FreeRTOS/tasks.c **** 		{
 895:FreeRTOS/tasks.c **** 			taskENTER_CRITICAL();
 896:FreeRTOS/tasks.c **** 			{
 897:FreeRTOS/tasks.c **** 				if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 898:FreeRTOS/tasks.c **** 				{
 899:FreeRTOS/tasks.c **** 					traceTASK_RESUME( pxTCB );
 900:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 18


 901:FreeRTOS/tasks.c **** 					/* As we are in a critical section we can access the ready
 902:FreeRTOS/tasks.c **** 					lists even if the scheduler is suspended. */
 903:FreeRTOS/tasks.c **** 					vListRemove(  &( pxTCB->xGenericListItem ) );
 904:FreeRTOS/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 905:FreeRTOS/tasks.c **** 
 906:FreeRTOS/tasks.c **** 					/* We may have just resumed a higher priority task. */
 907:FreeRTOS/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 908:FreeRTOS/tasks.c **** 					{
 909:FreeRTOS/tasks.c **** 						/* This yield may not cause the task just resumed to run, but
 910:FreeRTOS/tasks.c **** 						will leave the lists in the correct state for the next yield. */
 911:FreeRTOS/tasks.c **** 						taskYIELD();
 912:FreeRTOS/tasks.c **** 					}
 913:FreeRTOS/tasks.c **** 				}
 914:FreeRTOS/tasks.c **** 			}
 915:FreeRTOS/tasks.c **** 			taskEXIT_CRITICAL();
 916:FreeRTOS/tasks.c **** 		}
 917:FreeRTOS/tasks.c **** 	}
 918:FreeRTOS/tasks.c **** 
 919:FreeRTOS/tasks.c **** #endif
 920:FreeRTOS/tasks.c **** 
 921:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 922:FreeRTOS/tasks.c **** 
 923:FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
 924:FreeRTOS/tasks.c **** 
 925:FreeRTOS/tasks.c **** 	portBASE_TYPE xTaskResumeFromISR( xTaskHandle pxTaskToResume )
 926:FreeRTOS/tasks.c **** 	{
 927:FreeRTOS/tasks.c **** 	portBASE_TYPE xYieldRequired = pdFALSE;
 928:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
 929:FreeRTOS/tasks.c **** 
 930:FreeRTOS/tasks.c **** 		pxTCB = ( tskTCB * ) pxTaskToResume;
 931:FreeRTOS/tasks.c **** 
 932:FreeRTOS/tasks.c **** 		if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 933:FreeRTOS/tasks.c **** 		{
 934:FreeRTOS/tasks.c **** 			traceTASK_RESUME_FROM_ISR( pxTCB );
 935:FreeRTOS/tasks.c **** 
 936:FreeRTOS/tasks.c **** 			if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 937:FreeRTOS/tasks.c **** 			{
 938:FreeRTOS/tasks.c **** 				xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
 939:FreeRTOS/tasks.c **** 				vListRemove(  &( pxTCB->xGenericListItem ) );	
 940:FreeRTOS/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 941:FreeRTOS/tasks.c **** 			}
 942:FreeRTOS/tasks.c **** 			else
 943:FreeRTOS/tasks.c **** 			{
 944:FreeRTOS/tasks.c **** 				/* We cannot access the delayed or ready lists, so will hold this
 945:FreeRTOS/tasks.c **** 				task pending until the scheduler is resumed, at which point a
 946:FreeRTOS/tasks.c **** 				yield will be performed if necessary. */
 947:FreeRTOS/tasks.c **** 				vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 948:FreeRTOS/tasks.c **** 			}
 949:FreeRTOS/tasks.c **** 		}
 950:FreeRTOS/tasks.c **** 
 951:FreeRTOS/tasks.c **** 		return xYieldRequired;
 952:FreeRTOS/tasks.c **** 	}
 953:FreeRTOS/tasks.c **** 
 954:FreeRTOS/tasks.c **** #endif
 955:FreeRTOS/tasks.c **** 
 956:FreeRTOS/tasks.c **** 
 957:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 19


 958:FreeRTOS/tasks.c **** 
 959:FreeRTOS/tasks.c **** /*-----------------------------------------------------------
 960:FreeRTOS/tasks.c ****  * PUBLIC SCHEDULER CONTROL documented in task.h
 961:FreeRTOS/tasks.c ****  *----------------------------------------------------------*/
 962:FreeRTOS/tasks.c **** 
 963:FreeRTOS/tasks.c **** 
 964:FreeRTOS/tasks.c **** void vTaskStartScheduler( void )
 965:FreeRTOS/tasks.c **** {
 966:FreeRTOS/tasks.c **** portBASE_TYPE xReturn;
 967:FreeRTOS/tasks.c **** 
 968:FreeRTOS/tasks.c **** 	/* Add the idle task at the lowest priority. */
 969:FreeRTOS/tasks.c **** 	xReturn = xTaskCreate( prvIdleTask, ( signed portCHAR * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) N
 970:FreeRTOS/tasks.c **** 
 971:FreeRTOS/tasks.c **** 	if( xReturn == pdPASS )
 972:FreeRTOS/tasks.c **** 	{
 973:FreeRTOS/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
 974:FreeRTOS/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
 975:FreeRTOS/tasks.c **** 		the created tasks contain a status word with interrupts switched on
 976:FreeRTOS/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
 977:FreeRTOS/tasks.c **** 		starts to run.
 978:FreeRTOS/tasks.c **** 		
 979:FreeRTOS/tasks.c **** 		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
 980:FreeRTOS/tasks.c **** 		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
 981:FreeRTOS/tasks.c **** 		portDISABLE_INTERRUPTS();
 982:FreeRTOS/tasks.c **** 
 983:FreeRTOS/tasks.c **** 		xSchedulerRunning = pdTRUE;
 984:FreeRTOS/tasks.c **** 		xTickCount = ( portTickType ) 0;
 985:FreeRTOS/tasks.c **** 
 986:FreeRTOS/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
 987:FreeRTOS/tasks.c **** 		portable interface. */
 988:FreeRTOS/tasks.c **** 		if( xPortStartScheduler() )
 989:FreeRTOS/tasks.c **** 		{
 990:FreeRTOS/tasks.c **** 			/* Should not reach here as if the scheduler is running the
 991:FreeRTOS/tasks.c **** 			function will not return. */
 992:FreeRTOS/tasks.c **** 		}
 993:FreeRTOS/tasks.c **** 		else
 994:FreeRTOS/tasks.c **** 		{
 995:FreeRTOS/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
 996:FreeRTOS/tasks.c **** 		}
 997:FreeRTOS/tasks.c **** 	}
 998:FreeRTOS/tasks.c **** }
 999:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1000:FreeRTOS/tasks.c **** 
1001:FreeRTOS/tasks.c **** void vTaskEndScheduler( void )
1002:FreeRTOS/tasks.c **** {
1003:FreeRTOS/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1004:FreeRTOS/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1005:FreeRTOS/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1006:FreeRTOS/tasks.c **** 	portDISABLE_INTERRUPTS();
1007:FreeRTOS/tasks.c **** 	xSchedulerRunning = pdFALSE;
1008:FreeRTOS/tasks.c **** 	vPortEndScheduler();
1009:FreeRTOS/tasks.c **** }
1010:FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
1011:FreeRTOS/tasks.c **** 
1012:FreeRTOS/tasks.c **** void vTaskSuspendAll( void )
1013:FreeRTOS/tasks.c **** {
1014:FreeRTOS/tasks.c **** 	portENTER_CRITICAL();
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 20


1015:FreeRTOS/tasks.c **** 		++uxSchedulerSuspended;
1016:FreeRTOS/tasks.c **** 	portEXIT_CRITICAL();
1017:FreeRTOS/tasks.c **** }
1018:FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
1019:FreeRTOS/tasks.c **** 
1020:FreeRTOS/tasks.c **** signed portBASE_TYPE xTaskResumeAll( void )
1021:FreeRTOS/tasks.c **** {
1022:FreeRTOS/tasks.c **** register tskTCB *pxTCB;
1023:FreeRTOS/tasks.c **** signed portBASE_TYPE xAlreadyYielded = pdFALSE;
1024:FreeRTOS/tasks.c **** 
1025:FreeRTOS/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
1026:FreeRTOS/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
1027:FreeRTOS/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
1028:FreeRTOS/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
1029:FreeRTOS/tasks.c **** 	tasks from this list into their appropriate ready list. */
1030:FreeRTOS/tasks.c **** 	portENTER_CRITICAL();
1031:FreeRTOS/tasks.c **** 	{
1032:FreeRTOS/tasks.c **** 		--uxSchedulerSuspended;
1033:FreeRTOS/tasks.c **** 
1034:FreeRTOS/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1035:FreeRTOS/tasks.c **** 		{			
1036:FreeRTOS/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
1037:FreeRTOS/tasks.c **** 			{
1038:FreeRTOS/tasks.c **** 				portBASE_TYPE xYieldRequired = pdFALSE;
1039:FreeRTOS/tasks.c **** 				
1040:FreeRTOS/tasks.c **** 				/* Move any readied tasks from the pending list into the
1041:FreeRTOS/tasks.c **** 				appropriate ready list. */
1042:FreeRTOS/tasks.c **** 				while( ( pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) 
1043:FreeRTOS/tasks.c **** 				{
1044:FreeRTOS/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
1045:FreeRTOS/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
1046:FreeRTOS/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
1047:FreeRTOS/tasks.c **** 					
1048:FreeRTOS/tasks.c **** 					/* If we have moved a task that has a priority higher than
1049:FreeRTOS/tasks.c **** 					the current task then we should yield. */
1050:FreeRTOS/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1051:FreeRTOS/tasks.c **** 					{
1052:FreeRTOS/tasks.c **** 						xYieldRequired = pdTRUE;
1053:FreeRTOS/tasks.c **** 					}
1054:FreeRTOS/tasks.c **** 				}
1055:FreeRTOS/tasks.c **** 
1056:FreeRTOS/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
1057:FreeRTOS/tasks.c **** 				they should be processed now.  This ensures the tick count does not
1058:FreeRTOS/tasks.c **** 				slip, and that any delayed tasks are resumed at the correct time. */
1059:FreeRTOS/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
1060:FreeRTOS/tasks.c **** 				{
1061:FreeRTOS/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
1062:FreeRTOS/tasks.c **** 					{
1063:FreeRTOS/tasks.c **** 						vTaskIncrementTick();
1064:FreeRTOS/tasks.c **** 						--uxMissedTicks;
1065:FreeRTOS/tasks.c **** 					}
1066:FreeRTOS/tasks.c **** 
1067:FreeRTOS/tasks.c **** 					/* As we have processed some ticks it is appropriate to yield
1068:FreeRTOS/tasks.c **** 					to ensure the highest priority task that is ready to run is
1069:FreeRTOS/tasks.c **** 					the task actually running. */
1070:FreeRTOS/tasks.c ****    					#if configUSE_PREEMPTION == 1
1071:FreeRTOS/tasks.c **** 					{
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 21


1072:FreeRTOS/tasks.c **** 						xYieldRequired = pdTRUE;
1073:FreeRTOS/tasks.c **** 					}
1074:FreeRTOS/tasks.c **** 					#endif
1075:FreeRTOS/tasks.c **** 				}
1076:FreeRTOS/tasks.c **** 				
1077:FreeRTOS/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
1078:FreeRTOS/tasks.c **** 				{
1079:FreeRTOS/tasks.c **** 					xAlreadyYielded = pdTRUE;
1080:FreeRTOS/tasks.c **** 					xMissedYield = pdFALSE;
1081:FreeRTOS/tasks.c **** 					taskYIELD();
1082:FreeRTOS/tasks.c **** 				}
1083:FreeRTOS/tasks.c **** 			}
1084:FreeRTOS/tasks.c **** 		}
1085:FreeRTOS/tasks.c **** 	}
1086:FreeRTOS/tasks.c **** 	portEXIT_CRITICAL();
1087:FreeRTOS/tasks.c **** 
1088:FreeRTOS/tasks.c **** 	return xAlreadyYielded;
1089:FreeRTOS/tasks.c **** }
1090:FreeRTOS/tasks.c **** 
1091:FreeRTOS/tasks.c **** 
1092:FreeRTOS/tasks.c **** 
1093:FreeRTOS/tasks.c **** 
1094:FreeRTOS/tasks.c **** 
1095:FreeRTOS/tasks.c **** 
1096:FreeRTOS/tasks.c **** /*-----------------------------------------------------------
1097:FreeRTOS/tasks.c ****  * PUBLIC TASK UTILITIES documented in task.h
1098:FreeRTOS/tasks.c ****  *----------------------------------------------------------*/
1099:FreeRTOS/tasks.c **** 
1100:FreeRTOS/tasks.c **** 
1101:FreeRTOS/tasks.c **** 
1102:FreeRTOS/tasks.c **** portTickType xTaskGetTickCount( void )
1103:FreeRTOS/tasks.c **** {
1104:FreeRTOS/tasks.c **** portTickType xTicks;
1105:FreeRTOS/tasks.c **** 
1106:FreeRTOS/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
1107:FreeRTOS/tasks.c **** 	taskENTER_CRITICAL();
1108:FreeRTOS/tasks.c **** 	{
1109:FreeRTOS/tasks.c **** 		xTicks = xTickCount;
1110:FreeRTOS/tasks.c **** 	}
1111:FreeRTOS/tasks.c **** 	taskEXIT_CRITICAL();
1112:FreeRTOS/tasks.c **** 
1113:FreeRTOS/tasks.c **** 	return xTicks;
1114:FreeRTOS/tasks.c **** }
1115:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1116:FreeRTOS/tasks.c **** 
1117:FreeRTOS/tasks.c **** unsigned portBASE_TYPE uxTaskGetNumberOfTasks( void )
1118:FreeRTOS/tasks.c **** {
1119:FreeRTOS/tasks.c **** unsigned portBASE_TYPE uxNumberOfTasks;
1120:FreeRTOS/tasks.c **** 
1121:FreeRTOS/tasks.c **** 	taskENTER_CRITICAL();
1122:FreeRTOS/tasks.c **** 		uxNumberOfTasks = uxCurrentNumberOfTasks;
1123:FreeRTOS/tasks.c **** 	taskEXIT_CRITICAL();
1124:FreeRTOS/tasks.c **** 
1125:FreeRTOS/tasks.c **** 	return uxNumberOfTasks;
1126:FreeRTOS/tasks.c **** }
1127:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1128:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 22


1129:FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_vTaskDelete == 1 ) && ( INCLUDE_vTaskSuspend =
1130:FreeRTOS/tasks.c **** 
1131:FreeRTOS/tasks.c **** 	void vTaskList( signed portCHAR *pcWriteBuffer )
1132:FreeRTOS/tasks.c **** 	{
1133:FreeRTOS/tasks.c **** 	unsigned portBASE_TYPE uxQueue;
1134:FreeRTOS/tasks.c **** 
1135:FreeRTOS/tasks.c **** 		/* This is a VERY costly function that should be used for debug only.
1136:FreeRTOS/tasks.c **** 		It leaves interrupts disabled for a LONG time. */
1137:FreeRTOS/tasks.c **** 
1138:FreeRTOS/tasks.c ****         vTaskSuspendAll();
1139:FreeRTOS/tasks.c **** 		{
1140:FreeRTOS/tasks.c **** 			/* Run through all the lists that could potentially contain a TCB and
1141:FreeRTOS/tasks.c **** 			report the task name, state and stack high water mark. */
1142:FreeRTOS/tasks.c **** 
1143:FreeRTOS/tasks.c **** 			pcWriteBuffer[ 0 ] = ( signed portCHAR ) 0x00;
1144:FreeRTOS/tasks.c **** 			strcat( ( portCHAR * ) pcWriteBuffer, ( const portCHAR * ) "\r\n" );
1145:FreeRTOS/tasks.c **** 
1146:FreeRTOS/tasks.c **** 			uxQueue = uxTopUsedPriority + 1;
1147:FreeRTOS/tasks.c **** 
1148:FreeRTOS/tasks.c **** 			do
1149:FreeRTOS/tasks.c **** 			{
1150:FreeRTOS/tasks.c **** 				uxQueue--;
1151:FreeRTOS/tasks.c **** 
1152:FreeRTOS/tasks.c **** 				if( !listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) )
1153:FreeRTOS/tasks.c **** 				{
1154:FreeRTOS/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tsk
1155:FreeRTOS/tasks.c **** 				}
1156:FreeRTOS/tasks.c **** 			}while( uxQueue > ( unsigned portSHORT ) tskIDLE_PRIORITY );
1157:FreeRTOS/tasks.c **** 
1158:FreeRTOS/tasks.c **** 			if( !listLIST_IS_EMPTY( pxDelayedTaskList ) )
1159:FreeRTOS/tasks.c **** 			{
1160:FreeRTOS/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, tskBLOCKED_CHAR );
1161:FreeRTOS/tasks.c **** 			}
1162:FreeRTOS/tasks.c **** 
1163:FreeRTOS/tasks.c **** 			if( !listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) )
1164:FreeRTOS/tasks.c **** 			{
1165:FreeRTOS/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, tskBLOCKED_C
1166:FreeRTOS/tasks.c **** 			}
1167:FreeRTOS/tasks.c **** 
1168:FreeRTOS/tasks.c **** 			if( !listLIST_IS_EMPTY( &xTasksWaitingTermination ) )
1169:FreeRTOS/tasks.c **** 			{
1170:FreeRTOS/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xTasksWaitingTermination, tskDELETED_C
1171:FreeRTOS/tasks.c **** 			}
1172:FreeRTOS/tasks.c **** 
1173:FreeRTOS/tasks.c **** 			if( !listLIST_IS_EMPTY( &xSuspendedTaskList ) )
1174:FreeRTOS/tasks.c **** 			{
1175:FreeRTOS/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, tskSUSPENDED_CHAR 
1176:FreeRTOS/tasks.c **** 			}
1177:FreeRTOS/tasks.c **** 		}
1178:FreeRTOS/tasks.c ****         xTaskResumeAll();
1179:FreeRTOS/tasks.c **** 	}
1180:FreeRTOS/tasks.c **** 
1181:FreeRTOS/tasks.c **** #endif
1182:FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
1183:FreeRTOS/tasks.c **** 
1184:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1185:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 23


1186:FreeRTOS/tasks.c **** 	void vTaskStartTrace( signed portCHAR * pcBuffer, unsigned portLONG ulBufferSize )
1187:FreeRTOS/tasks.c **** 	{
1188:FreeRTOS/tasks.c **** 		portENTER_CRITICAL();
1189:FreeRTOS/tasks.c **** 		{
1190:FreeRTOS/tasks.c **** 			pcTraceBuffer = ( signed portCHAR * )pcBuffer;
1191:FreeRTOS/tasks.c **** 			pcTraceBufferStart = pcBuffer;
1192:FreeRTOS/tasks.c **** 			pcTraceBufferEnd = pcBuffer + ( ulBufferSize - tskSIZE_OF_EACH_TRACE_LINE );
1193:FreeRTOS/tasks.c **** 			xTracing = pdTRUE;
1194:FreeRTOS/tasks.c **** 		}
1195:FreeRTOS/tasks.c **** 		portEXIT_CRITICAL();
1196:FreeRTOS/tasks.c **** 	}
1197:FreeRTOS/tasks.c **** 
1198:FreeRTOS/tasks.c **** #endif
1199:FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
1200:FreeRTOS/tasks.c **** 
1201:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1202:FreeRTOS/tasks.c **** 
1203:FreeRTOS/tasks.c **** 	unsigned portLONG ulTaskEndTrace( void )
1204:FreeRTOS/tasks.c **** 	{
1205:FreeRTOS/tasks.c **** 	unsigned portLONG ulBufferLength;
1206:FreeRTOS/tasks.c **** 
1207:FreeRTOS/tasks.c **** 		portENTER_CRITICAL();
1208:FreeRTOS/tasks.c **** 			xTracing = pdFALSE;
1209:FreeRTOS/tasks.c **** 		portEXIT_CRITICAL();
1210:FreeRTOS/tasks.c **** 
1211:FreeRTOS/tasks.c **** 		ulBufferLength = ( unsigned portLONG ) ( pcTraceBuffer - pcTraceBufferStart );
1212:FreeRTOS/tasks.c **** 
1213:FreeRTOS/tasks.c **** 		return ulBufferLength;
1214:FreeRTOS/tasks.c **** 	}
1215:FreeRTOS/tasks.c **** 
1216:FreeRTOS/tasks.c **** #endif
1217:FreeRTOS/tasks.c **** 
1218:FreeRTOS/tasks.c **** 
1219:FreeRTOS/tasks.c **** 
1220:FreeRTOS/tasks.c **** /*-----------------------------------------------------------
1221:FreeRTOS/tasks.c ****  * SCHEDULER INTERNALS AVAILABLE FOR PORTING PURPOSES
1222:FreeRTOS/tasks.c ****  * documented in task.h
1223:FreeRTOS/tasks.c ****  *----------------------------------------------------------*/
1224:FreeRTOS/tasks.c **** 
1225:FreeRTOS/tasks.c **** 
1226:FreeRTOS/tasks.c **** void vTaskIncrementTick( void )
1227:FreeRTOS/tasks.c **** {
1228:FreeRTOS/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
1229:FreeRTOS/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
1230:FreeRTOS/tasks.c **** 	tasks to be unblocked. */
1231:FreeRTOS/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1232:FreeRTOS/tasks.c **** 	{
1233:FreeRTOS/tasks.c **** 		++xTickCount;
1234:FreeRTOS/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
1235:FreeRTOS/tasks.c **** 		{
1236:FreeRTOS/tasks.c **** 			xList *pxTemp;
1237:FreeRTOS/tasks.c **** 
1238:FreeRTOS/tasks.c **** 			/* Tick count has overflowed so we need to swap the delay lists.
1239:FreeRTOS/tasks.c **** 			If there are any items in pxDelayedTaskList here then there is
1240:FreeRTOS/tasks.c **** 			an error! */
1241:FreeRTOS/tasks.c **** 			pxTemp = pxDelayedTaskList;
1242:FreeRTOS/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 24


1243:FreeRTOS/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
1244:FreeRTOS/tasks.c ****             xNumOfOverflows++;
1245:FreeRTOS/tasks.c **** 		}
1246:FreeRTOS/tasks.c **** 
1247:FreeRTOS/tasks.c **** 		/* See if this tick has made a timeout expire. */
1248:FreeRTOS/tasks.c **** 		prvCheckDelayedTasks();
1249:FreeRTOS/tasks.c **** 	}
1250:FreeRTOS/tasks.c **** 	else
1251:FreeRTOS/tasks.c **** 	{
1252:FreeRTOS/tasks.c **** 		++uxMissedTicks;
1253:FreeRTOS/tasks.c **** 
1254:FreeRTOS/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
1255:FreeRTOS/tasks.c **** 		scheduler is locked. */
1256:FreeRTOS/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
1257:FreeRTOS/tasks.c **** 		{
1258:FreeRTOS/tasks.c **** 			extern void vApplicationTickHook( void );
1259:FreeRTOS/tasks.c **** 
1260:FreeRTOS/tasks.c **** 			vApplicationTickHook();
1261:FreeRTOS/tasks.c **** 		}
1262:FreeRTOS/tasks.c **** 		#endif
1263:FreeRTOS/tasks.c **** 	}
1264:FreeRTOS/tasks.c **** 
1265:FreeRTOS/tasks.c **** 	#if ( configUSE_TICK_HOOK == 1 )
1266:FreeRTOS/tasks.c **** 	{
1267:FreeRTOS/tasks.c **** 		extern void vApplicationTickHook( void );
1268:FreeRTOS/tasks.c **** 
1269:FreeRTOS/tasks.c **** 		/* Guard against the tick hook being called when the missed tick
1270:FreeRTOS/tasks.c **** 		count is being unwound (when the scheduler is being unlocked. */
1271:FreeRTOS/tasks.c **** 		if( uxMissedTicks == 0 )
1272:FreeRTOS/tasks.c **** 		{
1273:FreeRTOS/tasks.c **** 			vApplicationTickHook();
1274:FreeRTOS/tasks.c **** 		}
1275:FreeRTOS/tasks.c **** 	}
1276:FreeRTOS/tasks.c **** 	#endif
1277:FreeRTOS/tasks.c **** 
1278:FreeRTOS/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
1279:FreeRTOS/tasks.c **** }
1280:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1281:FreeRTOS/tasks.c **** 
1282:FreeRTOS/tasks.c **** #if ( ( INCLUDE_vTaskCleanUpResources == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1283:FreeRTOS/tasks.c **** 
1284:FreeRTOS/tasks.c **** 	void vTaskCleanUpResources( void )
1285:FreeRTOS/tasks.c **** 	{
1286:FreeRTOS/tasks.c **** 	unsigned portSHORT usQueue;
1287:FreeRTOS/tasks.c **** 	volatile tskTCB *pxTCB;
1288:FreeRTOS/tasks.c **** 
1289:FreeRTOS/tasks.c **** 		usQueue = ( unsigned portSHORT ) uxTopUsedPriority + ( unsigned portSHORT ) 1;
1290:FreeRTOS/tasks.c **** 
1291:FreeRTOS/tasks.c **** 		/* Remove any TCB's from the ready queues. */
1292:FreeRTOS/tasks.c **** 		do
1293:FreeRTOS/tasks.c **** 		{
1294:FreeRTOS/tasks.c **** 			usQueue--;
1295:FreeRTOS/tasks.c **** 
1296:FreeRTOS/tasks.c **** 			while( !listLIST_IS_EMPTY( &( pxReadyTasksLists[ usQueue ] ) ) )
1297:FreeRTOS/tasks.c **** 			{
1298:FreeRTOS/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &( pxReadyTasksLists[ usQueue ] ) );
1299:FreeRTOS/tasks.c **** 				vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 25


1300:FreeRTOS/tasks.c **** 
1301:FreeRTOS/tasks.c **** 				prvDeleteTCB( ( tskTCB * ) pxTCB );
1302:FreeRTOS/tasks.c **** 			}
1303:FreeRTOS/tasks.c **** 		}while( usQueue > ( unsigned portSHORT ) tskIDLE_PRIORITY );
1304:FreeRTOS/tasks.c **** 
1305:FreeRTOS/tasks.c **** 		/* Remove any TCB's from the delayed queue. */
1306:FreeRTOS/tasks.c **** 		while( !listLIST_IS_EMPTY( &xDelayedTaskList1 ) )
1307:FreeRTOS/tasks.c **** 		{
1308:FreeRTOS/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList1 );
1309:FreeRTOS/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1310:FreeRTOS/tasks.c **** 
1311:FreeRTOS/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1312:FreeRTOS/tasks.c **** 		}
1313:FreeRTOS/tasks.c **** 
1314:FreeRTOS/tasks.c **** 		/* Remove any TCB's from the overflow delayed queue. */
1315:FreeRTOS/tasks.c **** 		while( !listLIST_IS_EMPTY( &xDelayedTaskList2 ) )
1316:FreeRTOS/tasks.c **** 		{
1317:FreeRTOS/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList2 );
1318:FreeRTOS/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1319:FreeRTOS/tasks.c **** 
1320:FreeRTOS/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1321:FreeRTOS/tasks.c **** 		}
1322:FreeRTOS/tasks.c **** 
1323:FreeRTOS/tasks.c **** 		while( !listLIST_IS_EMPTY( &xSuspendedTaskList ) )
1324:FreeRTOS/tasks.c **** 		{
1325:FreeRTOS/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xSuspendedTaskList );
1326:FreeRTOS/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1327:FreeRTOS/tasks.c **** 
1328:FreeRTOS/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1329:FreeRTOS/tasks.c **** 		}		
1330:FreeRTOS/tasks.c **** 	}
1331:FreeRTOS/tasks.c **** 
1332:FreeRTOS/tasks.c **** #endif
1333:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1334:FreeRTOS/tasks.c **** 
1335:FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1336:FreeRTOS/tasks.c **** 
1337:FreeRTOS/tasks.c **** 	void vTaskSetApplicationTaskTag( xTaskHandle xTask, pdTASK_HOOK_CODE pxTagValue )
1338:FreeRTOS/tasks.c **** 	{
1339:FreeRTOS/tasks.c **** 	tskTCB *xTCB;
1340:FreeRTOS/tasks.c **** 
1341:FreeRTOS/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
1342:FreeRTOS/tasks.c **** 		if( xTask == NULL )
1343:FreeRTOS/tasks.c **** 		{
1344:FreeRTOS/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1345:FreeRTOS/tasks.c **** 		}
1346:FreeRTOS/tasks.c **** 		else
1347:FreeRTOS/tasks.c **** 		{
1348:FreeRTOS/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1349:FreeRTOS/tasks.c **** 		}
1350:FreeRTOS/tasks.c **** 		
1351:FreeRTOS/tasks.c **** 		/* Save the hook function in the TCB. */
1352:FreeRTOS/tasks.c **** 		portENTER_CRITICAL();
1353:FreeRTOS/tasks.c **** 			xTCB->pxTaskTag = pxTagValue;
1354:FreeRTOS/tasks.c **** 		portEXIT_CRITICAL();
1355:FreeRTOS/tasks.c **** 	}
1356:FreeRTOS/tasks.c **** 	
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 26


1357:FreeRTOS/tasks.c **** #endif
1358:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1359:FreeRTOS/tasks.c **** 
1360:FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1361:FreeRTOS/tasks.c **** 
1362:FreeRTOS/tasks.c **** 	portBASE_TYPE xTaskCallApplicationTaskHook( xTaskHandle xTask, void *pvParameter )
1363:FreeRTOS/tasks.c **** 	{
1364:FreeRTOS/tasks.c **** 	tskTCB *xTCB;
1365:FreeRTOS/tasks.c **** 	portBASE_TYPE xReturn;
1366:FreeRTOS/tasks.c **** 
1367:FreeRTOS/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
1368:FreeRTOS/tasks.c **** 		if( xTask == NULL )
1369:FreeRTOS/tasks.c **** 		{
1370:FreeRTOS/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1371:FreeRTOS/tasks.c **** 		}
1372:FreeRTOS/tasks.c **** 		else
1373:FreeRTOS/tasks.c **** 		{
1374:FreeRTOS/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1375:FreeRTOS/tasks.c **** 		}
1376:FreeRTOS/tasks.c **** 
1377:FreeRTOS/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
1378:FreeRTOS/tasks.c **** 		{
1379:FreeRTOS/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
1380:FreeRTOS/tasks.c **** 		}
1381:FreeRTOS/tasks.c **** 		else
1382:FreeRTOS/tasks.c **** 		{
1383:FreeRTOS/tasks.c **** 			xReturn = pdFAIL;
1384:FreeRTOS/tasks.c **** 		}
1385:FreeRTOS/tasks.c **** 
1386:FreeRTOS/tasks.c **** 		return xReturn;
1387:FreeRTOS/tasks.c **** 	}
1388:FreeRTOS/tasks.c **** 	
1389:FreeRTOS/tasks.c **** #endif
1390:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1391:FreeRTOS/tasks.c **** 
1392:FreeRTOS/tasks.c **** void vTaskSwitchContext( void )
1393:FreeRTOS/tasks.c **** {
  66              		.loc 1 1393 0
1394:FreeRTOS/tasks.c **** 	traceTASK_SWITCHED_OUT();
1395:FreeRTOS/tasks.c **** 
1396:FreeRTOS/tasks.c **** 	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
  67              		.loc 1 1396 0
  68 0028 134B     		ldr	r3, .L20
  69 002a 1B68     		ldr	r3, [r3]
  70              		.loc 1 1393 0
  71              		@ lr needed for prologue
  72              		.loc 1 1396 0
  73 002c 002B     		cmp	r3, #0
  74 002e 06D0     		beq	.L19
1397:FreeRTOS/tasks.c **** 	{
1398:FreeRTOS/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
1399:FreeRTOS/tasks.c **** 		switch. */
1400:FreeRTOS/tasks.c **** 		xMissedYield = pdTRUE;
  75              		.loc 1 1400 0
  76 0030 124A     		ldr	r2, .L20+4
  77 0032 0123     		mov	r3, #1
  78 0034 1360     		str	r3, [r2]
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 27


  79 0036 1EE0     		b	.L18
  80              	.L14:
1401:FreeRTOS/tasks.c **** 		return;
1402:FreeRTOS/tasks.c **** 	}
1403:FreeRTOS/tasks.c **** 
1404:FreeRTOS/tasks.c **** 	taskFIRST_CHECK_FOR_STACK_OVERFLOW();
1405:FreeRTOS/tasks.c **** 	taskSECOND_CHECK_FOR_STACK_OVERFLOW();
1406:FreeRTOS/tasks.c **** 
1407:FreeRTOS/tasks.c **** 	/* Find the highest priority queue that contains ready tasks. */
1408:FreeRTOS/tasks.c **** 	while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
1409:FreeRTOS/tasks.c **** 	{
1410:FreeRTOS/tasks.c **** 		--uxTopReadyPriority;
  81              		.loc 1 1410 0
  82 0038 0B68     		ldr	r3, [r1]
  83 003a 013B     		sub	r3, r3, #1
  84 003c 0B60     		str	r3, [r1]
  85              	.L19:
  86              		.loc 1 1408 0
  87 003e 1049     		ldr	r1, .L20+8
  88 0040 0B68     		ldr	r3, [r1]
  89 0042 9A00     		lsl	r2, r3, #2
  90 0044 D218     		add	r2, r2, r3
  91 0046 0F48     		ldr	r0, .L20+12
  92 0048 9200     		lsl	r2, r2, #2
  93 004a 1218     		add	r2, r2, r0
  94 004c 1368     		ldr	r3, [r2]
  95 004e 002B     		cmp	r3, #0
  96 0050 F2D0     		beq	.L14
  97              	.LBB2:
1411:FreeRTOS/tasks.c **** 	}
1412:FreeRTOS/tasks.c **** 
1413:FreeRTOS/tasks.c **** 	/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
1414:FreeRTOS/tasks.c **** 	same priority get an equal share of the processor time. */
1415:FreeRTOS/tasks.c **** 	listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
  98              		.loc 1 1415 0
  99 0052 0A68     		ldr	r2, [r1]
 100 0054 9300     		lsl	r3, r2, #2
 101 0056 9B18     		add	r3, r3, r2
 102 0058 9B00     		lsl	r3, r3, #2
 103 005a 1A18     		add	r2, r3, r0
 104              	.LVL6:
 105 005c 5368     		ldr	r3, [r2, #4]
 106 005e 5968     		ldr	r1, [r3, #4]
 107 0060 131C     		mov	r3, r2
 108 0062 0833     		add	r3, r3, #8
 109 0064 5160     		str	r1, [r2, #4]
 110 0066 9942     		cmp	r1, r3
 111 0068 01D1     		bne	.L16
 112 006a 4B68     		ldr	r3, [r1, #4]
 113 006c 5360     		str	r3, [r2, #4]
 114              	.L16:
 115 006e 5368     		ldr	r3, [r2, #4]
 116 0070 DA68     		ldr	r2, [r3, #12]
 117              	.LVL7:
 118 0072 054B     		ldr	r3, .L20+16
 119 0074 1A60     		str	r2, [r3]
 120              	.L18:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 28


 121              	.LBE2:
1416:FreeRTOS/tasks.c **** 
1417:FreeRTOS/tasks.c **** 	traceTASK_SWITCHED_IN();
1418:FreeRTOS/tasks.c **** 	vWriteTraceToBuffer();
1419:FreeRTOS/tasks.c **** }
 122              		.loc 1 1419 0
 123              		@ sp needed for prologue
 124 0076 7047     		bx	lr
 125              	.L21:
 126              		.align	2
 127              	.L20:
 128 0078 10000000 		.word	uxSchedulerSuspended
 129 007c 04000000 		.word	xMissedYield
 130 0080 14000000 		.word	uxTopReadyPriority
 131 0084 2C000000 		.word	pxReadyTasksLists
 132 0088 00000000 		.word	pxCurrentTCB
 133              	.LFE19:
 134              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 135              		.align	2
 136              		.global	vTaskSetTimeOutState
 137              		.code 16
 138              		.thumb_func
 139              		.type	vTaskSetTimeOutState, %function
 140              	vTaskSetTimeOutState:
 141              	.LFB22:
1420:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1421:FreeRTOS/tasks.c **** 
1422:FreeRTOS/tasks.c **** void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
1423:FreeRTOS/tasks.c **** {
1424:FreeRTOS/tasks.c **** portTickType xTimeToWake;
1425:FreeRTOS/tasks.c **** 
1426:FreeRTOS/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED OR THE
1427:FreeRTOS/tasks.c **** 	SCHEDULER SUSPENDED. */
1428:FreeRTOS/tasks.c **** 
1429:FreeRTOS/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
1430:FreeRTOS/tasks.c **** 	This is placed in the list in priority order so the highest priority task
1431:FreeRTOS/tasks.c **** 	is the first to be woken by the event. */
1432:FreeRTOS/tasks.c **** 	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
1433:FreeRTOS/tasks.c **** 
1434:FreeRTOS/tasks.c **** 	/* We must remove ourselves from the ready list before adding ourselves
1435:FreeRTOS/tasks.c **** 	to the blocked list as the same list item is used for both lists.  We have
1436:FreeRTOS/tasks.c **** 	exclusive access to the ready lists as the scheduler is locked. */
1437:FreeRTOS/tasks.c **** 	vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
1438:FreeRTOS/tasks.c **** 
1439:FreeRTOS/tasks.c **** 
1440:FreeRTOS/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
1441:FreeRTOS/tasks.c **** 	{			
1442:FreeRTOS/tasks.c **** 		if( xTicksToWait == portMAX_DELAY )
1443:FreeRTOS/tasks.c **** 		{
1444:FreeRTOS/tasks.c **** 			/* Add ourselves to the suspended task list instead of a delayed task
1445:FreeRTOS/tasks.c **** 			list to ensure we are not woken by a timing event.  We will block
1446:FreeRTOS/tasks.c **** 			indefinitely. */
1447:FreeRTOS/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListIt
1448:FreeRTOS/tasks.c **** 		}
1449:FreeRTOS/tasks.c **** 		else
1450:FreeRTOS/tasks.c **** 		{
1451:FreeRTOS/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 29


1452:FreeRTOS/tasks.c **** 			not occur.  This may overflow but this doesn't matter. */
1453:FreeRTOS/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
1454:FreeRTOS/tasks.c **** 		
1455:FreeRTOS/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
1456:FreeRTOS/tasks.c **** 		
1457:FreeRTOS/tasks.c **** 			if( xTimeToWake < xTickCount )
1458:FreeRTOS/tasks.c **** 			{
1459:FreeRTOS/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow list. */
1460:FreeRTOS/tasks.c **** 				vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericLi
1461:FreeRTOS/tasks.c **** 			}
1462:FreeRTOS/tasks.c **** 			else
1463:FreeRTOS/tasks.c **** 			{
1464:FreeRTOS/tasks.c **** 				/* The wake time has not overflowed, so we can use the current block list. */
1465:FreeRTOS/tasks.c **** 				vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem )
1466:FreeRTOS/tasks.c **** 			}
1467:FreeRTOS/tasks.c **** 		}
1468:FreeRTOS/tasks.c **** 	}
1469:FreeRTOS/tasks.c **** 	#else
1470:FreeRTOS/tasks.c **** 	{
1471:FreeRTOS/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
1472:FreeRTOS/tasks.c **** 			not occur.  This may overflow but this doesn't matter. */
1473:FreeRTOS/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
1474:FreeRTOS/tasks.c **** 		
1475:FreeRTOS/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
1476:FreeRTOS/tasks.c **** 		
1477:FreeRTOS/tasks.c **** 			if( xTimeToWake < xTickCount )
1478:FreeRTOS/tasks.c **** 			{
1479:FreeRTOS/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow list. */
1480:FreeRTOS/tasks.c **** 				vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericLi
1481:FreeRTOS/tasks.c **** 			}
1482:FreeRTOS/tasks.c **** 			else
1483:FreeRTOS/tasks.c **** 			{
1484:FreeRTOS/tasks.c **** 				/* The wake time has not overflowed, so we can use the current block list. */
1485:FreeRTOS/tasks.c **** 				vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem )
1486:FreeRTOS/tasks.c **** 			}
1487:FreeRTOS/tasks.c **** 	}
1488:FreeRTOS/tasks.c **** 	#endif
1489:FreeRTOS/tasks.c **** }
1490:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1491:FreeRTOS/tasks.c **** 
1492:FreeRTOS/tasks.c **** signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
1493:FreeRTOS/tasks.c **** {
1494:FreeRTOS/tasks.c **** tskTCB *pxUnblockedTCB;
1495:FreeRTOS/tasks.c **** portBASE_TYPE xReturn;
1496:FreeRTOS/tasks.c **** 
1497:FreeRTOS/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED OR THE
1498:FreeRTOS/tasks.c **** 	SCHEDULER SUSPENDED.  It can also be called from within an ISR. */
1499:FreeRTOS/tasks.c **** 
1500:FreeRTOS/tasks.c **** 	/* The event list is sorted in priority order, so we can remove the
1501:FreeRTOS/tasks.c **** 	first in the list, remove the TCB from the delayed list, and add
1502:FreeRTOS/tasks.c **** 	it to the ready list.
1503:FreeRTOS/tasks.c **** 	
1504:FreeRTOS/tasks.c **** 	If an event is for a queue that is locked then this function will never
1505:FreeRTOS/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
1506:FreeRTOS/tasks.c **** 	means we can always expect exclusive access to the event list here. */
1507:FreeRTOS/tasks.c **** 	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
1508:FreeRTOS/tasks.c **** 	vListRemove( &( pxUnblockedTCB->xEventListItem ) );
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 30


1509:FreeRTOS/tasks.c **** 
1510:FreeRTOS/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1511:FreeRTOS/tasks.c **** 	{
1512:FreeRTOS/tasks.c **** 		vListRemove( &( pxUnblockedTCB->xGenericListItem ) );
1513:FreeRTOS/tasks.c **** 		prvAddTaskToReadyQueue( pxUnblockedTCB );
1514:FreeRTOS/tasks.c **** 	}
1515:FreeRTOS/tasks.c **** 	else
1516:FreeRTOS/tasks.c **** 	{
1517:FreeRTOS/tasks.c **** 		/* We cannot access the delayed or ready lists, so will hold this
1518:FreeRTOS/tasks.c **** 		task pending until the scheduler is resumed. */
1519:FreeRTOS/tasks.c **** 		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
1520:FreeRTOS/tasks.c **** 	}
1521:FreeRTOS/tasks.c **** 
1522:FreeRTOS/tasks.c **** 	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
1523:FreeRTOS/tasks.c **** 	{
1524:FreeRTOS/tasks.c **** 		/* Return true if the task removed from the event list has
1525:FreeRTOS/tasks.c **** 		a higher priority than the calling task.  This allows
1526:FreeRTOS/tasks.c **** 		the calling task to know if it should force a context
1527:FreeRTOS/tasks.c **** 		switch now. */
1528:FreeRTOS/tasks.c **** 		xReturn = pdTRUE;
1529:FreeRTOS/tasks.c **** 	}
1530:FreeRTOS/tasks.c **** 	else
1531:FreeRTOS/tasks.c **** 	{
1532:FreeRTOS/tasks.c **** 		xReturn = pdFALSE;
1533:FreeRTOS/tasks.c **** 	}
1534:FreeRTOS/tasks.c **** 
1535:FreeRTOS/tasks.c **** 	return xReturn;
1536:FreeRTOS/tasks.c **** }
1537:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1538:FreeRTOS/tasks.c **** 
1539:FreeRTOS/tasks.c **** void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
1540:FreeRTOS/tasks.c **** {
 142              		.loc 1 1540 0
 143              	.LVL8:
1541:FreeRTOS/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
 144              		.loc 1 1541 0
 145 008c 034B     		ldr	r3, .L24
 146 008e 1B68     		ldr	r3, [r3]
 147 0090 0360     		str	r3, [r0]
1542:FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 148              		.loc 1 1542 0
 149 0092 034B     		ldr	r3, .L24+4
 150 0094 1B68     		ldr	r3, [r3]
 151              		.loc 1 1540 0
 152              		@ lr needed for prologue
 153              		.loc 1 1542 0
 154 0096 4360     		str	r3, [r0, #4]
1543:FreeRTOS/tasks.c **** }
 155              		.loc 1 1543 0
 156              		@ sp needed for prologue
 157 0098 7047     		bx	lr
 158              	.L25:
 159 009a C046     		.align	2
 160              	.L24:
 161 009c 08000000 		.word	xNumOfOverflows
 162 00a0 0C000000 		.word	xTickCount
 163              	.LFE22:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 31


 164              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 165              		.align	2
 166              		.global	vTaskMissedYield
 167              		.code 16
 168              		.thumb_func
 169              		.type	vTaskMissedYield, %function
 170              	vTaskMissedYield:
 171              	.LFB24:
1544:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1545:FreeRTOS/tasks.c **** 
1546:FreeRTOS/tasks.c **** portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToW
1547:FreeRTOS/tasks.c **** {
1548:FreeRTOS/tasks.c **** portBASE_TYPE xReturn;
1549:FreeRTOS/tasks.c **** 
1550:FreeRTOS/tasks.c **** 	portENTER_CRITICAL();
1551:FreeRTOS/tasks.c **** 	{
1552:FreeRTOS/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
1553:FreeRTOS/tasks.c **** 			/* If INCLUDE_vTaskSuspend is set to 1 and the block time specified is
1554:FreeRTOS/tasks.c **** 			the maximum block time then the task should block indefinitely, and
1555:FreeRTOS/tasks.c **** 			therefore never time out. */
1556:FreeRTOS/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
1557:FreeRTOS/tasks.c **** 			{
1558:FreeRTOS/tasks.c **** 				xReturn = pdFALSE;
1559:FreeRTOS/tasks.c **** 			}
1560:FreeRTOS/tasks.c **** 			else /* We are not blocking indefinitely, perform the checks below. */
1561:FreeRTOS/tasks.c **** 		#endif
1562:FreeRTOS/tasks.c **** 
1563:FreeRTOS/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xTickCount >= pxTimeOut->xTimeOnEnterin
1564:FreeRTOS/tasks.c **** 		{
1565:FreeRTOS/tasks.c **** 			/* The tick count is greater than the time at which vTaskSetTimeout()
1566:FreeRTOS/tasks.c **** 			was called, but has also overflowed since vTaskSetTimeOut() was called.
1567:FreeRTOS/tasks.c **** 			It must have wrapped all the way around and gone past us again. This
1568:FreeRTOS/tasks.c **** 			passed since vTaskSetTimeout() was called. */
1569:FreeRTOS/tasks.c **** 			xReturn = pdTRUE;
1570:FreeRTOS/tasks.c **** 		}
1571:FreeRTOS/tasks.c **** 		else if( ( xTickCount - pxTimeOut->xTimeOnEntering ) < *pxTicksToWait )
1572:FreeRTOS/tasks.c **** 		{
1573:FreeRTOS/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
1574:FreeRTOS/tasks.c **** 			*pxTicksToWait -= ( xTickCount - pxTimeOut->xTimeOnEntering );
1575:FreeRTOS/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
1576:FreeRTOS/tasks.c **** 			xReturn = pdFALSE;
1577:FreeRTOS/tasks.c **** 		}
1578:FreeRTOS/tasks.c **** 		else
1579:FreeRTOS/tasks.c **** 		{
1580:FreeRTOS/tasks.c **** 			xReturn = pdTRUE;
1581:FreeRTOS/tasks.c **** 		}
1582:FreeRTOS/tasks.c **** 	}
1583:FreeRTOS/tasks.c **** 	portEXIT_CRITICAL();
1584:FreeRTOS/tasks.c **** 
1585:FreeRTOS/tasks.c ****     return xReturn;
1586:FreeRTOS/tasks.c **** }
1587:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1588:FreeRTOS/tasks.c **** 
1589:FreeRTOS/tasks.c **** void vTaskMissedYield( void )
1590:FreeRTOS/tasks.c **** {
 172              		.loc 1 1590 0
1591:FreeRTOS/tasks.c **** 	xMissedYield = pdTRUE;
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 32


 173              		.loc 1 1591 0
 174 00a4 014A     		ldr	r2, .L28
 175 00a6 0123     		mov	r3, #1
 176              		.loc 1 1590 0
 177              		@ lr needed for prologue
 178              		.loc 1 1591 0
 179 00a8 1360     		str	r3, [r2]
1592:FreeRTOS/tasks.c **** }
 180              		.loc 1 1592 0
 181              		@ sp needed for prologue
 182 00aa 7047     		bx	lr
 183              	.L29:
 184              		.align	2
 185              	.L28:
 186 00ac 04000000 		.word	xMissedYield
 187              	.LFE24:
 188              		.size	vTaskMissedYield, .-vTaskMissedYield
 189              		.align	2
 190              		.global	uxTaskGetNumberOfTasks
 191              		.code 16
 192              		.thumb_func
 193              		.type	uxTaskGetNumberOfTasks, %function
 194              	uxTaskGetNumberOfTasks:
 195              	.LFB17:
 196              		.loc 1 1118 0
 197 00b0 10B5     		push	{r4, lr}
 198              	.LCFI0:
 199              		.loc 1 1121 0
 200 00b2 FFF7FEFF 		bl	vPortEnterCritical
 201              		.loc 1 1122 0
 202 00b6 044B     		ldr	r3, .L32
 203 00b8 1C68     		ldr	r4, [r3]
 204              	.LVL9:
 205              		.loc 1 1123 0
 206 00ba FFF7FEFF 		bl	vPortExitCritical
 207              		.loc 1 1126 0
 208 00be 201C     		mov	r0, r4
 209              		@ sp needed for prologue
 210              	.LVL10:
 211 00c0 10BC     		pop	{r4}
 212 00c2 02BC     		pop	{r1}
 213 00c4 0847     		bx	r1
 214              	.L33:
 215 00c6 C046     		.align	2
 216              	.L32:
 217 00c8 1C000000 		.word	uxCurrentNumberOfTasks
 218              	.LFE17:
 219              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 220              		.align	2
 221              		.global	xTaskGetTickCount
 222              		.code 16
 223              		.thumb_func
 224              		.type	xTaskGetTickCount, %function
 225              	xTaskGetTickCount:
 226              	.LFB16:
 227              		.loc 1 1103 0
 228 00cc 10B5     		push	{r4, lr}
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 33


 229              	.LCFI1:
 230              		.loc 1 1107 0
 231 00ce FFF7FEFF 		bl	vPortEnterCritical
 232              		.loc 1 1109 0
 233 00d2 044B     		ldr	r3, .L36
 234 00d4 1C68     		ldr	r4, [r3]
 235              	.LVL11:
 236              		.loc 1 1111 0
 237 00d6 FFF7FEFF 		bl	vPortExitCritical
 238              		.loc 1 1114 0
 239 00da 201C     		mov	r0, r4
 240              		@ sp needed for prologue
 241              	.LVL12:
 242 00dc 10BC     		pop	{r4}
 243 00de 02BC     		pop	{r1}
 244 00e0 0847     		bx	r1
 245              	.L37:
 246 00e2 C046     		.align	2
 247              	.L36:
 248 00e4 0C000000 		.word	xTickCount
 249              	.LFE16:
 250              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 251              		.align	2
 252              		.global	vTaskSuspendAll
 253              		.code 16
 254              		.thumb_func
 255              		.type	vTaskSuspendAll, %function
 256              	vTaskSuspendAll:
 257              	.LFB14:
 258              		.loc 1 1013 0
 259 00e8 00B5     		push	{lr}
 260              	.LCFI2:
 261              		.loc 1 1014 0
 262 00ea FFF7FEFF 		bl	vPortEnterCritical
 263              		.loc 1 1015 0
 264 00ee 044A     		ldr	r2, .L40
 265 00f0 1368     		ldr	r3, [r2]
 266 00f2 0133     		add	r3, r3, #1
 267 00f4 1360     		str	r3, [r2]
 268              		.loc 1 1016 0
 269 00f6 FFF7FEFF 		bl	vPortExitCritical
 270              		.loc 1 1017 0
 271              		@ sp needed for prologue
 272 00fa 01BC     		pop	{r0}
 273 00fc 0047     		bx	r0
 274              	.L41:
 275 00fe C046     		.align	2
 276              	.L40:
 277 0100 10000000 		.word	uxSchedulerSuspended
 278              	.LFE14:
 279              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 280              		.align	2
 281              		.global	uxTaskPriorityGet
 282              		.code 16
 283              		.thumb_func
 284              		.type	uxTaskPriorityGet, %function
 285              	uxTaskPriorityGet:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 34


 286              	.LFB6:
 287              		.loc 1 683 0
 288 0104 10B5     		push	{r4, lr}
 289              	.LCFI3:
 290              	.LVL13:
 291              		.loc 1 683 0
 292 0106 041C     		mov	r4, r0
 293              		.loc 1 687 0
 294 0108 FFF7FEFF 		bl	vPortEnterCritical
 295              	.LVL14:
 296              		.loc 1 691 0
 297 010c 002C     		cmp	r4, #0
 298 010e 02D1     		bne	.L43
 299 0110 054B     		ldr	r3, .L47
 300 0112 1868     		ldr	r0, [r3]
 301              	.LVL15:
 302 0114 00E0     		b	.L45
 303              	.LVL16:
 304              	.L43:
 305 0116 201C     		mov	r0, r4
 306              	.LVL17:
 307              	.L45:
 308              		.loc 1 692 0
 309 0118 C46A     		ldr	r4, [r0, #44]
 310              	.LVL18:
 311              		.loc 1 694 0
 312 011a FFF7FEFF 		bl	vPortExitCritical
 313              	.LVL19:
 314              		.loc 1 697 0
 315 011e 201C     		mov	r0, r4
 316              		@ sp needed for prologue
 317              	.LVL20:
 318 0120 10BC     		pop	{r4}
 319 0122 02BC     		pop	{r1}
 320 0124 0847     		bx	r1
 321              	.L48:
 322 0126 C046     		.align	2
 323              	.L47:
 324 0128 00000000 		.word	pxCurrentTCB
 325              	.LFE6:
 326              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 327              		.align	2
 328              		.global	xTaskRemoveFromEventList
 329              		.code 16
 330              		.thumb_func
 331              		.type	xTaskRemoveFromEventList, %function
 332              	xTaskRemoveFromEventList:
 333              	.LFB21:
 334              		.loc 1 1493 0
 335 012c 30B5     		push	{r4, r5, lr}
 336              	.LCFI4:
 337              	.LVL21:
 338              		.loc 1 1507 0
 339 012e 0368     		ldr	r3, [r0]
 340 0130 002B     		cmp	r3, #0
 341 0132 01D1     		bne	.L50
 342 0134 0025     		mov	r5, #0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 35


 343              	.LVL22:
 344 0136 01E0     		b	.L52
 345              	.LVL23:
 346              	.L50:
 347 0138 C368     		ldr	r3, [r0, #12]
 348 013a DD68     		ldr	r5, [r3, #12]
 349              	.LVL24:
 350              	.L52:
 351              		.loc 1 1508 0
 352 013c 2C1C     		mov	r4, r5
 353 013e 1834     		add	r4, r4, #24
 354 0140 201C     		mov	r0, r4
 355              	.LVL25:
 356 0142 FFF7FEFF 		bl	vListRemove
 357              		.loc 1 1510 0
 358 0146 124B     		ldr	r3, .L61
 359 0148 1B68     		ldr	r3, [r3]
 360 014a 002B     		cmp	r3, #0
 361 014c 10D1     		bne	.L53
 362              		.loc 1 1512 0
 363 014e 2C1D     		add	r4, r5, #4
 364 0150 201C     		mov	r0, r4
 365 0152 FFF7FEFF 		bl	vListRemove
 366              		.loc 1 1513 0
 367 0156 0F4A     		ldr	r2, .L61+4
 368 0158 E96A     		ldr	r1, [r5, #44]
 369 015a 1368     		ldr	r3, [r2]
 370 015c 9942     		cmp	r1, r3
 371 015e 00D9     		bls	.L55
 372 0160 1160     		str	r1, [r2]
 373              	.L55:
 374 0162 EB6A     		ldr	r3, [r5, #44]
 375 0164 9800     		lsl	r0, r3, #2
 376 0166 C018     		add	r0, r0, r3
 377 0168 0B4B     		ldr	r3, .L61+8
 378 016a 8000     		lsl	r0, r0, #2
 379 016c C018     		add	r0, r0, r3
 380 016e 00E0     		b	.L60
 381              	.L53:
 382              		.loc 1 1519 0
 383 0170 0A48     		ldr	r0, .L61+12
 384              	.L60:
 385 0172 211C     		mov	r1, r4
 386 0174 FFF7FEFF 		bl	vListInsertEnd
 387              		.loc 1 1522 0
 388 0178 094B     		ldr	r3, .L61+16
 389 017a 1B68     		ldr	r3, [r3]
 390 017c EA6A     		ldr	r2, [r5, #44]
 391 017e DB6A     		ldr	r3, [r3, #44]
 392 0180 0020     		mov	r0, #0
 393 0182 9A42     		cmp	r2, r3
 394 0184 00D3     		bcc	.L58
 395 0186 0120     		mov	r0, #1
 396              	.L58:
 397              		.loc 1 1536 0
 398              		@ sp needed for prologue
 399              	.LVL26:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 36


 400 0188 30BC     		pop	{r4, r5}
 401 018a 02BC     		pop	{r1}
 402 018c 0847     		bx	r1
 403              	.L62:
 404 018e C046     		.align	2
 405              	.L61:
 406 0190 10000000 		.word	uxSchedulerSuspended
 407 0194 14000000 		.word	uxTopReadyPriority
 408 0198 2C000000 		.word	pxReadyTasksLists
 409 019c C0000000 		.word	xPendingReadyList
 410 01a0 00000000 		.word	pxCurrentTCB
 411              	.LFE21:
 412              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 413              		.align	2
 414              		.global	vTaskIncrementTick
 415              		.code 16
 416              		.thumb_func
 417              		.type	vTaskIncrementTick, %function
 418              	vTaskIncrementTick:
 419              	.LFB18:
 420              		.loc 1 1227 0
 421 01a4 30B5     		push	{r4, r5, lr}
 422              	.LCFI5:
 423              		.loc 1 1231 0
 424 01a6 234B     		ldr	r3, .L78
 425 01a8 1B68     		ldr	r3, [r3]
 426 01aa 002B     		cmp	r3, #0
 427 01ac 3BD1     		bne	.L64
 428              		.loc 1 1233 0
 429 01ae 224B     		ldr	r3, .L78+4
 430 01b0 1A68     		ldr	r2, [r3]
 431 01b2 0132     		add	r2, r2, #1
 432 01b4 1A60     		str	r2, [r3]
 433              		.loc 1 1234 0
 434 01b6 1B68     		ldr	r3, [r3]
 435 01b8 002B     		cmp	r3, #0
 436 01ba 29D1     		bne	.L77
 437              	.LBB3:
 438              		.loc 1 1242 0
 439 01bc 1F4A     		ldr	r2, .L78+8
 440              		.loc 1 1241 0
 441 01be 2049     		ldr	r1, .L78+12
 442 01c0 0868     		ldr	r0, [r1]
 443              	.LVL27:
 444              		.loc 1 1242 0
 445 01c2 1368     		ldr	r3, [r2]
 446 01c4 0B60     		str	r3, [r1]
 447              		.loc 1 1243 0
 448 01c6 1060     		str	r0, [r2]
 449              		.loc 1 1244 0
 450 01c8 1E4A     		ldr	r2, .L78+16
 451 01ca 1368     		ldr	r3, [r2]
 452 01cc 0133     		add	r3, r3, #1
 453 01ce 1360     		str	r3, [r2]
 454 01d0 1EE0     		b	.L77
 455              	.L68:
 456              	.LBE3:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 37


 457              	.LBB4:
 458              		.loc 1 1248 0
 459 01d2 194B     		ldr	r3, .L78+4
 460 01d4 1A68     		ldr	r2, [r3]
 461 01d6 6368     		ldr	r3, [r4, #4]
 462 01d8 9A42     		cmp	r2, r3
 463 01da 28D3     		bcc	.L76
 464 01dc 251D     		add	r5, r4, #4
 465 01de 281C     		mov	r0, r5
 466              	.LVL28:
 467 01e0 FFF7FEFF 		bl	vListRemove
 468 01e4 A36A     		ldr	r3, [r4, #40]
 469 01e6 002B     		cmp	r3, #0
 470 01e8 03D0     		beq	.L71
 471 01ea 201C     		mov	r0, r4
 472 01ec 1830     		add	r0, r0, #24
 473 01ee FFF7FEFF 		bl	vListRemove
 474              	.L71:
 475 01f2 154A     		ldr	r2, .L78+20
 476 01f4 E16A     		ldr	r1, [r4, #44]
 477 01f6 1368     		ldr	r3, [r2]
 478 01f8 9942     		cmp	r1, r3
 479 01fa 00D9     		bls	.L73
 480 01fc 1160     		str	r1, [r2]
 481              	.L73:
 482 01fe E36A     		ldr	r3, [r4, #44]
 483 0200 9800     		lsl	r0, r3, #2
 484 0202 C018     		add	r0, r0, r3
 485 0204 114B     		ldr	r3, .L78+24
 486 0206 8000     		lsl	r0, r0, #2
 487 0208 C018     		add	r0, r0, r3
 488 020a 291C     		mov	r1, r5
 489 020c FFF7FEFF 		bl	vListInsertEnd
 490              	.LVL29:
 491              	.L77:
 492 0210 0B4A     		ldr	r2, .L78+12
 493 0212 1368     		ldr	r3, [r2]
 494 0214 1B68     		ldr	r3, [r3]
 495 0216 002B     		cmp	r3, #0
 496 0218 09D0     		beq	.L76
 497 021a 1368     		ldr	r3, [r2]
 498 021c DB68     		ldr	r3, [r3, #12]
 499 021e DC68     		ldr	r4, [r3, #12]
 500 0220 002C     		cmp	r4, #0
 501 0222 D6D1     		bne	.L68
 502 0224 03E0     		b	.L76
 503              	.LVL30:
 504              	.L64:
 505              	.LBE4:
 506              		.loc 1 1252 0
 507 0226 0A4A     		ldr	r2, .L78+28
 508 0228 1368     		ldr	r3, [r2]
 509 022a 0133     		add	r3, r3, #1
 510 022c 1360     		str	r3, [r2]
 511              	.LVL31:
 512              	.L76:
 513              		.loc 1 1279 0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 38


 514              		@ sp needed for prologue
 515 022e 30BC     		pop	{r4, r5}
 516 0230 01BC     		pop	{r0}
 517 0232 0047     		bx	r0
 518              	.L79:
 519              		.align	2
 520              	.L78:
 521 0234 10000000 		.word	uxSchedulerSuspended
 522 0238 0C000000 		.word	xTickCount
 523 023c BC000000 		.word	pxOverflowDelayedTaskList
 524 0240 B8000000 		.word	pxDelayedTaskList
 525 0244 08000000 		.word	xNumOfOverflows
 526 0248 14000000 		.word	uxTopReadyPriority
 527 024c 2C000000 		.word	pxReadyTasksLists
 528 0250 18000000 		.word	uxMissedTicks
 529              	.LFE18:
 530              		.size	vTaskIncrementTick, .-vTaskIncrementTick
 531              		.align	2
 532              		.global	xTaskResumeAll
 533              		.code 16
 534              		.thumb_func
 535              		.type	xTaskResumeAll, %function
 536              	xTaskResumeAll:
 537              	.LFB15:
 538              		.loc 1 1021 0
 539 0254 70B5     		push	{r4, r5, r6, lr}
 540              	.LCFI6:
 541              		.loc 1 1030 0
 542 0256 FFF7FEFF 		bl	vPortEnterCritical
 543              		.loc 1 1032 0
 544 025a 2A4B     		ldr	r3, .L104
 545 025c 1A68     		ldr	r2, [r3]
 546 025e 013A     		sub	r2, r2, #1
 547 0260 1A60     		str	r2, [r3]
 548              		.loc 1 1034 0
 549 0262 1B68     		ldr	r3, [r3]
 550 0264 002B     		cmp	r3, #0
 551 0266 46D1     		bne	.L81
 552              		.loc 1 1036 0
 553 0268 274B     		ldr	r3, .L104+4
 554 026a 1B68     		ldr	r3, [r3]
 555 026c 002B     		cmp	r3, #0
 556 026e 42D0     		beq	.L81
 557 0270 0026     		mov	r6, #0
 558              	.LVL32:
 559 0272 1DE0     		b	.L103
 560              	.L85:
 561              	.LBB5:
 562              		.loc 1 1044 0
 563 0274 201C     		mov	r0, r4
 564 0276 1830     		add	r0, r0, #24
 565              		.loc 1 1045 0
 566 0278 251D     		add	r5, r4, #4
 567              		.loc 1 1044 0
 568 027a FFF7FEFF 		bl	vListRemove
 569              		.loc 1 1045 0
 570 027e 281C     		mov	r0, r5
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 39


 571 0280 FFF7FEFF 		bl	vListRemove
 572              		.loc 1 1046 0
 573 0284 214A     		ldr	r2, .L104+8
 574 0286 E16A     		ldr	r1, [r4, #44]
 575 0288 1368     		ldr	r3, [r2]
 576 028a 9942     		cmp	r1, r3
 577 028c 00D9     		bls	.L86
 578 028e 1160     		str	r1, [r2]
 579              	.L86:
 580 0290 E36A     		ldr	r3, [r4, #44]
 581 0292 9800     		lsl	r0, r3, #2
 582 0294 C018     		add	r0, r0, r3
 583 0296 1E4B     		ldr	r3, .L104+12
 584 0298 8000     		lsl	r0, r0, #2
 585 029a C018     		add	r0, r0, r3
 586 029c 291C     		mov	r1, r5
 587 029e FFF7FEFF 		bl	vListInsertEnd
 588              		.loc 1 1050 0
 589 02a2 1C4B     		ldr	r3, .L104+16
 590 02a4 1B68     		ldr	r3, [r3]
 591 02a6 E26A     		ldr	r2, [r4, #44]
 592 02a8 DB6A     		ldr	r3, [r3, #44]
 593 02aa 9A42     		cmp	r2, r3
 594 02ac 00D3     		bcc	.L103
 595 02ae 0126     		mov	r6, #1
 596              	.L103:
 597              		.loc 1 1042 0
 598 02b0 194A     		ldr	r2, .L104+20
 599 02b2 1368     		ldr	r3, [r2]
 600 02b4 002B     		cmp	r3, #0
 601 02b6 03D0     		beq	.L89
 602 02b8 D368     		ldr	r3, [r2, #12]
 603 02ba DC68     		ldr	r4, [r3, #12]
 604 02bc 002C     		cmp	r4, #0
 605 02be D9D1     		bne	.L85
 606              	.L89:
 607              		.loc 1 1059 0
 608 02c0 164B     		ldr	r3, .L104+24
 609 02c2 1B68     		ldr	r3, [r3]
 610 02c4 002B     		cmp	r3, #0
 611 02c6 05D1     		bne	.L101
 612 02c8 09E0     		b	.L100
 613              	.L93:
 614              		.loc 1 1063 0
 615 02ca FFF7FEFF 		bl	vTaskIncrementTick
 616              		.loc 1 1064 0
 617 02ce 2368     		ldr	r3, [r4]
 618 02d0 013B     		sub	r3, r3, #1
 619 02d2 2360     		str	r3, [r4]
 620              	.L101:
 621              		.loc 1 1061 0
 622 02d4 114C     		ldr	r4, .L104+24
 623 02d6 2368     		ldr	r3, [r4]
 624 02d8 002B     		cmp	r3, #0
 625 02da F6D1     		bne	.L93
 626 02dc 05E0     		b	.L94
 627              	.L100:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 40


 628              		.loc 1 1077 0
 629 02de 012E     		cmp	r6, #1
 630 02e0 03D0     		beq	.L94
 631 02e2 0F4B     		ldr	r3, .L104+28
 632 02e4 1B68     		ldr	r3, [r3]
 633 02e6 012B     		cmp	r3, #1
 634 02e8 05D1     		bne	.L81
 635              	.L94:
 636              		.loc 1 1080 0
 637 02ea 0D4A     		ldr	r2, .L104+28
 638 02ec 0023     		mov	r3, #0
 639 02ee 1360     		str	r3, [r2]
 640              		.loc 1 1081 0
 641 02f0 00DF     		SWI
 642              		.code	16
 643 02f2 0124     		mov	r4, #1
 644              	.LVL33:
 645 02f4 00E0     		b	.L96
 646              	.LVL34:
 647              	.L81:
 648 02f6 0024     		mov	r4, #0
 649              	.LVL35:
 650              	.L96:
 651              	.LBE5:
 652              		.loc 1 1086 0
 653 02f8 FFF7FEFF 		bl	vPortExitCritical
 654              		.loc 1 1089 0
 655 02fc 201C     		mov	r0, r4
 656              		@ sp needed for prologue
 657              	.LVL36:
 658              	.LVL37:
 659 02fe 70BC     		pop	{r4, r5, r6}
 660 0300 02BC     		pop	{r1}
 661 0302 0847     		bx	r1
 662              	.L105:
 663              		.align	2
 664              	.L104:
 665 0304 10000000 		.word	uxSchedulerSuspended
 666 0308 1C000000 		.word	uxCurrentNumberOfTasks
 667 030c 14000000 		.word	uxTopReadyPriority
 668 0310 2C000000 		.word	pxReadyTasksLists
 669 0314 00000000 		.word	pxCurrentTCB
 670 0318 C0000000 		.word	xPendingReadyList
 671 031c 18000000 		.word	uxMissedTicks
 672 0320 04000000 		.word	xMissedYield
 673              	.LFE15:
 674              		.size	xTaskResumeAll, .-xTaskResumeAll
 675              		.align	2
 676              		.global	xTaskResumeFromISR
 677              		.code 16
 678              		.thumb_func
 679              		.type	xTaskResumeFromISR, %function
 680              	xTaskResumeFromISR:
 681              	.LFB11:
 682              		.loc 1 926 0
 683 0324 F0B5     		push	{r4, r5, r6, r7, lr}
 684              	.LCFI7:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 41


 685              	.LVL38:
 686 0326 81B0     		sub	sp, sp, #4
 687              	.LCFI8:
 688              		.loc 1 926 0
 689 0328 041C     		mov	r4, r0
 690              	.LVL39:
 691              		.loc 1 932 0
 692 032a FFF7FEFF 		bl	xTaskIsTaskSuspended
 693              	.LVL40:
 694 032e 0128     		cmp	r0, #1
 695 0330 26D1     		bne	.L116
 696              		.loc 1 936 0
 697 0332 164B     		ldr	r3, .L117
 698 0334 1B68     		ldr	r3, [r3]
 699 0336 002B     		cmp	r3, #0
 700 0338 1DD1     		bne	.L110
 701              		.loc 1 938 0
 702 033a E36A     		ldr	r3, [r4, #44]
 703 033c 0093     		str	r3, [sp]
 704 033e 144B     		ldr	r3, .L117+4
 705              		.loc 1 939 0
 706 0340 261D     		add	r6, r4, #4
 707              		.loc 1 938 0
 708 0342 1B68     		ldr	r3, [r3]
 709              		.loc 1 939 0
 710 0344 301C     		mov	r0, r6
 711              		.loc 1 938 0
 712 0346 DD6A     		ldr	r5, [r3, #44]
 713              		.loc 1 939 0
 714 0348 FFF7FEFF 		bl	vListRemove
 715              		.loc 1 940 0
 716 034c 114A     		ldr	r2, .L117+8
 717 034e E16A     		ldr	r1, [r4, #44]
 718 0350 1368     		ldr	r3, [r2]
 719 0352 9942     		cmp	r1, r3
 720 0354 00D9     		bls	.L112
 721 0356 1160     		str	r1, [r2]
 722              	.L112:
 723              		.loc 1 938 0
 724 0358 009B     		ldr	r3, [sp]
 725 035a 0027     		mov	r7, #0
 726              	.LVL41:
 727 035c AB42     		cmp	r3, r5
 728 035e 00D3     		bcc	.L114
 729 0360 0127     		mov	r7, #1
 730              	.L114:
 731              		.loc 1 940 0
 732 0362 E36A     		ldr	r3, [r4, #44]
 733 0364 9800     		lsl	r0, r3, #2
 734 0366 C018     		add	r0, r0, r3
 735 0368 0B4B     		ldr	r3, .L117+12
 736 036a 8000     		lsl	r0, r0, #2
 737 036c C018     		add	r0, r0, r3
 738 036e 311C     		mov	r1, r6
 739 0370 FFF7FEFF 		bl	vListInsertEnd
 740 0374 05E0     		b	.L109
 741              	.LVL42:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 42


 742              	.L110:
 743              		.loc 1 947 0
 744 0376 211C     		mov	r1, r4
 745 0378 1831     		add	r1, r1, #24
 746 037a 0848     		ldr	r0, .L117+16
 747 037c FFF7FEFF 		bl	vListInsertEnd
 748              	.L116:
 749 0380 0027     		mov	r7, #0
 750              	.LVL43:
 751              	.L109:
 752              		.loc 1 952 0
 753 0382 381C     		mov	r0, r7
 754 0384 01B0     		add	sp, sp, #4
 755              		@ sp needed for prologue
 756              	.LVL44:
 757              	.LVL45:
 758 0386 F0BC     		pop	{r4, r5, r6, r7}
 759 0388 02BC     		pop	{r1}
 760 038a 0847     		bx	r1
 761              	.L118:
 762              		.align	2
 763              	.L117:
 764 038c 10000000 		.word	uxSchedulerSuspended
 765 0390 00000000 		.word	pxCurrentTCB
 766 0394 14000000 		.word	uxTopReadyPriority
 767 0398 2C000000 		.word	pxReadyTasksLists
 768 039c C0000000 		.word	xPendingReadyList
 769              	.LFE11:
 770              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 771              		.align	2
 772              		.global	vTaskResume
 773              		.code 16
 774              		.thumb_func
 775              		.type	vTaskResume, %function
 776              	vTaskResume:
 777              	.LFB10:
 778              		.loc 1 884 0
 779 03a0 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI9:
 781              	.LVL46:
 782              		.loc 1 884 0
 783 03a2 041C     		mov	r4, r0
 784              		.loc 1 893 0
 785 03a4 0028     		cmp	r0, #0
 786 03a6 25D0     		beq	.L128
 787 03a8 144E     		ldr	r6, .L129
 788 03aa 3368     		ldr	r3, [r6]
 789 03ac 9842     		cmp	r0, r3
 790 03ae 21D0     		beq	.L128
 791              		.loc 1 895 0
 792 03b0 FFF7FEFF 		bl	vPortEnterCritical
 793              	.LVL47:
 794              		.loc 1 897 0
 795 03b4 201C     		mov	r0, r4
 796              	.LVL48:
 797 03b6 FFF7FEFF 		bl	xTaskIsTaskSuspended
 798              	.LVL49:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 43


 799 03ba 0128     		cmp	r0, #1
 800 03bc 18D1     		bne	.L123
 801              		.loc 1 903 0
 802 03be 251D     		add	r5, r4, #4
 803 03c0 281C     		mov	r0, r5
 804 03c2 FFF7FEFF 		bl	vListRemove
 805              		.loc 1 904 0
 806 03c6 0E4A     		ldr	r2, .L129+4
 807 03c8 E16A     		ldr	r1, [r4, #44]
 808 03ca 1368     		ldr	r3, [r2]
 809 03cc 9942     		cmp	r1, r3
 810 03ce 00D9     		bls	.L125
 811 03d0 1160     		str	r1, [r2]
 812              	.L125:
 813 03d2 E36A     		ldr	r3, [r4, #44]
 814 03d4 9800     		lsl	r0, r3, #2
 815 03d6 C018     		add	r0, r0, r3
 816 03d8 0A4B     		ldr	r3, .L129+8
 817 03da 8000     		lsl	r0, r0, #2
 818 03dc C018     		add	r0, r0, r3
 819 03de 291C     		mov	r1, r5
 820 03e0 FFF7FEFF 		bl	vListInsertEnd
 821              		.loc 1 907 0
 822 03e4 3368     		ldr	r3, [r6]
 823 03e6 E26A     		ldr	r2, [r4, #44]
 824 03e8 DB6A     		ldr	r3, [r3, #44]
 825 03ea 9A42     		cmp	r2, r3
 826 03ec 00D3     		bcc	.L123
 827              		.loc 1 911 0
 828 03ee 00DF     		SWI
 829              		.code	16
 830              	.L123:
 831              		.loc 1 915 0
 832 03f0 FFF7FEFF 		bl	vPortExitCritical
 833              	.LVL50:
 834              	.L128:
 835              		.loc 1 917 0
 836              		@ sp needed for prologue
 837              	.LVL51:
 838 03f4 70BC     		pop	{r4, r5, r6}
 839 03f6 01BC     		pop	{r0}
 840 03f8 0047     		bx	r0
 841              	.L130:
 842 03fa C046     		.align	2
 843              	.L129:
 844 03fc 00000000 		.word	pxCurrentTCB
 845 0400 14000000 		.word	uxTopReadyPriority
 846 0404 2C000000 		.word	pxReadyTasksLists
 847              	.LFE10:
 848              		.size	vTaskResume, .-vTaskResume
 849              		.align	2
 850              		.global	vTaskSuspend
 851              		.code 16
 852              		.thumb_func
 853              		.type	vTaskSuspend, %function
 854              	vTaskSuspend:
 855              	.LFB8:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 44


 856              		.loc 1 810 0
 857 0408 70B5     		push	{r4, r5, r6, lr}
 858              	.LCFI10:
 859              	.LVL52:
 860              		.loc 1 810 0
 861 040a 051C     		mov	r5, r0
 862              		.loc 1 813 0
 863 040c FFF7FEFF 		bl	vPortEnterCritical
 864              	.LVL53:
 865              		.loc 1 817 0
 866 0410 114B     		ldr	r3, .L142
 867 0412 1B68     		ldr	r3, [r3]
 868 0414 9D42     		cmp	r5, r3
 869 0416 01D1     		bne	.L132
 870 0418 0025     		mov	r5, #0
 871 041a 01E0     		b	.L134
 872              	.L132:
 873              		.loc 1 823 0
 874 041c 002D     		cmp	r5, #0
 875 041e 02D1     		bne	.L135
 876              	.L134:
 877 0420 0D4B     		ldr	r3, .L142
 878 0422 1C68     		ldr	r4, [r3]
 879              	.LVL54:
 880 0424 00E0     		b	.L136
 881              	.LVL55:
 882              	.L135:
 883 0426 2C1C     		mov	r4, r5
 884              	.LVL56:
 885              	.L136:
 886              		.loc 1 828 0
 887 0428 261D     		add	r6, r4, #4
 888 042a 301C     		mov	r0, r6
 889 042c FFF7FEFF 		bl	vListRemove
 890              		.loc 1 831 0
 891 0430 A36A     		ldr	r3, [r4, #40]
 892 0432 002B     		cmp	r3, #0
 893 0434 03D0     		beq	.L137
 894              		.loc 1 833 0
 895 0436 201C     		mov	r0, r4
 896 0438 1830     		add	r0, r0, #24
 897 043a FFF7FEFF 		bl	vListRemove
 898              	.L137:
 899              		.loc 1 836 0
 900 043e 0748     		ldr	r0, .L142+4
 901 0440 311C     		mov	r1, r6
 902 0442 FFF7FEFF 		bl	vListInsertEnd
 903              		.loc 1 838 0
 904 0446 FFF7FEFF 		bl	vPortExitCritical
 905              		.loc 1 841 0
 906 044a 002D     		cmp	r5, #0
 907 044c 00D1     		bne	.L141
 908              		.loc 1 843 0
 909 044e 00DF     		SWI
 910              		.code	16
 911              	.L141:
 912              		.loc 1 845 0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 45


 913              		@ sp needed for prologue
 914              	.LVL57:
 915              	.LVL58:
 916 0450 70BC     		pop	{r4, r5, r6}
 917 0452 01BC     		pop	{r0}
 918 0454 0047     		bx	r0
 919              	.L143:
 920 0456 C046     		.align	2
 921              	.L142:
 922 0458 00000000 		.word	pxCurrentTCB
 923 045c E8000000 		.word	xSuspendedTaskList
 924              	.LFE8:
 925              		.size	vTaskSuspend, .-vTaskSuspend
 926              		.align	2
 927              		.global	vTaskPrioritySet
 928              		.code 16
 929              		.thumb_func
 930              		.type	vTaskPrioritySet, %function
 931              	vTaskPrioritySet:
 932              	.LFB7:
 933              		.loc 1 705 0
 934 0460 F0B5     		push	{r4, r5, r6, r7, lr}
 935              	.LCFI11:
 936              	.LVL59:
 937              		.loc 1 705 0
 938 0462 041C     		mov	r4, r0
 939 0464 0E1C     		mov	r6, r1
 940 0466 0429     		cmp	r1, #4
 941 0468 00D9     		bls	.L145
 942              	.LVL60:
 943 046a 0426     		mov	r6, #4
 944              	.LVL61:
 945              	.L145:
 946              		.loc 1 715 0
 947 046c FFF7FEFF 		bl	vPortEnterCritical
 948              		.loc 1 717 0
 949 0470 1F4B     		ldr	r3, .L164
 950 0472 1B68     		ldr	r3, [r3]
 951 0474 9C42     		cmp	r4, r3
 952 0476 01D1     		bne	.L146
 953 0478 0024     		mov	r4, #0
 954 047a 01E0     		b	.L148
 955              	.L146:
 956              		.loc 1 724 0
 957 047c 002C     		cmp	r4, #0
 958 047e 02D1     		bne	.L149
 959              	.L148:
 960 0480 1B4B     		ldr	r3, .L164
 961 0482 1D68     		ldr	r5, [r3]
 962              	.LVL62:
 963 0484 00E0     		b	.L150
 964              	.LVL63:
 965              	.L149:
 966 0486 251C     		mov	r5, r4
 967              	.LVL64:
 968              	.L150:
 969              		.loc 1 734 0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 46


 970 0488 EA6A     		ldr	r2, [r5, #44]
 971              	.LVL65:
 972              		.loc 1 738 0
 973 048a B242     		cmp	r2, r6
 974 048c 2BD0     		beq	.L151
 975              		.loc 1 742 0
 976 048e 9642     		cmp	r6, r2
 977 0490 03D9     		bls	.L153
 978 0492 6342     		neg	r3, r4
 979 0494 2343     		orr	r3, r3, r4
 980 0496 DF0F     		lsr	r7, r3, #31
 981              	.LVL66:
 982 0498 04E0     		b	.L156
 983              	.LVL67:
 984              	.L153:
 985 049a 0020     		mov	r0, #0
 986 049c 002C     		cmp	r4, #0
 987 049e 00D1     		bne	.L157
 988 04a0 0120     		mov	r0, #1
 989              	.L157:
 990 04a2 071C     		mov	r7, r0
 991              	.LVL68:
 992              	.L156:
 993              		.loc 1 780 0
 994 04a4 0523     		mov	r3, #5
 995 04a6 9B1B     		sub	r3, r3, r6
 996 04a8 AB61     		str	r3, [r5, #24]
 997              		.loc 1 786 0
 998 04aa 9300     		lsl	r3, r2, #2
 999 04ac 9B18     		add	r3, r3, r2
 1000              		.loc 1 776 0
 1001 04ae EE62     		str	r6, [r5, #44]
 1002              		.loc 1 786 0
 1003 04b0 104E     		ldr	r6, .L164+4
 1004              	.LVL69:
 1005 04b2 9B00     		lsl	r3, r3, #2
 1006 04b4 6A69     		ldr	r2, [r5, #20]
 1007              	.LVL70:
 1008 04b6 9B19     		add	r3, r3, r6
 1009 04b8 9A42     		cmp	r2, r3
 1010 04ba 11D1     		bne	.L158
 1011              		.loc 1 791 0
 1012 04bc 2C1D     		add	r4, r5, #4
 1013              	.LVL71:
 1014 04be 201C     		mov	r0, r4
 1015 04c0 FFF7FEFF 		bl	vListRemove
 1016              		.loc 1 792 0
 1017 04c4 0C4A     		ldr	r2, .L164+8
 1018 04c6 E96A     		ldr	r1, [r5, #44]
 1019 04c8 1368     		ldr	r3, [r2]
 1020 04ca 9942     		cmp	r1, r3
 1021 04cc 00D9     		bls	.L160
 1022 04ce 1160     		str	r1, [r2]
 1023              	.L160:
 1024 04d0 EB6A     		ldr	r3, [r5, #44]
 1025 04d2 9800     		lsl	r0, r3, #2
 1026 04d4 C018     		add	r0, r0, r3
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 47


 1027 04d6 8000     		lsl	r0, r0, #2
 1028 04d8 8019     		add	r0, r0, r6
 1029 04da 211C     		mov	r1, r4
 1030 04dc FFF7FEFF 		bl	vListInsertEnd
 1031              	.LVL72:
 1032              	.L158:
 1033              		.loc 1 795 0
 1034 04e0 012F     		cmp	r7, #1
 1035 04e2 00D1     		bne	.L151
 1036              		.loc 1 797 0
 1037 04e4 00DF     		SWI
 1038              	.LVL73:
 1039              		.code	16
 1040              	.L151:
 1041              		.loc 1 801 0
 1042 04e6 FFF7FEFF 		bl	vPortExitCritical
 1043              	.LVL74:
 1044              		.loc 1 802 0
 1045              		@ sp needed for prologue
 1046              	.LVL75:
 1047              	.LVL76:
 1048              	.LVL77:
 1049              	.LVL78:
 1050 04ea F0BC     		pop	{r4, r5, r6, r7}
 1051 04ec 01BC     		pop	{r0}
 1052 04ee 0047     		bx	r0
 1053              	.L165:
 1054              		.align	2
 1055              	.L164:
 1056 04f0 00000000 		.word	pxCurrentTCB
 1057 04f4 2C000000 		.word	pxReadyTasksLists
 1058 04f8 14000000 		.word	uxTopReadyPriority
 1059              	.LFE7:
 1060              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1061              		.align	2
 1062              		.global	vTaskDelete
 1063              		.code 16
 1064              		.thumb_func
 1065              		.type	vTaskDelete, %function
 1066              	vTaskDelete:
 1067              	.LFB3:
 1068              		.loc 1 483 0
 1069 04fc 70B5     		push	{r4, r5, r6, lr}
 1070              	.LCFI12:
 1071              	.LVL79:
 1072              		.loc 1 483 0
 1073 04fe 051C     		mov	r5, r0
 1074              		.loc 1 486 0
 1075 0500 FFF7FEFF 		bl	vPortEnterCritical
 1076              	.LVL80:
 1077              		.loc 1 490 0
 1078 0504 154B     		ldr	r3, .L178
 1079 0506 1B68     		ldr	r3, [r3]
 1080 0508 9D42     		cmp	r5, r3
 1081 050a 01D1     		bne	.L167
 1082 050c 0025     		mov	r5, #0
 1083 050e 01E0     		b	.L169
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 48


 1084              	.L167:
 1085              		.loc 1 496 0
 1086 0510 002D     		cmp	r5, #0
 1087 0512 02D1     		bne	.L170
 1088              	.L169:
 1089 0514 114B     		ldr	r3, .L178
 1090 0516 1C68     		ldr	r4, [r3]
 1091              	.LVL81:
 1092 0518 00E0     		b	.L171
 1093              	.LVL82:
 1094              	.L170:
 1095 051a 2C1C     		mov	r4, r5
 1096              	.LVL83:
 1097              	.L171:
 1098              		.loc 1 504 0
 1099 051c 261D     		add	r6, r4, #4
 1100 051e 301C     		mov	r0, r6
 1101 0520 FFF7FEFF 		bl	vListRemove
 1102              		.loc 1 507 0
 1103 0524 A36A     		ldr	r3, [r4, #40]
 1104 0526 002B     		cmp	r3, #0
 1105 0528 03D0     		beq	.L172
 1106              		.loc 1 509 0
 1107 052a 201C     		mov	r0, r4
 1108 052c 1830     		add	r0, r0, #24
 1109 052e FFF7FEFF 		bl	vListRemove
 1110              	.L172:
 1111              		.loc 1 512 0
 1112 0532 0B48     		ldr	r0, .L178+4
 1113 0534 311C     		mov	r1, r6
 1114 0536 FFF7FEFF 		bl	vListInsertEnd
 1115              		.loc 1 517 0
 1116 053a 0A4A     		ldr	r2, .L178+8
 1117 053c 1368     		ldr	r3, [r2]
 1118 053e 0133     		add	r3, r3, #1
 1119 0540 1360     		str	r3, [r2]
 1120              		.loc 1 519 0
 1121 0542 FFF7FEFF 		bl	vPortExitCritical
 1122              		.loc 1 522 0
 1123 0546 084B     		ldr	r3, .L178+12
 1124 0548 1B68     		ldr	r3, [r3]
 1125 054a 002B     		cmp	r3, #0
 1126 054c 02D0     		beq	.L177
 1127              		.loc 1 524 0
 1128 054e 002D     		cmp	r5, #0
 1129 0550 00D1     		bne	.L177
 1130              		.loc 1 526 0
 1131 0552 00DF     		SWI
 1132              		.code	16
 1133              	.L177:
 1134              		.loc 1 529 0
 1135              		@ sp needed for prologue
 1136              	.LVL84:
 1137              	.LVL85:
 1138 0554 70BC     		pop	{r4, r5, r6}
 1139 0556 01BC     		pop	{r0}
 1140 0558 0047     		bx	r0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 49


 1141              	.L179:
 1142 055a C046     		.align	2
 1143              	.L178:
 1144 055c 00000000 		.word	pxCurrentTCB
 1145 0560 D4000000 		.word	xTasksWaitingTermination
 1146 0564 24000000 		.word	uxTasksDeleted
 1147 0568 20000000 		.word	xSchedulerRunning
 1148              	.LFE3:
 1149              		.size	vTaskDelete, .-vTaskDelete
 1150              		.align	2
 1151              		.global	vTaskPlaceOnEventList
 1152              		.code 16
 1153              		.thumb_func
 1154              		.type	vTaskPlaceOnEventList, %function
 1155              	vTaskPlaceOnEventList:
 1156              	.LFB20:
 1157              		.loc 1 1423 0
 1158 056c 30B5     		push	{r4, r5, lr}
 1159              	.LCFI13:
 1160              	.LVL86:
 1161              		.loc 1 1432 0
 1162 056e 134C     		ldr	r4, .L188
 1163              		.loc 1 1423 0
 1164 0570 0D1C     		mov	r5, r1
 1165              		.loc 1 1432 0
 1166 0572 2168     		ldr	r1, [r4]
 1167              	.LVL87:
 1168 0574 1831     		add	r1, r1, #24
 1169 0576 FFF7FEFF 		bl	vListInsert
 1170              	.LVL88:
 1171              		.loc 1 1437 0
 1172 057a 2068     		ldr	r0, [r4]
 1173 057c 0430     		add	r0, r0, #4
 1174 057e FFF7FEFF 		bl	vListRemove
 1175              		.loc 1 1442 0
 1176 0582 6B1C     		add	r3, r5, #1
 1177 0584 05D1     		bne	.L181
 1178              		.loc 1 1447 0
 1179 0586 2168     		ldr	r1, [r4]
 1180 0588 0D48     		ldr	r0, .L188+4
 1181 058a 0431     		add	r1, r1, #4
 1182 058c FFF7FEFF 		bl	vListInsertEnd
 1183 0590 10E0     		b	.L186
 1184              	.L181:
 1185              		.loc 1 1453 0
 1186 0592 0C49     		ldr	r1, .L188+8
 1187              		.loc 1 1455 0
 1188 0594 094C     		ldr	r4, .L188
 1189              		.loc 1 1453 0
 1190 0596 0A68     		ldr	r2, [r1]
 1191              		.loc 1 1455 0
 1192 0598 2368     		ldr	r3, [r4]
 1193              		.loc 1 1453 0
 1194 059a AA18     		add	r2, r5, r2
 1195              	.LVL89:
 1196              		.loc 1 1455 0
 1197 059c 5A60     		str	r2, [r3, #4]
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 50


 1198              		.loc 1 1457 0
 1199 059e 0B68     		ldr	r3, [r1]
 1200 05a0 9A42     		cmp	r2, r3
 1201 05a2 01D2     		bcs	.L184
 1202              		.loc 1 1460 0
 1203 05a4 084B     		ldr	r3, .L188+12
 1204 05a6 00E0     		b	.L187
 1205              	.L184:
 1206              		.loc 1 1465 0
 1207 05a8 084B     		ldr	r3, .L188+16
 1208              	.L187:
 1209 05aa 1868     		ldr	r0, [r3]
 1210 05ac 2168     		ldr	r1, [r4]
 1211 05ae 0431     		add	r1, r1, #4
 1212 05b0 FFF7FEFF 		bl	vListInsert
 1213              	.LVL90:
 1214              	.L186:
 1215              		.loc 1 1489 0
 1216              		@ sp needed for prologue
 1217              	.LVL91:
 1218 05b4 30BC     		pop	{r4, r5}
 1219 05b6 01BC     		pop	{r0}
 1220 05b8 0047     		bx	r0
 1221              	.L189:
 1222 05ba C046     		.align	2
 1223              	.L188:
 1224 05bc 00000000 		.word	pxCurrentTCB
 1225 05c0 E8000000 		.word	xSuspendedTaskList
 1226 05c4 0C000000 		.word	xTickCount
 1227 05c8 BC000000 		.word	pxOverflowDelayedTaskList
 1228 05cc B8000000 		.word	pxDelayedTaskList
 1229              	.LFE20:
 1230              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 1231              		.align	2
 1232              		.global	vTaskDelay
 1233              		.code 16
 1234              		.thumb_func
 1235              		.type	vTaskDelay, %function
 1236              	vTaskDelay:
 1237              	.LFB5:
 1238              		.loc 1 622 0
 1239 05d0 70B5     		push	{r4, r5, r6, lr}
 1240              	.LCFI14:
 1241              	.LVL92:
 1242              		.loc 1 622 0
 1243 05d2 061C     		mov	r6, r0
 1244              		.loc 1 627 0
 1245 05d4 0028     		cmp	r0, #0
 1246 05d6 1AD0     		beq	.L191
 1247              		.loc 1 629 0
 1248 05d8 FFF7FEFF 		bl	vTaskSuspendAll
 1249              	.LVL93:
 1250              		.loc 1 643 0
 1251 05dc 0E4D     		ldr	r5, .L199
 1252 05de 2C68     		ldr	r4, [r5]
 1253 05e0 3419     		add	r4, r6, r4
 1254              	.LVL94:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 51


 1255              		.loc 1 648 0
 1256 05e2 0E4E     		ldr	r6, .L199+4
 1257              	.LVL95:
 1258 05e4 3068     		ldr	r0, [r6]
 1259 05e6 0430     		add	r0, r0, #4
 1260 05e8 FFF7FEFF 		bl	vListRemove
 1261              		.loc 1 651 0
 1262 05ec 3368     		ldr	r3, [r6]
 1263 05ee 5C60     		str	r4, [r3, #4]
 1264              		.loc 1 653 0
 1265 05f0 2B68     		ldr	r3, [r5]
 1266 05f2 9C42     		cmp	r4, r3
 1267 05f4 01D2     		bcs	.L193
 1268              		.loc 1 657 0
 1269 05f6 0A4B     		ldr	r3, .L199+8
 1270 05f8 00E0     		b	.L198
 1271              	.L193:
 1272              		.loc 1 663 0
 1273 05fa 0A4B     		ldr	r3, .L199+12
 1274              	.L198:
 1275 05fc 1868     		ldr	r0, [r3]
 1276 05fe 3168     		ldr	r1, [r6]
 1277 0600 0431     		add	r1, r1, #4
 1278 0602 FFF7FEFF 		bl	vListInsert
 1279              		.loc 1 666 0
 1280 0606 FFF7FEFF 		bl	xTaskResumeAll
 1281              		.loc 1 671 0
 1282 060a 0028     		cmp	r0, #0
 1283 060c 00D1     		bne	.L197
 1284              	.LVL96:
 1285              	.L191:
 1286              		.loc 1 673 0
 1287 060e 00DF     		SWI
 1288              		.code	16
 1289              	.L197:
 1290              		.loc 1 675 0
 1291              		@ sp needed for prologue
 1292              	.LVL97:
 1293 0610 70BC     		pop	{r4, r5, r6}
 1294 0612 01BC     		pop	{r0}
 1295 0614 0047     		bx	r0
 1296              	.L200:
 1297 0616 C046     		.align	2
 1298              	.L199:
 1299 0618 0C000000 		.word	xTickCount
 1300 061c 00000000 		.word	pxCurrentTCB
 1301 0620 BC000000 		.word	pxOverflowDelayedTaskList
 1302 0624 B8000000 		.word	pxDelayedTaskList
 1303              	.LFE5:
 1304              		.size	vTaskDelay, .-vTaskDelay
 1305              		.align	2
 1306              		.global	vTaskDelayUntil
 1307              		.code 16
 1308              		.thumb_func
 1309              		.type	vTaskDelayUntil, %function
 1310              	vTaskDelayUntil:
 1311              	.LFB4:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 52


 1312              		.loc 1 545 0
 1313 0628 30B5     		push	{r4, r5, lr}
 1314              	.LCFI15:
 1315              	.LVL98:
 1316              		.loc 1 545 0
 1317 062a 0C1C     		mov	r4, r1
 1318 062c 051C     		mov	r5, r0
 1319              		.loc 1 549 0
 1320 062e FFF7FEFF 		bl	vTaskSuspendAll
 1321              	.LVL99:
 1322              		.loc 1 554 0
 1323 0632 1949     		ldr	r1, .L220
 1324              		.loc 1 552 0
 1325 0634 2A68     		ldr	r2, [r5]
 1326              		.loc 1 554 0
 1327 0636 0B68     		ldr	r3, [r1]
 1328              		.loc 1 552 0
 1329 0638 A418     		add	r4, r4, r2
 1330              	.LVL100:
 1331              		.loc 1 554 0
 1332 063a 9342     		cmp	r3, r2
 1333 063c 03D2     		bcs	.L202
 1334              		.loc 1 561 0
 1335 063e 9442     		cmp	r4, r2
 1336 0640 05D3     		bcc	.L208
 1337 0642 0023     		mov	r3, #0
 1338              	.LVL101:
 1339 0644 09E0     		b	.L206
 1340              	.LVL102:
 1341              	.L202:
 1342              		.loc 1 571 0
 1343 0646 9442     		cmp	r4, r2
 1344 0648 01D2     		bcs	.L208
 1345 064a 0123     		mov	r3, #1
 1346              	.LVL103:
 1347 064c 05E0     		b	.L206
 1348              	.LVL104:
 1349              	.L208:
 1350 064e 0B68     		ldr	r3, [r1]
 1351 0650 0022     		mov	r2, #0
 1352 0652 9C42     		cmp	r4, r3
 1353 0654 00D9     		bls	.L210
 1354 0656 0122     		mov	r2, #1
 1355              	.L210:
 1356 0658 131C     		mov	r3, r2
 1357              	.LVL105:
 1358              	.L206:
 1359              		.loc 1 578 0
 1360 065a 2C60     		str	r4, [r5]
 1361              		.loc 1 580 0
 1362 065c 002B     		cmp	r3, #0
 1363 065e 12D0     		beq	.L211
 1364              		.loc 1 587 0
 1365 0660 0E4D     		ldr	r5, .L220+4
 1366              	.LVL106:
 1367 0662 2868     		ldr	r0, [r5]
 1368 0664 0430     		add	r0, r0, #4
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 53


 1369 0666 FFF7FEFF 		bl	vListRemove
 1370              	.LVL107:
 1371              		.loc 1 590 0
 1372 066a 2B68     		ldr	r3, [r5]
 1373 066c 5C60     		str	r4, [r3, #4]
 1374              		.loc 1 592 0
 1375 066e 0A4B     		ldr	r3, .L220
 1376 0670 1B68     		ldr	r3, [r3]
 1377 0672 9C42     		cmp	r4, r3
 1378 0674 01D2     		bcs	.L213
 1379              		.loc 1 596 0
 1380 0676 0A4B     		ldr	r3, .L220+8
 1381 0678 00E0     		b	.L218
 1382              	.L213:
 1383              		.loc 1 602 0
 1384 067a 0A4B     		ldr	r3, .L220+12
 1385              	.L218:
 1386 067c 1868     		ldr	r0, [r3]
 1387 067e 2968     		ldr	r1, [r5]
 1388 0680 0431     		add	r1, r1, #4
 1389 0682 FFF7FEFF 		bl	vListInsert
 1390              	.LVL108:
 1391              	.L211:
 1392              		.loc 1 606 0
 1393 0686 FFF7FEFF 		bl	xTaskResumeAll
 1394              	.LVL109:
 1395              		.loc 1 610 0
 1396 068a 0028     		cmp	r0, #0
 1397 068c 00D1     		bne	.L217
 1398              	.LVL110:
 1399              		.loc 1 612 0
 1400 068e 00DF     		SWI
 1401              		.code	16
 1402              	.L217:
 1403              		.loc 1 614 0
 1404              		@ sp needed for prologue
 1405              	.LVL111:
 1406              	.LVL112:
 1407 0690 30BC     		pop	{r4, r5}
 1408 0692 01BC     		pop	{r0}
 1409 0694 0047     		bx	r0
 1410              	.L221:
 1411 0696 C046     		.align	2
 1412              	.L220:
 1413 0698 0C000000 		.word	xTickCount
 1414 069c 00000000 		.word	pxCurrentTCB
 1415 06a0 BC000000 		.word	pxOverflowDelayedTaskList
 1416 06a4 B8000000 		.word	pxDelayedTaskList
 1417              	.LFE4:
 1418              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 1419              		.align	2
 1420              		.global	vTaskEndScheduler
 1421              		.code 16
 1422              		.thumb_func
 1423              		.type	vTaskEndScheduler, %function
 1424              	vTaskEndScheduler:
 1425              	.LFB13:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 54


 1426              		.loc 1 1002 0
 1427 06a8 00B5     		push	{lr}
 1428              	.LCFI16:
 1429              		.loc 1 1006 0
 1430 06aa FFF7FEFF 		bl	vPortDisableInterruptsFromThumb
 1431              		.loc 1 1007 0
 1432 06ae 034A     		ldr	r2, .L224
 1433 06b0 0023     		mov	r3, #0
 1434 06b2 1360     		str	r3, [r2]
 1435              		.loc 1 1008 0
 1436 06b4 FFF7FEFF 		bl	vPortEndScheduler
 1437              		.loc 1 1009 0
 1438              		@ sp needed for prologue
 1439 06b8 01BC     		pop	{r0}
 1440 06ba 0047     		bx	r0
 1441              	.L225:
 1442              		.align	2
 1443              	.L224:
 1444 06bc 20000000 		.word	xSchedulerRunning
 1445              	.LFE13:
 1446              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1447              		.align	2
 1448              		.code 16
 1449              		.thumb_func
 1450              		.type	prvIdleTask, %function
 1451              	prvIdleTask:
 1452              	.LFB25:
1593:FreeRTOS/tasks.c **** 
1594:FreeRTOS/tasks.c **** /*
1595:FreeRTOS/tasks.c ****  * -----------------------------------------------------------
1596:FreeRTOS/tasks.c ****  * The Idle task.
1597:FreeRTOS/tasks.c ****  * ----------------------------------------------------------
1598:FreeRTOS/tasks.c ****  *
1599:FreeRTOS/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
1600:FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
1601:FreeRTOS/tasks.c ****  *
1602:FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
1603:FreeRTOS/tasks.c ****  *
1604:FreeRTOS/tasks.c ****  */
1605:FreeRTOS/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
1606:FreeRTOS/tasks.c **** {
 1453              		.loc 1 1606 0
 1454 06c0 30B5     		push	{r4, r5, lr}
 1455              	.LCFI17:
 1456              	.LVL113:
 1457              	.L240:
 1458              	.LBB12:
 1459              	.LBB13:
 1460              	.LBB14:
1607:FreeRTOS/tasks.c **** 	/* Stop warnings. */
1608:FreeRTOS/tasks.c **** 	( void ) pvParameters;
1609:FreeRTOS/tasks.c **** 
1610:FreeRTOS/tasks.c **** 	for( ;; )
1611:FreeRTOS/tasks.c **** 	{
1612:FreeRTOS/tasks.c **** 		/* See if any tasks have been deleted. */
1613:FreeRTOS/tasks.c **** 		prvCheckTasksWaitingTermination();
1614:FreeRTOS/tasks.c **** 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 55


1615:FreeRTOS/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
1616:FreeRTOS/tasks.c **** 		{
1617:FreeRTOS/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
1618:FreeRTOS/tasks.c **** 			see if any other task has become available.  If we are using
1619:FreeRTOS/tasks.c **** 			preemption we don't need to do this as any task becoming available
1620:FreeRTOS/tasks.c **** 			will automatically get the processor anyway. */
1621:FreeRTOS/tasks.c **** 			taskYIELD();	
1622:FreeRTOS/tasks.c **** 		}
1623:FreeRTOS/tasks.c **** 		#endif
1624:FreeRTOS/tasks.c **** 
1625:FreeRTOS/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
1626:FreeRTOS/tasks.c **** 		{
1627:FreeRTOS/tasks.c **** 			/* When using preemption tasks of equal priority will be
1628:FreeRTOS/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
1629:FreeRTOS/tasks.c **** 			to run then the idle task should yield before the end of the
1630:FreeRTOS/tasks.c **** 			timeslice.
1631:FreeRTOS/tasks.c **** 			
1632:FreeRTOS/tasks.c **** 			A critical region is not required here as we are just reading from
1633:FreeRTOS/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
1634:FreeRTOS/tasks.c **** 			the ready list at the idle priority contains more than one task
1635:FreeRTOS/tasks.c **** 			then a task other than the idle task is ready to execute. */
1636:FreeRTOS/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_
1637:FreeRTOS/tasks.c **** 			{
1638:FreeRTOS/tasks.c **** 				taskYIELD();
1639:FreeRTOS/tasks.c **** 			}
1640:FreeRTOS/tasks.c **** 		}
1641:FreeRTOS/tasks.c **** 		#endif
1642:FreeRTOS/tasks.c **** 
1643:FreeRTOS/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
1644:FreeRTOS/tasks.c **** 		{
1645:FreeRTOS/tasks.c **** 			extern void vApplicationIdleHook( void );
1646:FreeRTOS/tasks.c **** 
1647:FreeRTOS/tasks.c **** 			/* Call the user defined function from within the idle task.  This
1648:FreeRTOS/tasks.c **** 			allows the application designer to add background functionality
1649:FreeRTOS/tasks.c **** 			without the overhead of a separate task.
1650:FreeRTOS/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
1651:FreeRTOS/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
1652:FreeRTOS/tasks.c **** 			vApplicationIdleHook();
1653:FreeRTOS/tasks.c **** 		}
1654:FreeRTOS/tasks.c **** 		#endif
1655:FreeRTOS/tasks.c **** 	}
1656:FreeRTOS/tasks.c **** } /*lint !e715 pvParameters is not accessed but all task functions require the same prototype. */
1657:FreeRTOS/tasks.c **** 
1658:FreeRTOS/tasks.c **** 
1659:FreeRTOS/tasks.c **** 
1660:FreeRTOS/tasks.c **** 
1661:FreeRTOS/tasks.c **** 
1662:FreeRTOS/tasks.c **** 
1663:FreeRTOS/tasks.c **** 
1664:FreeRTOS/tasks.c **** /*-----------------------------------------------------------
1665:FreeRTOS/tasks.c ****  * File private functions documented at the top of the file.
1666:FreeRTOS/tasks.c ****  *----------------------------------------------------------*/
1667:FreeRTOS/tasks.c **** 
1668:FreeRTOS/tasks.c **** 
1669:FreeRTOS/tasks.c **** 
1670:FreeRTOS/tasks.c **** static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed portCHAR * const pcName, unsigne
1671:FreeRTOS/tasks.c **** {
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 56


1672:FreeRTOS/tasks.c **** 	/* Store the function name in the TCB. */
1673:FreeRTOS/tasks.c **** 	strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned portSHORT ) configMAX_T
1674:FreeRTOS/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned portSHORT ) configMAX_TASK_NAME_LEN - ( unsigned portSHORT ) 1 ] = '
1675:FreeRTOS/tasks.c **** 
1676:FreeRTOS/tasks.c **** 	/* This is used as an array index so must ensure it's not too large. */
1677:FreeRTOS/tasks.c **** 	if( uxPriority >= configMAX_PRIORITIES )
1678:FreeRTOS/tasks.c **** 	{
1679:FreeRTOS/tasks.c **** 		uxPriority = configMAX_PRIORITIES - 1;
1680:FreeRTOS/tasks.c **** 	}
1681:FreeRTOS/tasks.c **** 
1682:FreeRTOS/tasks.c **** 	pxTCB->uxPriority = uxPriority;
1683:FreeRTOS/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
1684:FreeRTOS/tasks.c **** 	{
1685:FreeRTOS/tasks.c **** 		pxTCB->uxBasePriority = uxPriority;
1686:FreeRTOS/tasks.c **** 	}
1687:FreeRTOS/tasks.c **** 	#endif
1688:FreeRTOS/tasks.c **** 
1689:FreeRTOS/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
1690:FreeRTOS/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
1691:FreeRTOS/tasks.c **** 
1692:FreeRTOS/tasks.c **** 	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
1693:FreeRTOS/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
1694:FreeRTOS/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
1695:FreeRTOS/tasks.c **** 
1696:FreeRTOS/tasks.c **** 	/* Event lists are always in priority order. */
1697:FreeRTOS/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
1698:FreeRTOS/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
1699:FreeRTOS/tasks.c **** 
1700:FreeRTOS/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
1701:FreeRTOS/tasks.c **** 	{
1702:FreeRTOS/tasks.c **** 		pxTCB->uxCriticalNesting = ( unsigned portBASE_TYPE ) 0;
1703:FreeRTOS/tasks.c **** 	}
1704:FreeRTOS/tasks.c **** 	#endif
1705:FreeRTOS/tasks.c **** 
1706:FreeRTOS/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
1707:FreeRTOS/tasks.c **** 	{
1708:FreeRTOS/tasks.c **** 		pxTCB->pxTaskTag = NULL;
1709:FreeRTOS/tasks.c **** 	}
1710:FreeRTOS/tasks.c **** 	#endif	
1711:FreeRTOS/tasks.c **** }
1712:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1713:FreeRTOS/tasks.c **** 
1714:FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void )
1715:FreeRTOS/tasks.c **** {
1716:FreeRTOS/tasks.c **** unsigned portBASE_TYPE uxPriority;
1717:FreeRTOS/tasks.c **** 
1718:FreeRTOS/tasks.c **** 	for( uxPriority = 0; uxPriority < configMAX_PRIORITIES; uxPriority++ )
1719:FreeRTOS/tasks.c **** 	{
1720:FreeRTOS/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
1721:FreeRTOS/tasks.c **** 	}
1722:FreeRTOS/tasks.c **** 
1723:FreeRTOS/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
1724:FreeRTOS/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
1725:FreeRTOS/tasks.c **** 	vListInitialise( ( xList * ) &xPendingReadyList );
1726:FreeRTOS/tasks.c **** 
1727:FreeRTOS/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
1728:FreeRTOS/tasks.c **** 	{
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 57


1729:FreeRTOS/tasks.c **** 		vListInitialise( ( xList * ) &xTasksWaitingTermination );
1730:FreeRTOS/tasks.c **** 	}
1731:FreeRTOS/tasks.c **** 	#endif
1732:FreeRTOS/tasks.c **** 
1733:FreeRTOS/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
1734:FreeRTOS/tasks.c **** 	{
1735:FreeRTOS/tasks.c **** 		vListInitialise( ( xList * ) &xSuspendedTaskList );
1736:FreeRTOS/tasks.c **** 	}
1737:FreeRTOS/tasks.c **** 	#endif
1738:FreeRTOS/tasks.c **** 
1739:FreeRTOS/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
1740:FreeRTOS/tasks.c **** 	using list2. */
1741:FreeRTOS/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
1742:FreeRTOS/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
1743:FreeRTOS/tasks.c **** }
1744:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1745:FreeRTOS/tasks.c **** 
1746:FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void )
1747:FreeRTOS/tasks.c **** {							
1748:FreeRTOS/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
1749:FreeRTOS/tasks.c **** 	{				
1750:FreeRTOS/tasks.c **** 		portBASE_TYPE xListIsEmpty;
1751:FreeRTOS/tasks.c **** 
1752:FreeRTOS/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
1753:FreeRTOS/tasks.c **** 		too often in the idle task. */
1754:FreeRTOS/tasks.c **** 		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0 )
 1461              		.loc 1 1754 0
 1462 06c2 184B     		ldr	r3, .L241
 1463 06c4 1B68     		ldr	r3, [r3]
 1464 06c6 002B     		cmp	r3, #0
 1465 06c8 25D0     		beq	.L229
1755:FreeRTOS/tasks.c **** 		{
1756:FreeRTOS/tasks.c **** 			vTaskSuspendAll();
 1466              		.loc 1 1756 0
 1467 06ca FFF7FEFF 		bl	vTaskSuspendAll
 1468              	.LVL114:
1757:FreeRTOS/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );				
 1469              		.loc 1 1757 0
 1470 06ce 164D     		ldr	r5, .L241+4
 1471 06d0 2C68     		ldr	r4, [r5]
 1472              	.LVL115:
1758:FreeRTOS/tasks.c **** 			xTaskResumeAll();
 1473              		.loc 1 1758 0
 1474 06d2 FFF7FEFF 		bl	xTaskResumeAll
1759:FreeRTOS/tasks.c **** 
1760:FreeRTOS/tasks.c **** 			if( !xListIsEmpty )
 1475              		.loc 1 1760 0
 1476 06d6 002C     		cmp	r4, #0
 1477 06d8 1DD0     		beq	.L229
 1478              	.LBB15:
1761:FreeRTOS/tasks.c **** 			{
1762:FreeRTOS/tasks.c **** 				tskTCB *pxTCB;
1763:FreeRTOS/tasks.c **** 
1764:FreeRTOS/tasks.c **** 				portENTER_CRITICAL();
 1479              		.loc 1 1764 0
 1480 06da FFF7FEFF 		bl	vPortEnterCritical
1765:FreeRTOS/tasks.c **** 				{			
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 58


1766:FreeRTOS/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( ( ( xList * ) &xTasksWaitingTermination ) );
 1481              		.loc 1 1766 0
 1482 06de 2B68     		ldr	r3, [r5]
 1483 06e0 002B     		cmp	r3, #0
 1484 06e2 01D1     		bne	.L232
 1485 06e4 0024     		mov	r4, #0
 1486              	.LVL116:
 1487 06e6 03E0     		b	.L234
 1488              	.LVL117:
 1489              	.L232:
 1490 06e8 2B1C     		mov	r3, r5
 1491 06ea 0833     		add	r3, r3, #8
 1492 06ec 5B68     		ldr	r3, [r3, #4]
 1493 06ee DC68     		ldr	r4, [r3, #12]
 1494              	.LVL118:
 1495              	.L234:
1767:FreeRTOS/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1496              		.loc 1 1767 0
 1497 06f0 201D     		add	r0, r4, #4
 1498 06f2 FFF7FEFF 		bl	vListRemove
1768:FreeRTOS/tasks.c **** 					--uxCurrentNumberOfTasks;
 1499              		.loc 1 1768 0
 1500 06f6 0D4A     		ldr	r2, .L241+8
 1501 06f8 1368     		ldr	r3, [r2]
 1502 06fa 013B     		sub	r3, r3, #1
 1503 06fc 1360     		str	r3, [r2]
1769:FreeRTOS/tasks.c **** 					--uxTasksDeleted;
 1504              		.loc 1 1769 0
 1505 06fe 094A     		ldr	r2, .L241
 1506 0700 1368     		ldr	r3, [r2]
 1507 0702 013B     		sub	r3, r3, #1
 1508 0704 1360     		str	r3, [r2]
1770:FreeRTOS/tasks.c **** 				}
1771:FreeRTOS/tasks.c **** 				portEXIT_CRITICAL();
 1509              		.loc 1 1771 0
 1510 0706 FFF7FEFF 		bl	vPortExitCritical
 1511              	.LBB16:
 1512              	.LBB17:
1772:FreeRTOS/tasks.c **** 
1773:FreeRTOS/tasks.c **** 				prvDeleteTCB( pxTCB );
1774:FreeRTOS/tasks.c **** 			}
1775:FreeRTOS/tasks.c **** 		}
1776:FreeRTOS/tasks.c **** 	}
1777:FreeRTOS/tasks.c **** 	#endif
1778:FreeRTOS/tasks.c **** }
1779:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1780:FreeRTOS/tasks.c **** 
1781:FreeRTOS/tasks.c **** static tskTCB *prvAllocateTCBAndStack( unsigned portSHORT usStackDepth )
1782:FreeRTOS/tasks.c **** {
1783:FreeRTOS/tasks.c **** tskTCB *pxNewTCB;
1784:FreeRTOS/tasks.c **** 
1785:FreeRTOS/tasks.c **** 	/* Allocate space for the TCB.  Where the memory comes from depends on
1786:FreeRTOS/tasks.c **** 	the implementation of the port malloc function. */
1787:FreeRTOS/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
1788:FreeRTOS/tasks.c **** 
1789:FreeRTOS/tasks.c **** 	if( pxNewTCB != NULL )
1790:FreeRTOS/tasks.c **** 	{
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 59


1791:FreeRTOS/tasks.c **** 		/* Allocate space for the stack used by the task being created.
1792:FreeRTOS/tasks.c **** 		The base of the stack memory stored in the TCB so the task can
1793:FreeRTOS/tasks.c **** 		be deleted later if required. */
1794:FreeRTOS/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMalloc( ( ( size_t )usStackDepth ) * sizeof( portS
1795:FreeRTOS/tasks.c **** 
1796:FreeRTOS/tasks.c **** 		if( pxNewTCB->pxStack == NULL )
1797:FreeRTOS/tasks.c **** 		{
1798:FreeRTOS/tasks.c **** 			/* Could not allocate the stack.  Delete the allocated TCB. */
1799:FreeRTOS/tasks.c **** 			vPortFree( pxNewTCB );			
1800:FreeRTOS/tasks.c **** 			pxNewTCB = NULL;			
1801:FreeRTOS/tasks.c **** 		}		
1802:FreeRTOS/tasks.c **** 		else
1803:FreeRTOS/tasks.c **** 		{
1804:FreeRTOS/tasks.c **** 			/* Just to help debugging. */
1805:FreeRTOS/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
1806:FreeRTOS/tasks.c **** 		}
1807:FreeRTOS/tasks.c **** 	}
1808:FreeRTOS/tasks.c **** 
1809:FreeRTOS/tasks.c **** 	return pxNewTCB;
1810:FreeRTOS/tasks.c **** }
1811:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1812:FreeRTOS/tasks.c **** 
1813:FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1814:FreeRTOS/tasks.c **** 
1815:FreeRTOS/tasks.c **** 	static void prvListTaskWithinSingleList( const signed portCHAR *pcWriteBuffer, xList *pxList, sign
1816:FreeRTOS/tasks.c **** 	{
1817:FreeRTOS/tasks.c **** 	volatile tskTCB *pxNextTCB, *pxFirstTCB;
1818:FreeRTOS/tasks.c **** 	unsigned portSHORT usStackRemaining;
1819:FreeRTOS/tasks.c **** 
1820:FreeRTOS/tasks.c **** 		/* Write the details of all the TCB's in pxList into the buffer. */
1821:FreeRTOS/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
1822:FreeRTOS/tasks.c **** 		do
1823:FreeRTOS/tasks.c **** 		{
1824:FreeRTOS/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
1825:FreeRTOS/tasks.c **** 			usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned portCHAR * ) pxNextTCB->pxStack );
1826:FreeRTOS/tasks.c **** 			sprintf( pcStatusString, ( portCHAR * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStat
1827:FreeRTOS/tasks.c **** 			strcat( ( portCHAR * ) pcWriteBuffer, ( portCHAR * ) pcStatusString );
1828:FreeRTOS/tasks.c **** 
1829:FreeRTOS/tasks.c **** 		} while( pxNextTCB != pxFirstTCB );
1830:FreeRTOS/tasks.c **** 	}
1831:FreeRTOS/tasks.c **** 
1832:FreeRTOS/tasks.c **** #endif
1833:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1834:FreeRTOS/tasks.c **** 
1835:FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
1836:FreeRTOS/tasks.c **** 
1837:FreeRTOS/tasks.c **** 	unsigned portSHORT usTaskCheckFreeStackSpace( const unsigned portCHAR * pucStackByte )
1838:FreeRTOS/tasks.c **** 	{
1839:FreeRTOS/tasks.c **** 	register unsigned portSHORT usCount = 0;
1840:FreeRTOS/tasks.c **** 
1841:FreeRTOS/tasks.c **** 		while( *pucStackByte == tskSTACK_FILL_BYTE )
1842:FreeRTOS/tasks.c **** 		{
1843:FreeRTOS/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
1844:FreeRTOS/tasks.c **** 			usCount++;
1845:FreeRTOS/tasks.c **** 		}
1846:FreeRTOS/tasks.c **** 
1847:FreeRTOS/tasks.c **** 		usCount /= sizeof( portSTACK_TYPE );
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 60


1848:FreeRTOS/tasks.c **** 
1849:FreeRTOS/tasks.c **** 		return usCount;
1850:FreeRTOS/tasks.c **** 	}
1851:FreeRTOS/tasks.c **** 
1852:FreeRTOS/tasks.c **** #endif
1853:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1854:FreeRTOS/tasks.c **** 
1855:FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
1856:FreeRTOS/tasks.c **** 
1857:FreeRTOS/tasks.c **** 	unsigned portBASE_TYPE uxTaskGetStackHighWaterMark( xTaskHandle xTask )
1858:FreeRTOS/tasks.c **** 	{
1859:FreeRTOS/tasks.c **** 	tskTCB *pxTCB;
1860:FreeRTOS/tasks.c **** 	unsigned portCHAR *pcEndOfStack;
1861:FreeRTOS/tasks.c **** 
1862:FreeRTOS/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
1863:FreeRTOS/tasks.c **** 
1864:FreeRTOS/tasks.c **** 		#if portSTACK_GROWTH < 0
1865:FreeRTOS/tasks.c **** 		{
1866:FreeRTOS/tasks.c **** 			pcEndOfStack = ( unsigned portCHAR * ) pxTCB->pxStack;
1867:FreeRTOS/tasks.c **** 		}
1868:FreeRTOS/tasks.c **** 		#else
1869:FreeRTOS/tasks.c **** 		{
1870:FreeRTOS/tasks.c **** 			pcEndOfStack = ( unsigned portCHAR * ) pxTCB->pxEndOfStack;
1871:FreeRTOS/tasks.c **** 		}
1872:FreeRTOS/tasks.c **** 		#endif
1873:FreeRTOS/tasks.c **** 
1874:FreeRTOS/tasks.c **** 		return usTaskCheckFreeStackSpace( pcEndOfStack );
1875:FreeRTOS/tasks.c **** 	}
1876:FreeRTOS/tasks.c **** 
1877:FreeRTOS/tasks.c **** #endif
1878:FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1879:FreeRTOS/tasks.c **** 
1880:FreeRTOS/tasks.c **** #if ( ( INCLUDE_vTaskDelete == 1 ) || ( INCLUDE_vTaskCleanUpResources == 1 ) )
1881:FreeRTOS/tasks.c **** 
1882:FreeRTOS/tasks.c **** 	static void prvDeleteTCB( tskTCB *pxTCB )
1883:FreeRTOS/tasks.c **** 	{
1884:FreeRTOS/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up to
1885:FreeRTOS/tasks.c **** 		the task to free any memory allocated at the application level. */
1886:FreeRTOS/tasks.c **** 		vPortFree( pxTCB->pxStack );
 1513              		.loc 1 1886 0
 1514 070a 206B     		ldr	r0, [r4, #48]
 1515 070c FFF7FEFF 		bl	vPortFree
1887:FreeRTOS/tasks.c **** 		vPortFree( pxTCB );
 1516              		.loc 1 1887 0
 1517 0710 201C     		mov	r0, r4
 1518 0712 FFF7FEFF 		bl	vPortFree
 1519              	.LVL119:
 1520              	.L229:
 1521              	.LBE17:
 1522              	.LBE16:
 1523              	.LBE15:
 1524              	.LBE14:
 1525              	.LBE13:
 1526              	.LBE12:
 1527              		.loc 1 1636 0
 1528 0716 064B     		ldr	r3, .L241+12
 1529 0718 1B68     		ldr	r3, [r3]
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 61


 1530 071a 012B     		cmp	r3, #1
 1531 071c D1D9     		bls	.L240
 1532              		.loc 1 1638 0
 1533 071e 00DF     		SWI
 1534              		.code	16
 1535 0720 CFE7     		b	.L240
 1536              	.L242:
 1537 0722 C046     		.align	2
 1538              	.L241:
 1539 0724 24000000 		.word	uxTasksDeleted
 1540 0728 D4000000 		.word	xTasksWaitingTermination
 1541 072c 1C000000 		.word	uxCurrentNumberOfTasks
 1542 0730 2C000000 		.word	pxReadyTasksLists
 1543              	.LFE25:
 1544              		.size	prvIdleTask, .-prvIdleTask
 1545              		.align	2
 1546              		.global	xTaskCreate
 1547              		.code 16
 1548              		.thumb_func
 1549              		.type	xTaskCreate, %function
 1550              	xTaskCreate:
 1551              	.LFB2:
 1552              		.loc 1 358 0
 1553 0734 F0B5     		push	{r4, r5, r6, r7, lr}
 1554              	.LCFI18:
 1555              	.LVL120:
 1556 0736 82B0     		sub	sp, sp, #8
 1557              	.LCFI19:
 1558              		.loc 1 358 0
 1559 0738 0190     		str	r0, [sp, #4]
 1560 073a 1204     		lsl	r2, r2, #16
 1561              	.LVL121:
 1562              	.LBB25:
 1563              		.loc 1 1787 0
 1564 073c 4420     		mov	r0, #68
 1565              	.LVL122:
 1566              	.LBE25:
 1567              		.loc 1 358 0
 1568 073e 0F1C     		mov	r7, r1
 1569 0740 0093     		str	r3, [sp]
 1570 0742 140C     		lsr	r4, r2, #16
 1571              	.LVL123:
 1572              	.LBB28:
 1573              		.loc 1 1787 0
 1574 0744 FFF7FEFF 		bl	pvPortMalloc
 1575              	.LVL124:
 1576 0748 061C     		mov	r6, r0
 1577              	.LVL125:
 1578              	.LBB26:
 1579              		.loc 1 1789 0
 1580 074a 0028     		cmp	r0, #0
 1581 074c 09D0     		beq	.L269
 1582              	.LVL126:
 1583              		.loc 1 1794 0
 1584 074e A500     		lsl	r5, r4, #2
 1585              	.LBE26:
 1586 0750 281C     		mov	r0, r5
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 62


 1587              	.LVL127:
 1588 0752 FFF7FEFF 		bl	pvPortMalloc
 1589              	.LBB27:
 1590 0756 3063     		str	r0, [r6, #48]
 1591              		.loc 1 1796 0
 1592 0758 0028     		cmp	r0, #0
 1593 075a 05D1     		bne	.L247
 1594              		.loc 1 1799 0
 1595 075c 301C     		mov	r0, r6
 1596 075e FFF7FEFF 		bl	vPortFree
 1597              	.LVL128:
 1598              	.L269:
 1599 0762 0120     		mov	r0, #1
 1600              	.LVL129:
 1601 0764 4042     		neg	r0, r0
 1602 0766 83E0     		b	.L246
 1603              	.LVL130:
 1604              	.L247:
 1605              		.loc 1 1805 0
 1606 0768 A521     		mov	r1, #165
 1607 076a 2A1C     		mov	r2, r5
 1608 076c FFF7FEFF 		bl	memset
 1609              	.LBE27:
 1610              	.LBE28:
 1611              	.LBB29:
 1612              	.LBB30:
 1613              	.LBB31:
 1614              		.loc 1 1673 0
 1615 0770 301C     		mov	r0, r6
 1616 0772 1022     		mov	r2, #16
 1617 0774 3430     		add	r0, r0, #52
 1618 0776 391C     		mov	r1, r7
 1619 0778 FFF7FEFF 		bl	strncpy
 1620              		.loc 1 1674 0
 1621 077c 321C     		mov	r2, r6
 1622 077e 4332     		add	r2, r2, #67
 1623 0780 0023     		mov	r3, #0
 1624 0782 1370     		strb	r3, [r2]
 1625 0784 079C     		ldr	r4, [sp, #28]
 1626              	.LVL131:
 1627 0786 042C     		cmp	r4, #4
 1628 0788 00D9     		bls	.L249
 1629              	.LVL132:
 1630 078a 0424     		mov	r4, #4
 1631              	.LVL133:
 1632              	.L249:
 1633              		.loc 1 1689 0
 1634 078c 301D     		add	r0, r6, #4
 1635              		.loc 1 1682 0
 1636 078e F462     		str	r4, [r6, #44]
 1637              		.loc 1 1689 0
 1638 0790 FFF7FEFF 		bl	vListInitialiseItem
 1639              		.loc 1 1690 0
 1640 0794 301C     		mov	r0, r6
 1641 0796 1830     		add	r0, r0, #24
 1642 0798 FFF7FEFF 		bl	vListInitialiseItem
 1643              	.LBE31:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 63


 1644              	.LBE30:
 1645              		.loc 1 379 0
 1646 079c 306B     		ldr	r0, [r6, #48]
 1647              	.LBB33:
 1648              	.LBB32:
 1649              		.loc 1 1697 0
 1650 079e 0523     		mov	r3, #5
 1651 07a0 1B1B     		sub	r3, r3, r4
 1652 07a2 B361     		str	r3, [r6, #24]
 1653              		.loc 1 1694 0
 1654 07a4 3661     		str	r6, [r6, #16]
 1655              		.loc 1 1698 0
 1656 07a6 7662     		str	r6, [r6, #36]
 1657              	.LBE32:
 1658              	.LBE33:
 1659              		.loc 1 379 0
 1660 07a8 0438     		sub	r0, r0, #4
 1661              		.loc 1 396 0
 1662 07aa 009A     		ldr	r2, [sp]
 1663 07ac 0199     		ldr	r1, [sp, #4]
 1664              		.loc 1 379 0
 1665 07ae 4019     		add	r0, r0, r5
 1666              	.LVL134:
 1667              		.loc 1 396 0
 1668 07b0 FFF7FEFF 		bl	pxPortInitialiseStack
 1669              	.LVL135:
 1670 07b4 3060     		str	r0, [r6]
 1671              		.loc 1 400 0
 1672 07b6 FFF7FEFF 		bl	vPortEnterCritical
 1673              		.loc 1 402 0
 1674 07ba 2F4A     		ldr	r2, .L270
 1675 07bc 1368     		ldr	r3, [r2]
 1676 07be 0133     		add	r3, r3, #1
 1677 07c0 1360     		str	r3, [r2]
 1678              		.loc 1 403 0
 1679 07c2 1368     		ldr	r3, [r2]
 1680 07c4 012B     		cmp	r3, #1
 1681 07c6 21D1     		bne	.L250
 1682              		.loc 1 406 0
 1683 07c8 2C4B     		ldr	r3, .L270+4
 1684 07ca 2D4C     		ldr	r4, .L270+8
 1685              	.LVL136:
 1686 07cc 1E60     		str	r6, [r3]
 1687 07ce 251C     		mov	r5, r4
 1688              	.L252:
 1689              	.LBB34:
 1690              	.LBB35:
 1691              		.loc 1 1720 0
 1692 07d0 201C     		mov	r0, r4
 1693 07d2 FFF7FEFF 		bl	vListInitialise
 1694              		.loc 1 1718 0
 1695 07d6 2B1C     		mov	r3, r5
 1696              		.loc 1 1720 0
 1697 07d8 1434     		add	r4, r4, #20
 1698              		.loc 1 1718 0
 1699 07da 6433     		add	r3, r3, #100
 1700 07dc 9C42     		cmp	r4, r3
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 64


 1701 07de F7D1     		bne	.L252
 1702              		.loc 1 1723 0
 1703 07e0 284D     		ldr	r5, .L270+12
 1704 07e2 281C     		mov	r0, r5
 1705 07e4 FFF7FEFF 		bl	vListInitialise
 1706              		.loc 1 1724 0
 1707 07e8 274C     		ldr	r4, .L270+16
 1708 07ea 201C     		mov	r0, r4
 1709 07ec FFF7FEFF 		bl	vListInitialise
 1710              		.loc 1 1725 0
 1711 07f0 2648     		ldr	r0, .L270+20
 1712 07f2 FFF7FEFF 		bl	vListInitialise
 1713              		.loc 1 1729 0
 1714 07f6 2648     		ldr	r0, .L270+24
 1715 07f8 FFF7FEFF 		bl	vListInitialise
 1716              		.loc 1 1735 0
 1717 07fc 2548     		ldr	r0, .L270+28
 1718 07fe FFF7FEFF 		bl	vListInitialise
 1719              		.loc 1 1741 0
 1720 0802 254B     		ldr	r3, .L270+32
 1721 0804 1D60     		str	r5, [r3]
 1722              		.loc 1 1742 0
 1723 0806 254B     		ldr	r3, .L270+36
 1724 0808 1C60     		str	r4, [r3]
 1725 080a 0AE0     		b	.L254
 1726              	.LVL137:
 1727              	.L250:
 1728              	.LBE35:
 1729              	.LBE34:
 1730              		.loc 1 418 0
 1731 080c 244B     		ldr	r3, .L270+40
 1732 080e 1B68     		ldr	r3, [r3]
 1733 0810 002B     		cmp	r3, #0
 1734 0812 06D1     		bne	.L254
 1735              		.loc 1 420 0
 1736 0814 194A     		ldr	r2, .L270+4
 1737 0816 1368     		ldr	r3, [r2]
 1738 0818 0799     		ldr	r1, [sp, #28]
 1739 081a DB6A     		ldr	r3, [r3, #44]
 1740 081c 8B42     		cmp	r3, r1
 1741 081e 00D8     		bhi	.L254
 1742              	.LVL138:
 1743              		.loc 1 422 0
 1744 0820 1660     		str	r6, [r2]
 1745              	.L254:
 1746              		.loc 1 429 0
 1747 0822 204A     		ldr	r2, .L270+44
 1748 0824 F16A     		ldr	r1, [r6, #44]
 1749 0826 1368     		ldr	r3, [r2]
 1750 0828 9942     		cmp	r1, r3
 1751 082a 00D9     		bls	.L257
 1752              		.loc 1 431 0
 1753 082c 1160     		str	r1, [r2]
 1754              	.L257:
 1755              		.loc 1 442 0
 1756 082e 1E4A     		ldr	r2, .L270+48
 1757 0830 F16A     		ldr	r1, [r6, #44]
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 65


 1758 0832 1368     		ldr	r3, [r2]
 1759 0834 9942     		cmp	r1, r3
 1760 0836 00D9     		bls	.L259
 1761 0838 1160     		str	r1, [r2]
 1762              	.L259:
 1763 083a F36A     		ldr	r3, [r6, #44]
 1764 083c 9800     		lsl	r0, r3, #2
 1765 083e C018     		add	r0, r0, r3
 1766 0840 0F4B     		ldr	r3, .L270+8
 1767 0842 8000     		lsl	r0, r0, #2
 1768 0844 C018     		add	r0, r0, r3
 1769 0846 311D     		add	r1, r6, #4
 1770 0848 FFF7FEFF 		bl	vListInsertEnd
 1771              		.loc 1 447 0
 1772 084c FFF7FEFF 		bl	vPortExitCritical
 1773              	.LBE29:
 1774              		.loc 1 457 0
 1775 0850 089A     		ldr	r2, [sp, #32]
 1776 0852 002A     		cmp	r2, #0
 1777 0854 00D0     		beq	.L261
 1778              	.LVL139:
 1779              		.loc 1 462 0
 1780 0856 1660     		str	r6, [r2]
 1781              	.L261:
 1782              		.loc 1 465 0
 1783 0858 114B     		ldr	r3, .L270+40
 1784 085a 1B68     		ldr	r3, [r3]
 1785 085c 002B     		cmp	r3, #0
 1786 085e 06D0     		beq	.L263
 1787              		.loc 1 469 0
 1788 0860 064B     		ldr	r3, .L270+4
 1789 0862 1B68     		ldr	r3, [r3]
 1790 0864 0799     		ldr	r1, [sp, #28]
 1791 0866 DB6A     		ldr	r3, [r3, #44]
 1792 0868 8B42     		cmp	r3, r1
 1793 086a 00D2     		bcs	.L263
 1794              		.loc 1 471 0
 1795 086c 00DF     		SWI
 1796              		.code	16
 1797              	.L263:
 1798 086e 0120     		mov	r0, #1
 1799              	.LVL140:
 1800              	.L246:
 1801              		.loc 1 477 0
 1802 0870 02B0     		add	sp, sp, #8
 1803              	.LVL141:
 1804              		@ sp needed for prologue
 1805              	.LVL142:
 1806              	.LVL143:
 1807              	.LVL144:
 1808 0872 F0BC     		pop	{r4, r5, r6, r7}
 1809 0874 02BC     		pop	{r1}
 1810 0876 0847     		bx	r1
 1811              	.L271:
 1812              		.align	2
 1813              	.L270:
 1814 0878 1C000000 		.word	uxCurrentNumberOfTasks
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 66


 1815 087c 00000000 		.word	pxCurrentTCB
 1816 0880 2C000000 		.word	pxReadyTasksLists
 1817 0884 90000000 		.word	xDelayedTaskList1
 1818 0888 A4000000 		.word	xDelayedTaskList2
 1819 088c C0000000 		.word	xPendingReadyList
 1820 0890 D4000000 		.word	xTasksWaitingTermination
 1821 0894 E8000000 		.word	xSuspendedTaskList
 1822 0898 B8000000 		.word	pxDelayedTaskList
 1823 089c BC000000 		.word	pxOverflowDelayedTaskList
 1824 08a0 20000000 		.word	xSchedulerRunning
 1825 08a4 28000000 		.word	uxTopUsedPriority
 1826 08a8 14000000 		.word	uxTopReadyPriority
 1827              	.LFE2:
 1828              		.size	xTaskCreate, .-xTaskCreate
 1829              		.section	.rodata.str1.4,"aMS",%progbits,1
 1830              		.align	2
 1831              	.LC85:
 1832 0000 49444C45 		.ascii	"IDLE\000"
 1832      00
 1833 0005 000000   		.text
 1834              		.align	2
 1835              		.global	vTaskStartScheduler
 1836              		.code 16
 1837              		.thumb_func
 1838              		.type	vTaskStartScheduler, %function
 1839              	vTaskStartScheduler:
 1840              	.LFB12:
 1841              		.loc 1 965 0
 1842 08ac 30B5     		push	{r4, r5, lr}
 1843              	.LCFI20:
 1844 08ae 82B0     		sub	sp, sp, #8
 1845              	.LCFI21:
 1846              		.loc 1 969 0
 1847 08b0 0025     		mov	r5, #0
 1848 08b2 0B49     		ldr	r1, .L276
 1849 08b4 0B48     		ldr	r0, .L276+4
 1850 08b6 8022     		mov	r2, #128
 1851 08b8 0023     		mov	r3, #0
 1852 08ba 0095     		str	r5, [sp]
 1853 08bc 0195     		str	r5, [sp, #4]
 1854 08be FFF7FEFF 		bl	xTaskCreate
 1855 08c2 041C     		mov	r4, r0
 1856              	.LVL145:
 1857              		.loc 1 971 0
 1858 08c4 0128     		cmp	r0, #1
 1859 08c6 07D1     		bne	.L275
 1860              	.LVL146:
 1861              		.loc 1 981 0
 1862 08c8 FFF7FEFF 		bl	vPortDisableInterruptsFromThumb
 1863              	.LVL147:
 1864              		.loc 1 983 0
 1865 08cc 064B     		ldr	r3, .L276+8
 1866 08ce 1C60     		str	r4, [r3]
 1867              		.loc 1 984 0
 1868 08d0 064B     		ldr	r3, .L276+12
 1869 08d2 1D60     		str	r5, [r3]
 1870              		.loc 1 988 0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 67


 1871 08d4 FFF7FEFF 		bl	xPortStartScheduler
 1872              	.LVL148:
 1873              	.L275:
 1874              		.loc 1 998 0
 1875 08d8 02B0     		add	sp, sp, #8
 1876              		@ sp needed for prologue
 1877              	.LVL149:
 1878 08da 30BC     		pop	{r4, r5}
 1879 08dc 01BC     		pop	{r0}
 1880 08de 0047     		bx	r0
 1881              	.L277:
 1882              		.align	2
 1883              	.L276:
 1884 08e0 00000000 		.word	.LC85
 1885 08e4 00000000 		.word	prvIdleTask
 1886 08e8 20000000 		.word	xSchedulerRunning
 1887 08ec 0C000000 		.word	xTickCount
 1888              	.LFE12:
 1889              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1890              		.align	2
 1891              		.global	xTaskCheckForTimeOut
 1892              		.code 16
 1893              		.thumb_func
 1894              		.type	xTaskCheckForTimeOut, %function
 1895              	xTaskCheckForTimeOut:
 1896              	.LFB23:
 1897              		.loc 1 1547 0
 1898 08f0 70B5     		push	{r4, r5, r6, lr}
 1899              	.LCFI22:
 1900              	.LVL150:
 1901              		.loc 1 1547 0
 1902 08f2 0E1C     		mov	r6, r1
 1903 08f4 041C     		mov	r4, r0
 1904              		.loc 1 1550 0
 1905 08f6 FFF7FEFF 		bl	vPortEnterCritical
 1906              	.LVL151:
 1907              		.loc 1 1556 0
 1908 08fa 3068     		ldr	r0, [r6]
 1909 08fc 431C     		add	r3, r0, #1
 1910 08fe 17D0     		beq	.L287
 1911              		.loc 1 1563 0
 1912 0900 104D     		ldr	r5, .L288
 1913 0902 2368     		ldr	r3, [r4]
 1914 0904 2A68     		ldr	r2, [r5]
 1915 0906 9A42     		cmp	r2, r3
 1916 0908 04D0     		beq	.L282
 1917 090a 0F4B     		ldr	r3, .L288+4
 1918 090c 1A68     		ldr	r2, [r3]
 1919 090e 6368     		ldr	r3, [r4, #4]
 1920 0910 9A42     		cmp	r2, r3
 1921 0912 0FD2     		bcs	.L284
 1922              	.L282:
 1923              		.loc 1 1571 0
 1924 0914 0C4A     		ldr	r2, .L288+4
 1925 0916 6168     		ldr	r1, [r4, #4]
 1926 0918 1368     		ldr	r3, [r2]
 1927 091a 5B1A     		sub	r3, r3, r1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 68


 1928 091c 8342     		cmp	r3, r0
 1929 091e 09D2     		bcs	.L284
 1930              		.loc 1 1574 0
 1931 0920 1368     		ldr	r3, [r2]
 1932 0922 5B1A     		sub	r3, r3, r1
 1933 0924 C31A     		sub	r3, r0, r3
 1934 0926 3360     		str	r3, [r6]
 1935              	.LBB38:
 1936              	.LBB39:
 1937              		.loc 1 1541 0
 1938 0928 2B68     		ldr	r3, [r5]
 1939 092a 2360     		str	r3, [r4]
 1940              		.loc 1 1542 0
 1941 092c 1368     		ldr	r3, [r2]
 1942 092e 6360     		str	r3, [r4, #4]
 1943              	.L287:
 1944 0930 0024     		mov	r4, #0
 1945              	.LVL152:
 1946 0932 00E0     		b	.L281
 1947              	.LVL153:
 1948              	.L284:
 1949 0934 0124     		mov	r4, #1
 1950              	.LVL154:
 1951              	.L281:
 1952              	.LBE39:
 1953              	.LBE38:
 1954              		.loc 1 1583 0
 1955 0936 FFF7FEFF 		bl	vPortExitCritical
 1956              		.loc 1 1586 0
 1957 093a 201C     		mov	r0, r4
 1958              		@ sp needed for prologue
 1959              	.LVL155:
 1960              	.LVL156:
 1961 093c 70BC     		pop	{r4, r5, r6}
 1962 093e 02BC     		pop	{r1}
 1963 0940 0847     		bx	r1
 1964              	.L289:
 1965 0942 C046     		.align	2
 1966              	.L288:
 1967 0944 08000000 		.word	xNumOfOverflows
 1968 0948 0C000000 		.word	xTickCount
 1969              	.LFE23:
 1970              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 1971              		.global	pxCurrentTCB
 1972              		.bss
 1973              		.align	2
 1974              		.type	pxCurrentTCB, %object
 1975              		.size	pxCurrentTCB, 4
 1976              	pxCurrentTCB:
 1977 0000 00000000 		.space	4
 1978              		.align	2
 1979              	xMissedYield:
 1980 0004 00000000 		.space	4
 1981              		.align	2
 1982              	xNumOfOverflows:
 1983 0008 00000000 		.space	4
 1984              		.align	2
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 69


 1985              	xTickCount:
 1986 000c 00000000 		.space	4
 1987              		.align	2
 1988              	uxSchedulerSuspended:
 1989 0010 00000000 		.space	4
 1990              		.align	2
 1991              	uxTopReadyPriority:
 1992 0014 00000000 		.space	4
 1993              		.align	2
 1994              	uxMissedTicks:
 1995 0018 00000000 		.space	4
 1996              		.align	2
 1997              	uxCurrentNumberOfTasks:
 1998 001c 00000000 		.space	4
 1999              		.align	2
 2000              	xSchedulerRunning:
 2001 0020 00000000 		.space	4
 2002              		.align	2
 2003              	uxTasksDeleted:
 2004 0024 00000000 		.space	4
 2005              		.align	2
 2006              	uxTopUsedPriority:
 2007 0028 00000000 		.space	4
 2008              		.align	2
 2009              	pxReadyTasksLists:
 2010 002c 00000000 		.space	100
 2010      00000000 
 2010      00000000 
 2010      00000000 
 2010      00000000 
 2011              		.align	2
 2012              	xDelayedTaskList1:
 2013 0090 00000000 		.space	20
 2013      00000000 
 2013      00000000 
 2013      00000000 
 2013      00000000 
 2014              		.align	2
 2015              	xDelayedTaskList2:
 2016 00a4 00000000 		.space	20
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2017              		.align	2
 2018              	pxDelayedTaskList:
 2019 00b8 00000000 		.space	4
 2020              		.align	2
 2021              	pxOverflowDelayedTaskList:
 2022 00bc 00000000 		.space	4
 2023              		.align	2
 2024              	xPendingReadyList:
 2025 00c0 00000000 		.space	20
 2025      00000000 
 2025      00000000 
 2025      00000000 
 2025      00000000 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 70


 2026              		.align	2
 2027              	xTasksWaitingTermination:
 2028 00d4 00000000 		.space	20
 2028      00000000 
 2028      00000000 
 2028      00000000 
 2028      00000000 
 2029              		.align	2
 2030              	xSuspendedTaskList:
 2031 00e8 00000000 		.space	20
 2031      00000000 
 2031      00000000 
 2031      00000000 
 2031      00000000 
 2032              		.section	.debug_frame,"",%progbits
 2033              	.Lframe0:
 2034 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
 2035              	.LSCIE0:
 2036 0004 FFFFFFFF 		.4byte	0xffffffff
 2037 0008 01       		.byte	0x1
 2038 0009 00       		.ascii	"\000"
 2039 000a 01       		.uleb128 0x1
 2040 000b 7C       		.sleb128 -4
 2041 000c 0E       		.byte	0xe
 2042 000d 0C       		.byte	0xc
 2043 000e 0D       		.uleb128 0xd
 2044 000f 00       		.uleb128 0x0
 2045              		.align	2
 2046              	.LECIE0:
 2047              	.LSFDE0:
 2048 0010 0C000000 		.4byte	.LEFDE0-.LASFDE0
 2049              	.LASFDE0:
 2050 0014 00000000 		.4byte	.Lframe0
 2051 0018 00000000 		.4byte	.LFB9
 2052 001c 28000000 		.4byte	.LFE9-.LFB9
 2053              		.align	2
 2054              	.LEFDE0:
 2055              	.LSFDE2:
 2056 0020 0C000000 		.4byte	.LEFDE2-.LASFDE2
 2057              	.LASFDE2:
 2058 0024 00000000 		.4byte	.Lframe0
 2059 0028 28000000 		.4byte	.LFB19
 2060 002c 64000000 		.4byte	.LFE19-.LFB19
 2061              		.align	2
 2062              	.LEFDE2:
 2063              	.LSFDE4:
 2064 0030 0C000000 		.4byte	.LEFDE4-.LASFDE4
 2065              	.LASFDE4:
 2066 0034 00000000 		.4byte	.Lframe0
 2067 0038 8C000000 		.4byte	.LFB22
 2068 003c 18000000 		.4byte	.LFE22-.LFB22
 2069              		.align	2
 2070              	.LEFDE4:
 2071              	.LSFDE6:
 2072 0040 0C000000 		.4byte	.LEFDE6-.LASFDE6
 2073              	.LASFDE6:
 2074 0044 00000000 		.4byte	.Lframe0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 71


 2075 0048 A4000000 		.4byte	.LFB24
 2076 004c 0C000000 		.4byte	.LFE24-.LFB24
 2077              		.align	2
 2078              	.LEFDE6:
 2079              	.LSFDE8:
 2080 0050 14000000 		.4byte	.LEFDE8-.LASFDE8
 2081              	.LASFDE8:
 2082 0054 00000000 		.4byte	.Lframe0
 2083 0058 B0000000 		.4byte	.LFB17
 2084 005c 1C000000 		.4byte	.LFE17-.LFB17
 2085 0060 42       		.byte	0x4
 2086              		.4byte	.LCFI0-.LFB17
 2087 0061 0E       		.byte	0xe
 2088 0062 08       		.uleb128 0x8
 2089 0063 84       		.byte	0x84
 2090 0064 02       		.uleb128 0x2
 2091 0065 8E       		.byte	0x8e
 2092 0066 01       		.uleb128 0x1
 2093 0067 00       		.align	2
 2094              	.LEFDE8:
 2095              	.LSFDE10:
 2096 0068 14000000 		.4byte	.LEFDE10-.LASFDE10
 2097              	.LASFDE10:
 2098 006c 00000000 		.4byte	.Lframe0
 2099 0070 CC000000 		.4byte	.LFB16
 2100 0074 1C000000 		.4byte	.LFE16-.LFB16
 2101 0078 42       		.byte	0x4
 2102              		.4byte	.LCFI1-.LFB16
 2103 0079 0E       		.byte	0xe
 2104 007a 08       		.uleb128 0x8
 2105 007b 84       		.byte	0x84
 2106 007c 02       		.uleb128 0x2
 2107 007d 8E       		.byte	0x8e
 2108 007e 01       		.uleb128 0x1
 2109 007f 00       		.align	2
 2110              	.LEFDE10:
 2111              	.LSFDE12:
 2112 0080 14000000 		.4byte	.LEFDE12-.LASFDE12
 2113              	.LASFDE12:
 2114 0084 00000000 		.4byte	.Lframe0
 2115 0088 E8000000 		.4byte	.LFB14
 2116 008c 1C000000 		.4byte	.LFE14-.LFB14
 2117 0090 42       		.byte	0x4
 2118              		.4byte	.LCFI2-.LFB14
 2119 0091 0E       		.byte	0xe
 2120 0092 04       		.uleb128 0x4
 2121 0093 8E       		.byte	0x8e
 2122 0094 01       		.uleb128 0x1
 2123 0095 000000   		.align	2
 2124              	.LEFDE12:
 2125              	.LSFDE14:
 2126 0098 14000000 		.4byte	.LEFDE14-.LASFDE14
 2127              	.LASFDE14:
 2128 009c 00000000 		.4byte	.Lframe0
 2129 00a0 04010000 		.4byte	.LFB6
 2130 00a4 28000000 		.4byte	.LFE6-.LFB6
 2131 00a8 42       		.byte	0x4
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 72


 2132              		.4byte	.LCFI3-.LFB6
 2133 00a9 0E       		.byte	0xe
 2134 00aa 08       		.uleb128 0x8
 2135 00ab 84       		.byte	0x84
 2136 00ac 02       		.uleb128 0x2
 2137 00ad 8E       		.byte	0x8e
 2138 00ae 01       		.uleb128 0x1
 2139 00af 00       		.align	2
 2140              	.LEFDE14:
 2141              	.LSFDE16:
 2142 00b0 18000000 		.4byte	.LEFDE16-.LASFDE16
 2143              	.LASFDE16:
 2144 00b4 00000000 		.4byte	.Lframe0
 2145 00b8 2C010000 		.4byte	.LFB21
 2146 00bc 78000000 		.4byte	.LFE21-.LFB21
 2147 00c0 42       		.byte	0x4
 2148              		.4byte	.LCFI4-.LFB21
 2149 00c1 0E       		.byte	0xe
 2150 00c2 0C       		.uleb128 0xc
 2151 00c3 84       		.byte	0x84
 2152 00c4 03       		.uleb128 0x3
 2153 00c5 85       		.byte	0x85
 2154 00c6 02       		.uleb128 0x2
 2155 00c7 8E       		.byte	0x8e
 2156 00c8 01       		.uleb128 0x1
 2157 00c9 000000   		.align	2
 2158              	.LEFDE16:
 2159              	.LSFDE18:
 2160 00cc 18000000 		.4byte	.LEFDE18-.LASFDE18
 2161              	.LASFDE18:
 2162 00d0 00000000 		.4byte	.Lframe0
 2163 00d4 A4010000 		.4byte	.LFB18
 2164 00d8 B0000000 		.4byte	.LFE18-.LFB18
 2165 00dc 42       		.byte	0x4
 2166              		.4byte	.LCFI5-.LFB18
 2167 00dd 0E       		.byte	0xe
 2168 00de 0C       		.uleb128 0xc
 2169 00df 84       		.byte	0x84
 2170 00e0 03       		.uleb128 0x3
 2171 00e1 85       		.byte	0x85
 2172 00e2 02       		.uleb128 0x2
 2173 00e3 8E       		.byte	0x8e
 2174 00e4 01       		.uleb128 0x1
 2175 00e5 000000   		.align	2
 2176              	.LEFDE18:
 2177              	.LSFDE20:
 2178 00e8 18000000 		.4byte	.LEFDE20-.LASFDE20
 2179              	.LASFDE20:
 2180 00ec 00000000 		.4byte	.Lframe0
 2181 00f0 54020000 		.4byte	.LFB15
 2182 00f4 D0000000 		.4byte	.LFE15-.LFB15
 2183 00f8 42       		.byte	0x4
 2184              		.4byte	.LCFI6-.LFB15
 2185 00f9 0E       		.byte	0xe
 2186 00fa 10       		.uleb128 0x10
 2187 00fb 84       		.byte	0x84
 2188 00fc 04       		.uleb128 0x4
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 73


 2189 00fd 85       		.byte	0x85
 2190 00fe 03       		.uleb128 0x3
 2191 00ff 86       		.byte	0x86
 2192 0100 02       		.uleb128 0x2
 2193 0101 8E       		.byte	0x8e
 2194 0102 01       		.uleb128 0x1
 2195 0103 00       		.align	2
 2196              	.LEFDE20:
 2197              	.LSFDE22:
 2198 0104 1C000000 		.4byte	.LEFDE22-.LASFDE22
 2199              	.LASFDE22:
 2200 0108 00000000 		.4byte	.Lframe0
 2201 010c 24030000 		.4byte	.LFB11
 2202 0110 7C000000 		.4byte	.LFE11-.LFB11
 2203 0114 42       		.byte	0x4
 2204              		.4byte	.LCFI7-.LFB11
 2205 0115 0E       		.byte	0xe
 2206 0116 14       		.uleb128 0x14
 2207 0117 84       		.byte	0x84
 2208 0118 05       		.uleb128 0x5
 2209 0119 85       		.byte	0x85
 2210 011a 04       		.uleb128 0x4
 2211 011b 86       		.byte	0x86
 2212 011c 03       		.uleb128 0x3
 2213 011d 87       		.byte	0x87
 2214 011e 02       		.uleb128 0x2
 2215 011f 8E       		.byte	0x8e
 2216 0120 01       		.uleb128 0x1
 2217 0121 42       		.byte	0x4
 2218              		.4byte	.LCFI8-.LCFI7
 2219 0122 0E       		.byte	0xe
 2220 0123 18       		.uleb128 0x18
 2221              		.align	2
 2222              	.LEFDE22:
 2223              	.LSFDE24:
 2224 0124 18000000 		.4byte	.LEFDE24-.LASFDE24
 2225              	.LASFDE24:
 2226 0128 00000000 		.4byte	.Lframe0
 2227 012c A0030000 		.4byte	.LFB10
 2228 0130 68000000 		.4byte	.LFE10-.LFB10
 2229 0134 42       		.byte	0x4
 2230              		.4byte	.LCFI9-.LFB10
 2231 0135 0E       		.byte	0xe
 2232 0136 10       		.uleb128 0x10
 2233 0137 84       		.byte	0x84
 2234 0138 04       		.uleb128 0x4
 2235 0139 85       		.byte	0x85
 2236 013a 03       		.uleb128 0x3
 2237 013b 86       		.byte	0x86
 2238 013c 02       		.uleb128 0x2
 2239 013d 8E       		.byte	0x8e
 2240 013e 01       		.uleb128 0x1
 2241 013f 00       		.align	2
 2242              	.LEFDE24:
 2243              	.LSFDE26:
 2244 0140 18000000 		.4byte	.LEFDE26-.LASFDE26
 2245              	.LASFDE26:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 74


 2246 0144 00000000 		.4byte	.Lframe0
 2247 0148 08040000 		.4byte	.LFB8
 2248 014c 58000000 		.4byte	.LFE8-.LFB8
 2249 0150 42       		.byte	0x4
 2250              		.4byte	.LCFI10-.LFB8
 2251 0151 0E       		.byte	0xe
 2252 0152 10       		.uleb128 0x10
 2253 0153 84       		.byte	0x84
 2254 0154 04       		.uleb128 0x4
 2255 0155 85       		.byte	0x85
 2256 0156 03       		.uleb128 0x3
 2257 0157 86       		.byte	0x86
 2258 0158 02       		.uleb128 0x2
 2259 0159 8E       		.byte	0x8e
 2260 015a 01       		.uleb128 0x1
 2261 015b 00       		.align	2
 2262              	.LEFDE26:
 2263              	.LSFDE28:
 2264 015c 1C000000 		.4byte	.LEFDE28-.LASFDE28
 2265              	.LASFDE28:
 2266 0160 00000000 		.4byte	.Lframe0
 2267 0164 60040000 		.4byte	.LFB7
 2268 0168 9C000000 		.4byte	.LFE7-.LFB7
 2269 016c 42       		.byte	0x4
 2270              		.4byte	.LCFI11-.LFB7
 2271 016d 0E       		.byte	0xe
 2272 016e 14       		.uleb128 0x14
 2273 016f 84       		.byte	0x84
 2274 0170 05       		.uleb128 0x5
 2275 0171 85       		.byte	0x85
 2276 0172 04       		.uleb128 0x4
 2277 0173 86       		.byte	0x86
 2278 0174 03       		.uleb128 0x3
 2279 0175 87       		.byte	0x87
 2280 0176 02       		.uleb128 0x2
 2281 0177 8E       		.byte	0x8e
 2282 0178 01       		.uleb128 0x1
 2283 0179 000000   		.align	2
 2284              	.LEFDE28:
 2285              	.LSFDE30:
 2286 017c 18000000 		.4byte	.LEFDE30-.LASFDE30
 2287              	.LASFDE30:
 2288 0180 00000000 		.4byte	.Lframe0
 2289 0184 FC040000 		.4byte	.LFB3
 2290 0188 70000000 		.4byte	.LFE3-.LFB3
 2291 018c 42       		.byte	0x4
 2292              		.4byte	.LCFI12-.LFB3
 2293 018d 0E       		.byte	0xe
 2294 018e 10       		.uleb128 0x10
 2295 018f 84       		.byte	0x84
 2296 0190 04       		.uleb128 0x4
 2297 0191 85       		.byte	0x85
 2298 0192 03       		.uleb128 0x3
 2299 0193 86       		.byte	0x86
 2300 0194 02       		.uleb128 0x2
 2301 0195 8E       		.byte	0x8e
 2302 0196 01       		.uleb128 0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 75


 2303 0197 00       		.align	2
 2304              	.LEFDE30:
 2305              	.LSFDE32:
 2306 0198 18000000 		.4byte	.LEFDE32-.LASFDE32
 2307              	.LASFDE32:
 2308 019c 00000000 		.4byte	.Lframe0
 2309 01a0 6C050000 		.4byte	.LFB20
 2310 01a4 64000000 		.4byte	.LFE20-.LFB20
 2311 01a8 42       		.byte	0x4
 2312              		.4byte	.LCFI13-.LFB20
 2313 01a9 0E       		.byte	0xe
 2314 01aa 0C       		.uleb128 0xc
 2315 01ab 84       		.byte	0x84
 2316 01ac 03       		.uleb128 0x3
 2317 01ad 85       		.byte	0x85
 2318 01ae 02       		.uleb128 0x2
 2319 01af 8E       		.byte	0x8e
 2320 01b0 01       		.uleb128 0x1
 2321 01b1 000000   		.align	2
 2322              	.LEFDE32:
 2323              	.LSFDE34:
 2324 01b4 18000000 		.4byte	.LEFDE34-.LASFDE34
 2325              	.LASFDE34:
 2326 01b8 00000000 		.4byte	.Lframe0
 2327 01bc D0050000 		.4byte	.LFB5
 2328 01c0 58000000 		.4byte	.LFE5-.LFB5
 2329 01c4 42       		.byte	0x4
 2330              		.4byte	.LCFI14-.LFB5
 2331 01c5 0E       		.byte	0xe
 2332 01c6 10       		.uleb128 0x10
 2333 01c7 84       		.byte	0x84
 2334 01c8 04       		.uleb128 0x4
 2335 01c9 85       		.byte	0x85
 2336 01ca 03       		.uleb128 0x3
 2337 01cb 86       		.byte	0x86
 2338 01cc 02       		.uleb128 0x2
 2339 01cd 8E       		.byte	0x8e
 2340 01ce 01       		.uleb128 0x1
 2341 01cf 00       		.align	2
 2342              	.LEFDE34:
 2343              	.LSFDE36:
 2344 01d0 18000000 		.4byte	.LEFDE36-.LASFDE36
 2345              	.LASFDE36:
 2346 01d4 00000000 		.4byte	.Lframe0
 2347 01d8 28060000 		.4byte	.LFB4
 2348 01dc 80000000 		.4byte	.LFE4-.LFB4
 2349 01e0 42       		.byte	0x4
 2350              		.4byte	.LCFI15-.LFB4
 2351 01e1 0E       		.byte	0xe
 2352 01e2 0C       		.uleb128 0xc
 2353 01e3 84       		.byte	0x84
 2354 01e4 03       		.uleb128 0x3
 2355 01e5 85       		.byte	0x85
 2356 01e6 02       		.uleb128 0x2
 2357 01e7 8E       		.byte	0x8e
 2358 01e8 01       		.uleb128 0x1
 2359 01e9 000000   		.align	2
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 76


 2360              	.LEFDE36:
 2361              	.LSFDE38:
 2362 01ec 14000000 		.4byte	.LEFDE38-.LASFDE38
 2363              	.LASFDE38:
 2364 01f0 00000000 		.4byte	.Lframe0
 2365 01f4 A8060000 		.4byte	.LFB13
 2366 01f8 18000000 		.4byte	.LFE13-.LFB13
 2367 01fc 42       		.byte	0x4
 2368              		.4byte	.LCFI16-.LFB13
 2369 01fd 0E       		.byte	0xe
 2370 01fe 04       		.uleb128 0x4
 2371 01ff 8E       		.byte	0x8e
 2372 0200 01       		.uleb128 0x1
 2373 0201 000000   		.align	2
 2374              	.LEFDE38:
 2375              	.LSFDE40:
 2376 0204 18000000 		.4byte	.LEFDE40-.LASFDE40
 2377              	.LASFDE40:
 2378 0208 00000000 		.4byte	.Lframe0
 2379 020c C0060000 		.4byte	.LFB25
 2380 0210 74000000 		.4byte	.LFE25-.LFB25
 2381 0214 42       		.byte	0x4
 2382              		.4byte	.LCFI17-.LFB25
 2383 0215 0E       		.byte	0xe
 2384 0216 0C       		.uleb128 0xc
 2385 0217 84       		.byte	0x84
 2386 0218 03       		.uleb128 0x3
 2387 0219 85       		.byte	0x85
 2388 021a 02       		.uleb128 0x2
 2389 021b 8E       		.byte	0x8e
 2390 021c 01       		.uleb128 0x1
 2391 021d 000000   		.align	2
 2392              	.LEFDE40:
 2393              	.LSFDE42:
 2394 0220 1C000000 		.4byte	.LEFDE42-.LASFDE42
 2395              	.LASFDE42:
 2396 0224 00000000 		.4byte	.Lframe0
 2397 0228 34070000 		.4byte	.LFB2
 2398 022c 78010000 		.4byte	.LFE2-.LFB2
 2399 0230 42       		.byte	0x4
 2400              		.4byte	.LCFI18-.LFB2
 2401 0231 0E       		.byte	0xe
 2402 0232 14       		.uleb128 0x14
 2403 0233 84       		.byte	0x84
 2404 0234 05       		.uleb128 0x5
 2405 0235 85       		.byte	0x85
 2406 0236 04       		.uleb128 0x4
 2407 0237 86       		.byte	0x86
 2408 0238 03       		.uleb128 0x3
 2409 0239 87       		.byte	0x87
 2410 023a 02       		.uleb128 0x2
 2411 023b 8E       		.byte	0x8e
 2412 023c 01       		.uleb128 0x1
 2413 023d 42       		.byte	0x4
 2414              		.4byte	.LCFI19-.LCFI18
 2415 023e 0E       		.byte	0xe
 2416 023f 1C       		.uleb128 0x1c
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 77


 2417              		.align	2
 2418              	.LEFDE42:
 2419              	.LSFDE44:
 2420 0240 18000000 		.4byte	.LEFDE44-.LASFDE44
 2421              	.LASFDE44:
 2422 0244 00000000 		.4byte	.Lframe0
 2423 0248 AC080000 		.4byte	.LFB12
 2424 024c 44000000 		.4byte	.LFE12-.LFB12
 2425 0250 42       		.byte	0x4
 2426              		.4byte	.LCFI20-.LFB12
 2427 0251 0E       		.byte	0xe
 2428 0252 0C       		.uleb128 0xc
 2429 0253 84       		.byte	0x84
 2430 0254 03       		.uleb128 0x3
 2431 0255 85       		.byte	0x85
 2432 0256 02       		.uleb128 0x2
 2433 0257 8E       		.byte	0x8e
 2434 0258 01       		.uleb128 0x1
 2435 0259 42       		.byte	0x4
 2436              		.4byte	.LCFI21-.LCFI20
 2437 025a 0E       		.byte	0xe
 2438 025b 14       		.uleb128 0x14
 2439              		.align	2
 2440              	.LEFDE44:
 2441              	.LSFDE46:
 2442 025c 18000000 		.4byte	.LEFDE46-.LASFDE46
 2443              	.LASFDE46:
 2444 0260 00000000 		.4byte	.Lframe0
 2445 0264 F0080000 		.4byte	.LFB23
 2446 0268 5C000000 		.4byte	.LFE23-.LFB23
 2447 026c 42       		.byte	0x4
 2448              		.4byte	.LCFI22-.LFB23
 2449 026d 0E       		.byte	0xe
 2450 026e 10       		.uleb128 0x10
 2451 026f 84       		.byte	0x84
 2452 0270 04       		.uleb128 0x4
 2453 0271 85       		.byte	0x85
 2454 0272 03       		.uleb128 0x3
 2455 0273 86       		.byte	0x86
 2456 0274 02       		.uleb128 0x2
 2457 0275 8E       		.byte	0x8e
 2458 0276 01       		.uleb128 0x1
 2459 0277 00       		.align	2
 2460              	.LEFDE46:
 2461              		.text
 2462              	.Letext0:
 2463              		.section	.debug_loc,"",%progbits
 2464              	.Ldebug_loc0:
 2465              	.LLST1:
 2466 0000 00000000 		.4byte	.LVL0-.Ltext0
 2467 0004 0A000000 		.4byte	.LVL1-.Ltext0
 2468 0008 0100     		.2byte	0x1
 2469 000a 50       		.byte	0x50
 2470 000b 1C000000 		.4byte	.LVL3-.Ltext0
 2471 000f 1E000000 		.4byte	.LVL4-.Ltext0
 2472 0013 0100     		.2byte	0x1
 2473 0015 50       		.byte	0x50
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 78


 2474 0016 00000000 		.4byte	0x0
 2475 001a 00000000 		.4byte	0x0
 2476              	.LLST2:
 2477 001e 1A000000 		.4byte	.LVL2-.Ltext0
 2478 0022 1C000000 		.4byte	.LVL3-.Ltext0
 2479 0026 0100     		.2byte	0x1
 2480 0028 50       		.byte	0x50
 2481 0029 1E000000 		.4byte	.LVL4-.Ltext0
 2482 002d 1E000000 		.4byte	.LVL5-.Ltext0
 2483 0031 0100     		.2byte	0x1
 2484 0033 50       		.byte	0x50
 2485 0034 00000000 		.4byte	0x0
 2486 0038 00000000 		.4byte	0x0
 2487              	.LLST4:
 2488 003c 5C000000 		.4byte	.LVL6-.Ltext0
 2489 0040 72000000 		.4byte	.LVL7-.Ltext0
 2490 0044 0100     		.2byte	0x1
 2491 0046 52       		.byte	0x52
 2492 0047 00000000 		.4byte	0x0
 2493 004b 00000000 		.4byte	0x0
 2494              	.LLST7:
 2495 004f B0000000 		.4byte	.LFB17-.Ltext0
 2496 0053 B2000000 		.4byte	.LCFI0-.Ltext0
 2497 0057 0100     		.2byte	0x1
 2498 0059 5D       		.byte	0x5d
 2499 005a B2000000 		.4byte	.LCFI0-.Ltext0
 2500 005e CC000000 		.4byte	.LFE17-.Ltext0
 2501 0062 0200     		.2byte	0x2
 2502 0064 7D       		.byte	0x7d
 2503 0065 08       		.sleb128 8
 2504 0066 00000000 		.4byte	0x0
 2505 006a 00000000 		.4byte	0x0
 2506              	.LLST8:
 2507 006e BA000000 		.4byte	.LVL9-.Ltext0
 2508 0072 C0000000 		.4byte	.LVL10-.Ltext0
 2509 0076 0100     		.2byte	0x1
 2510 0078 54       		.byte	0x54
 2511 0079 00000000 		.4byte	0x0
 2512 007d 00000000 		.4byte	0x0
 2513              	.LLST9:
 2514 0081 CC000000 		.4byte	.LFB16-.Ltext0
 2515 0085 CE000000 		.4byte	.LCFI1-.Ltext0
 2516 0089 0100     		.2byte	0x1
 2517 008b 5D       		.byte	0x5d
 2518 008c CE000000 		.4byte	.LCFI1-.Ltext0
 2519 0090 E8000000 		.4byte	.LFE16-.Ltext0
 2520 0094 0200     		.2byte	0x2
 2521 0096 7D       		.byte	0x7d
 2522 0097 08       		.sleb128 8
 2523 0098 00000000 		.4byte	0x0
 2524 009c 00000000 		.4byte	0x0
 2525              	.LLST10:
 2526 00a0 D6000000 		.4byte	.LVL11-.Ltext0
 2527 00a4 DC000000 		.4byte	.LVL12-.Ltext0
 2528 00a8 0100     		.2byte	0x1
 2529 00aa 54       		.byte	0x54
 2530 00ab 00000000 		.4byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 79


 2531 00af 00000000 		.4byte	0x0
 2532              	.LLST11:
 2533 00b3 E8000000 		.4byte	.LFB14-.Ltext0
 2534 00b7 EA000000 		.4byte	.LCFI2-.Ltext0
 2535 00bb 0100     		.2byte	0x1
 2536 00bd 5D       		.byte	0x5d
 2537 00be EA000000 		.4byte	.LCFI2-.Ltext0
 2538 00c2 04010000 		.4byte	.LFE14-.Ltext0
 2539 00c6 0200     		.2byte	0x2
 2540 00c8 7D       		.byte	0x7d
 2541 00c9 04       		.sleb128 4
 2542 00ca 00000000 		.4byte	0x0
 2543 00ce 00000000 		.4byte	0x0
 2544              	.LLST12:
 2545 00d2 04010000 		.4byte	.LFB6-.Ltext0
 2546 00d6 06010000 		.4byte	.LCFI3-.Ltext0
 2547 00da 0100     		.2byte	0x1
 2548 00dc 5D       		.byte	0x5d
 2549 00dd 06010000 		.4byte	.LCFI3-.Ltext0
 2550 00e1 2C010000 		.4byte	.LFE6-.Ltext0
 2551 00e5 0200     		.2byte	0x2
 2552 00e7 7D       		.byte	0x7d
 2553 00e8 08       		.sleb128 8
 2554 00e9 00000000 		.4byte	0x0
 2555 00ed 00000000 		.4byte	0x0
 2556              	.LLST13:
 2557 00f1 06010000 		.4byte	.LVL13-.Ltext0
 2558 00f5 0C010000 		.4byte	.LVL14-.Ltext0
 2559 00f9 0100     		.2byte	0x1
 2560 00fb 50       		.byte	0x50
 2561 00fc 0C010000 		.4byte	.LVL14-.Ltext0
 2562 0100 1A010000 		.4byte	.LVL18-.Ltext0
 2563 0104 0100     		.2byte	0x1
 2564 0106 54       		.byte	0x54
 2565 0107 00000000 		.4byte	0x0
 2566 010b 00000000 		.4byte	0x0
 2567              	.LLST14:
 2568 010f 14010000 		.4byte	.LVL15-.Ltext0
 2569 0113 16010000 		.4byte	.LVL16-.Ltext0
 2570 0117 0100     		.2byte	0x1
 2571 0119 50       		.byte	0x50
 2572 011a 18010000 		.4byte	.LVL17-.Ltext0
 2573 011e 1E010000 		.4byte	.LVL19-.Ltext0
 2574 0122 0100     		.2byte	0x1
 2575 0124 50       		.byte	0x50
 2576 0125 00000000 		.4byte	0x0
 2577 0129 00000000 		.4byte	0x0
 2578              	.LLST15:
 2579 012d 1A010000 		.4byte	.LVL18-.Ltext0
 2580 0131 20010000 		.4byte	.LVL20-.Ltext0
 2581 0135 0100     		.2byte	0x1
 2582 0137 54       		.byte	0x54
 2583 0138 00000000 		.4byte	0x0
 2584 013c 00000000 		.4byte	0x0
 2585              	.LLST16:
 2586 0140 2C010000 		.4byte	.LFB21-.Ltext0
 2587 0144 2E010000 		.4byte	.LCFI4-.Ltext0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 80


 2588 0148 0100     		.2byte	0x1
 2589 014a 5D       		.byte	0x5d
 2590 014b 2E010000 		.4byte	.LCFI4-.Ltext0
 2591 014f A4010000 		.4byte	.LFE21-.Ltext0
 2592 0153 0200     		.2byte	0x2
 2593 0155 7D       		.byte	0x7d
 2594 0156 0C       		.sleb128 12
 2595 0157 00000000 		.4byte	0x0
 2596 015b 00000000 		.4byte	0x0
 2597              	.LLST17:
 2598 015f 2E010000 		.4byte	.LVL21-.Ltext0
 2599 0163 42010000 		.4byte	.LVL25-.Ltext0
 2600 0167 0100     		.2byte	0x1
 2601 0169 50       		.byte	0x50
 2602 016a 00000000 		.4byte	0x0
 2603 016e 00000000 		.4byte	0x0
 2604              	.LLST18:
 2605 0172 36010000 		.4byte	.LVL22-.Ltext0
 2606 0176 38010000 		.4byte	.LVL23-.Ltext0
 2607 017a 0100     		.2byte	0x1
 2608 017c 55       		.byte	0x55
 2609 017d 3C010000 		.4byte	.LVL24-.Ltext0
 2610 0181 88010000 		.4byte	.LVL26-.Ltext0
 2611 0185 0100     		.2byte	0x1
 2612 0187 55       		.byte	0x55
 2613 0188 00000000 		.4byte	0x0
 2614 018c 00000000 		.4byte	0x0
 2615              	.LLST19:
 2616 0190 A4010000 		.4byte	.LFB18-.Ltext0
 2617 0194 A6010000 		.4byte	.LCFI5-.Ltext0
 2618 0198 0100     		.2byte	0x1
 2619 019a 5D       		.byte	0x5d
 2620 019b A6010000 		.4byte	.LCFI5-.Ltext0
 2621 019f 54020000 		.4byte	.LFE18-.Ltext0
 2622 01a3 0200     		.2byte	0x2
 2623 01a5 7D       		.byte	0x7d
 2624 01a6 0C       		.sleb128 12
 2625 01a7 00000000 		.4byte	0x0
 2626 01ab 00000000 		.4byte	0x0
 2627              	.LLST20:
 2628 01af C2010000 		.4byte	.LVL27-.Ltext0
 2629 01b3 E0010000 		.4byte	.LVL28-.Ltext0
 2630 01b7 0100     		.2byte	0x1
 2631 01b9 50       		.byte	0x50
 2632 01ba 10020000 		.4byte	.LVL29-.Ltext0
 2633 01be 26020000 		.4byte	.LVL30-.Ltext0
 2634 01c2 0100     		.2byte	0x1
 2635 01c4 50       		.byte	0x50
 2636 01c5 2E020000 		.4byte	.LVL31-.Ltext0
 2637 01c9 54020000 		.4byte	.LFE18-.Ltext0
 2638 01cd 0100     		.2byte	0x1
 2639 01cf 50       		.byte	0x50
 2640 01d0 00000000 		.4byte	0x0
 2641 01d4 00000000 		.4byte	0x0
 2642              	.LLST21:
 2643 01d8 54020000 		.4byte	.LFB15-.Ltext0
 2644 01dc 56020000 		.4byte	.LCFI6-.Ltext0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 81


 2645 01e0 0100     		.2byte	0x1
 2646 01e2 5D       		.byte	0x5d
 2647 01e3 56020000 		.4byte	.LCFI6-.Ltext0
 2648 01e7 24030000 		.4byte	.LFE15-.Ltext0
 2649 01eb 0200     		.2byte	0x2
 2650 01ed 7D       		.byte	0x7d
 2651 01ee 10       		.sleb128 16
 2652 01ef 00000000 		.4byte	0x0
 2653 01f3 00000000 		.4byte	0x0
 2654              	.LLST22:
 2655 01f7 F4020000 		.4byte	.LVL33-.Ltext0
 2656 01fb F6020000 		.4byte	.LVL34-.Ltext0
 2657 01ff 0100     		.2byte	0x1
 2658 0201 54       		.byte	0x54
 2659 0202 F8020000 		.4byte	.LVL35-.Ltext0
 2660 0206 FE020000 		.4byte	.LVL36-.Ltext0
 2661 020a 0100     		.2byte	0x1
 2662 020c 54       		.byte	0x54
 2663 020d 00000000 		.4byte	0x0
 2664 0211 00000000 		.4byte	0x0
 2665              	.LLST23:
 2666 0215 72020000 		.4byte	.LVL32-.Ltext0
 2667 0219 FE020000 		.4byte	.LVL37-.Ltext0
 2668 021d 0100     		.2byte	0x1
 2669 021f 56       		.byte	0x56
 2670 0220 00000000 		.4byte	0x0
 2671 0224 00000000 		.4byte	0x0
 2672              	.LLST24:
 2673 0228 24030000 		.4byte	.LFB11-.Ltext0
 2674 022c 26030000 		.4byte	.LCFI7-.Ltext0
 2675 0230 0100     		.2byte	0x1
 2676 0232 5D       		.byte	0x5d
 2677 0233 26030000 		.4byte	.LCFI7-.Ltext0
 2678 0237 28030000 		.4byte	.LCFI8-.Ltext0
 2679 023b 0200     		.2byte	0x2
 2680 023d 7D       		.byte	0x7d
 2681 023e 14       		.sleb128 20
 2682 023f 28030000 		.4byte	.LCFI8-.Ltext0
 2683 0243 A0030000 		.4byte	.LFE11-.Ltext0
 2684 0247 0200     		.2byte	0x2
 2685 0249 7D       		.byte	0x7d
 2686 024a 18       		.sleb128 24
 2687 024b 00000000 		.4byte	0x0
 2688 024f 00000000 		.4byte	0x0
 2689              	.LLST25:
 2690 0253 26030000 		.4byte	.LVL38-.Ltext0
 2691 0257 2E030000 		.4byte	.LVL40-.Ltext0
 2692 025b 0100     		.2byte	0x1
 2693 025d 50       		.byte	0x50
 2694 025e 00000000 		.4byte	0x0
 2695 0262 00000000 		.4byte	0x0
 2696              	.LLST26:
 2697 0266 5C030000 		.4byte	.LVL41-.Ltext0
 2698 026a 76030000 		.4byte	.LVL42-.Ltext0
 2699 026e 0100     		.2byte	0x1
 2700 0270 57       		.byte	0x57
 2701 0271 82030000 		.4byte	.LVL43-.Ltext0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 82


 2702 0275 86030000 		.4byte	.LVL45-.Ltext0
 2703 0279 0100     		.2byte	0x1
 2704 027b 57       		.byte	0x57
 2705 027c 00000000 		.4byte	0x0
 2706 0280 00000000 		.4byte	0x0
 2707              	.LLST27:
 2708 0284 2A030000 		.4byte	.LVL39-.Ltext0
 2709 0288 86030000 		.4byte	.LVL44-.Ltext0
 2710 028c 0100     		.2byte	0x1
 2711 028e 54       		.byte	0x54
 2712 028f 00000000 		.4byte	0x0
 2713 0293 00000000 		.4byte	0x0
 2714              	.LLST28:
 2715 0297 A0030000 		.4byte	.LFB10-.Ltext0
 2716 029b A2030000 		.4byte	.LCFI9-.Ltext0
 2717 029f 0100     		.2byte	0x1
 2718 02a1 5D       		.byte	0x5d
 2719 02a2 A2030000 		.4byte	.LCFI9-.Ltext0
 2720 02a6 08040000 		.4byte	.LFE10-.Ltext0
 2721 02aa 0200     		.2byte	0x2
 2722 02ac 7D       		.byte	0x7d
 2723 02ad 10       		.sleb128 16
 2724 02ae 00000000 		.4byte	0x0
 2725 02b2 00000000 		.4byte	0x0
 2726              	.LLST29:
 2727 02b6 A2030000 		.4byte	.LVL46-.Ltext0
 2728 02ba B4030000 		.4byte	.LVL47-.Ltext0
 2729 02be 0100     		.2byte	0x1
 2730 02c0 50       		.byte	0x50
 2731 02c1 B4030000 		.4byte	.LVL47-.Ltext0
 2732 02c5 F4030000 		.4byte	.LVL51-.Ltext0
 2733 02c9 0100     		.2byte	0x1
 2734 02cb 54       		.byte	0x54
 2735 02cc F4030000 		.4byte	.LVL51-.Ltext0
 2736 02d0 08040000 		.4byte	.LFE10-.Ltext0
 2737 02d4 0100     		.2byte	0x1
 2738 02d6 50       		.byte	0x50
 2739 02d7 00000000 		.4byte	0x0
 2740 02db 00000000 		.4byte	0x0
 2741              	.LLST30:
 2742 02df B6030000 		.4byte	.LVL48-.Ltext0
 2743 02e3 BA030000 		.4byte	.LVL49-.Ltext0
 2744 02e7 0100     		.2byte	0x1
 2745 02e9 50       		.byte	0x50
 2746 02ea 00000000 		.4byte	0x0
 2747 02ee 00000000 		.4byte	0x0
 2748              	.LLST31:
 2749 02f2 08040000 		.4byte	.LFB8-.Ltext0
 2750 02f6 0A040000 		.4byte	.LCFI10-.Ltext0
 2751 02fa 0100     		.2byte	0x1
 2752 02fc 5D       		.byte	0x5d
 2753 02fd 0A040000 		.4byte	.LCFI10-.Ltext0
 2754 0301 60040000 		.4byte	.LFE8-.Ltext0
 2755 0305 0200     		.2byte	0x2
 2756 0307 7D       		.byte	0x7d
 2757 0308 10       		.sleb128 16
 2758 0309 00000000 		.4byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 83


 2759 030d 00000000 		.4byte	0x0
 2760              	.LLST32:
 2761 0311 0A040000 		.4byte	.LVL52-.Ltext0
 2762 0315 10040000 		.4byte	.LVL53-.Ltext0
 2763 0319 0100     		.2byte	0x1
 2764 031b 50       		.byte	0x50
 2765 031c 10040000 		.4byte	.LVL53-.Ltext0
 2766 0320 50040000 		.4byte	.LVL58-.Ltext0
 2767 0324 0100     		.2byte	0x1
 2768 0326 55       		.byte	0x55
 2769 0327 00000000 		.4byte	0x0
 2770 032b 00000000 		.4byte	0x0
 2771              	.LLST33:
 2772 032f 24040000 		.4byte	.LVL54-.Ltext0
 2773 0333 26040000 		.4byte	.LVL55-.Ltext0
 2774 0337 0100     		.2byte	0x1
 2775 0339 54       		.byte	0x54
 2776 033a 28040000 		.4byte	.LVL56-.Ltext0
 2777 033e 50040000 		.4byte	.LVL57-.Ltext0
 2778 0342 0100     		.2byte	0x1
 2779 0344 54       		.byte	0x54
 2780 0345 00000000 		.4byte	0x0
 2781 0349 00000000 		.4byte	0x0
 2782              	.LLST34:
 2783 034d 60040000 		.4byte	.LFB7-.Ltext0
 2784 0351 62040000 		.4byte	.LCFI11-.Ltext0
 2785 0355 0100     		.2byte	0x1
 2786 0357 5D       		.byte	0x5d
 2787 0358 62040000 		.4byte	.LCFI11-.Ltext0
 2788 035c FC040000 		.4byte	.LFE7-.Ltext0
 2789 0360 0200     		.2byte	0x2
 2790 0362 7D       		.byte	0x7d
 2791 0363 14       		.sleb128 20
 2792 0364 00000000 		.4byte	0x0
 2793 0368 00000000 		.4byte	0x0
 2794              	.LLST35:
 2795 036c 62040000 		.4byte	.LVL59-.Ltext0
 2796 0370 6A040000 		.4byte	.LVL60-.Ltext0
 2797 0374 0100     		.2byte	0x1
 2798 0376 50       		.byte	0x50
 2799 0377 6A040000 		.4byte	.LVL60-.Ltext0
 2800 037b BE040000 		.4byte	.LVL71-.Ltext0
 2801 037f 0100     		.2byte	0x1
 2802 0381 54       		.byte	0x54
 2803 0382 E0040000 		.4byte	.LVL72-.Ltext0
 2804 0386 EA040000 		.4byte	.LVL75-.Ltext0
 2805 038a 0100     		.2byte	0x1
 2806 038c 54       		.byte	0x54
 2807 038d 00000000 		.4byte	0x0
 2808 0391 00000000 		.4byte	0x0
 2809              	.LLST36:
 2810 0395 62040000 		.4byte	.LVL59-.Ltext0
 2811 0399 6C040000 		.4byte	.LVL61-.Ltext0
 2812 039d 0100     		.2byte	0x1
 2813 039f 51       		.byte	0x51
 2814 03a0 6C040000 		.4byte	.LVL61-.Ltext0
 2815 03a4 B2040000 		.4byte	.LVL69-.Ltext0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 84


 2816 03a8 0100     		.2byte	0x1
 2817 03aa 56       		.byte	0x56
 2818 03ab E6040000 		.4byte	.LVL73-.Ltext0
 2819 03af EA040000 		.4byte	.LVL77-.Ltext0
 2820 03b3 0100     		.2byte	0x1
 2821 03b5 56       		.byte	0x56
 2822 03b6 00000000 		.4byte	0x0
 2823 03ba 00000000 		.4byte	0x0
 2824              	.LLST37:
 2825 03be 84040000 		.4byte	.LVL62-.Ltext0
 2826 03c2 86040000 		.4byte	.LVL63-.Ltext0
 2827 03c6 0100     		.2byte	0x1
 2828 03c8 55       		.byte	0x55
 2829 03c9 88040000 		.4byte	.LVL64-.Ltext0
 2830 03cd EA040000 		.4byte	.LVL76-.Ltext0
 2831 03d1 0100     		.2byte	0x1
 2832 03d3 55       		.byte	0x55
 2833 03d4 00000000 		.4byte	0x0
 2834 03d8 00000000 		.4byte	0x0
 2835              	.LLST38:
 2836 03dc 8A040000 		.4byte	.LVL65-.Ltext0
 2837 03e0 B6040000 		.4byte	.LVL70-.Ltext0
 2838 03e4 0100     		.2byte	0x1
 2839 03e6 52       		.byte	0x52
 2840 03e7 E6040000 		.4byte	.LVL73-.Ltext0
 2841 03eb EA040000 		.4byte	.LVL74-.Ltext0
 2842 03ef 0100     		.2byte	0x1
 2843 03f1 52       		.byte	0x52
 2844 03f2 00000000 		.4byte	0x0
 2845 03f6 00000000 		.4byte	0x0
 2846              	.LLST39:
 2847 03fa 98040000 		.4byte	.LVL66-.Ltext0
 2848 03fe 9A040000 		.4byte	.LVL67-.Ltext0
 2849 0402 0100     		.2byte	0x1
 2850 0404 57       		.byte	0x57
 2851 0405 A4040000 		.4byte	.LVL68-.Ltext0
 2852 0409 EA040000 		.4byte	.LVL78-.Ltext0
 2853 040d 0100     		.2byte	0x1
 2854 040f 57       		.byte	0x57
 2855 0410 00000000 		.4byte	0x0
 2856 0414 00000000 		.4byte	0x0
 2857              	.LLST40:
 2858 0418 FC040000 		.4byte	.LFB3-.Ltext0
 2859 041c FE040000 		.4byte	.LCFI12-.Ltext0
 2860 0420 0100     		.2byte	0x1
 2861 0422 5D       		.byte	0x5d
 2862 0423 FE040000 		.4byte	.LCFI12-.Ltext0
 2863 0427 6C050000 		.4byte	.LFE3-.Ltext0
 2864 042b 0200     		.2byte	0x2
 2865 042d 7D       		.byte	0x7d
 2866 042e 10       		.sleb128 16
 2867 042f 00000000 		.4byte	0x0
 2868 0433 00000000 		.4byte	0x0
 2869              	.LLST41:
 2870 0437 FE040000 		.4byte	.LVL79-.Ltext0
 2871 043b 04050000 		.4byte	.LVL80-.Ltext0
 2872 043f 0100     		.2byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 85


 2873 0441 50       		.byte	0x50
 2874 0442 04050000 		.4byte	.LVL80-.Ltext0
 2875 0446 54050000 		.4byte	.LVL85-.Ltext0
 2876 044a 0100     		.2byte	0x1
 2877 044c 55       		.byte	0x55
 2878 044d 00000000 		.4byte	0x0
 2879 0451 00000000 		.4byte	0x0
 2880              	.LLST42:
 2881 0455 18050000 		.4byte	.LVL81-.Ltext0
 2882 0459 1A050000 		.4byte	.LVL82-.Ltext0
 2883 045d 0100     		.2byte	0x1
 2884 045f 54       		.byte	0x54
 2885 0460 1C050000 		.4byte	.LVL83-.Ltext0
 2886 0464 54050000 		.4byte	.LVL84-.Ltext0
 2887 0468 0100     		.2byte	0x1
 2888 046a 54       		.byte	0x54
 2889 046b 00000000 		.4byte	0x0
 2890 046f 00000000 		.4byte	0x0
 2891              	.LLST43:
 2892 0473 6C050000 		.4byte	.LFB20-.Ltext0
 2893 0477 6E050000 		.4byte	.LCFI13-.Ltext0
 2894 047b 0100     		.2byte	0x1
 2895 047d 5D       		.byte	0x5d
 2896 047e 6E050000 		.4byte	.LCFI13-.Ltext0
 2897 0482 D0050000 		.4byte	.LFE20-.Ltext0
 2898 0486 0200     		.2byte	0x2
 2899 0488 7D       		.byte	0x7d
 2900 0489 0C       		.sleb128 12
 2901 048a 00000000 		.4byte	0x0
 2902 048e 00000000 		.4byte	0x0
 2903              	.LLST44:
 2904 0492 6E050000 		.4byte	.LVL86-.Ltext0
 2905 0496 7A050000 		.4byte	.LVL88-.Ltext0
 2906 049a 0100     		.2byte	0x1
 2907 049c 50       		.byte	0x50
 2908 049d 00000000 		.4byte	0x0
 2909 04a1 00000000 		.4byte	0x0
 2910              	.LLST45:
 2911 04a5 6E050000 		.4byte	.LVL86-.Ltext0
 2912 04a9 74050000 		.4byte	.LVL87-.Ltext0
 2913 04ad 0100     		.2byte	0x1
 2914 04af 51       		.byte	0x51
 2915 04b0 74050000 		.4byte	.LVL87-.Ltext0
 2916 04b4 B4050000 		.4byte	.LVL91-.Ltext0
 2917 04b8 0100     		.2byte	0x1
 2918 04ba 55       		.byte	0x55
 2919 04bb 00000000 		.4byte	0x0
 2920 04bf 00000000 		.4byte	0x0
 2921              	.LLST46:
 2922 04c3 9C050000 		.4byte	.LVL89-.Ltext0
 2923 04c7 B4050000 		.4byte	.LVL90-.Ltext0
 2924 04cb 0100     		.2byte	0x1
 2925 04cd 52       		.byte	0x52
 2926 04ce 00000000 		.4byte	0x0
 2927 04d2 00000000 		.4byte	0x0
 2928              	.LLST47:
 2929 04d6 D0050000 		.4byte	.LFB5-.Ltext0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 86


 2930 04da D2050000 		.4byte	.LCFI14-.Ltext0
 2931 04de 0100     		.2byte	0x1
 2932 04e0 5D       		.byte	0x5d
 2933 04e1 D2050000 		.4byte	.LCFI14-.Ltext0
 2934 04e5 28060000 		.4byte	.LFE5-.Ltext0
 2935 04e9 0200     		.2byte	0x2
 2936 04eb 7D       		.byte	0x7d
 2937 04ec 10       		.sleb128 16
 2938 04ed 00000000 		.4byte	0x0
 2939 04f1 00000000 		.4byte	0x0
 2940              	.LLST48:
 2941 04f5 D2050000 		.4byte	.LVL92-.Ltext0
 2942 04f9 DC050000 		.4byte	.LVL93-.Ltext0
 2943 04fd 0100     		.2byte	0x1
 2944 04ff 50       		.byte	0x50
 2945 0500 DC050000 		.4byte	.LVL93-.Ltext0
 2946 0504 E4050000 		.4byte	.LVL95-.Ltext0
 2947 0508 0100     		.2byte	0x1
 2948 050a 56       		.byte	0x56
 2949 050b 0E060000 		.4byte	.LVL96-.Ltext0
 2950 050f 28060000 		.4byte	.LFE5-.Ltext0
 2951 0513 0100     		.2byte	0x1
 2952 0515 50       		.byte	0x50
 2953 0516 00000000 		.4byte	0x0
 2954 051a 00000000 		.4byte	0x0
 2955              	.LLST49:
 2956 051e E2050000 		.4byte	.LVL94-.Ltext0
 2957 0522 10060000 		.4byte	.LVL97-.Ltext0
 2958 0526 0100     		.2byte	0x1
 2959 0528 54       		.byte	0x54
 2960 0529 00000000 		.4byte	0x0
 2961 052d 00000000 		.4byte	0x0
 2962              	.LLST50:
 2963 0531 28060000 		.4byte	.LFB4-.Ltext0
 2964 0535 2A060000 		.4byte	.LCFI15-.Ltext0
 2965 0539 0100     		.2byte	0x1
 2966 053b 5D       		.byte	0x5d
 2967 053c 2A060000 		.4byte	.LCFI15-.Ltext0
 2968 0540 A8060000 		.4byte	.LFE4-.Ltext0
 2969 0544 0200     		.2byte	0x2
 2970 0546 7D       		.byte	0x7d
 2971 0547 0C       		.sleb128 12
 2972 0548 00000000 		.4byte	0x0
 2973 054c 00000000 		.4byte	0x0
 2974              	.LLST51:
 2975 0550 2A060000 		.4byte	.LVL98-.Ltext0
 2976 0554 32060000 		.4byte	.LVL99-.Ltext0
 2977 0558 0100     		.2byte	0x1
 2978 055a 50       		.byte	0x50
 2979 055b 32060000 		.4byte	.LVL99-.Ltext0
 2980 055f 62060000 		.4byte	.LVL106-.Ltext0
 2981 0563 0100     		.2byte	0x1
 2982 0565 55       		.byte	0x55
 2983 0566 86060000 		.4byte	.LVL108-.Ltext0
 2984 056a 90060000 		.4byte	.LVL112-.Ltext0
 2985 056e 0100     		.2byte	0x1
 2986 0570 55       		.byte	0x55
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 87


 2987 0571 00000000 		.4byte	0x0
 2988 0575 00000000 		.4byte	0x0
 2989              	.LLST52:
 2990 0579 2A060000 		.4byte	.LVL98-.Ltext0
 2991 057d 32060000 		.4byte	.LVL99-.Ltext0
 2992 0581 0100     		.2byte	0x1
 2993 0583 51       		.byte	0x51
 2994 0584 32060000 		.4byte	.LVL99-.Ltext0
 2995 0588 3A060000 		.4byte	.LVL100-.Ltext0
 2996 058c 0100     		.2byte	0x1
 2997 058e 54       		.byte	0x54
 2998 058f 00000000 		.4byte	0x0
 2999 0593 00000000 		.4byte	0x0
 3000              	.LLST53:
 3001 0597 3A060000 		.4byte	.LVL100-.Ltext0
 3002 059b 90060000 		.4byte	.LVL111-.Ltext0
 3003 059f 0100     		.2byte	0x1
 3004 05a1 54       		.byte	0x54
 3005 05a2 00000000 		.4byte	0x0
 3006 05a6 00000000 		.4byte	0x0
 3007              	.LLST54:
 3008 05aa 44060000 		.4byte	.LVL101-.Ltext0
 3009 05ae 46060000 		.4byte	.LVL102-.Ltext0
 3010 05b2 0100     		.2byte	0x1
 3011 05b4 53       		.byte	0x53
 3012 05b5 4C060000 		.4byte	.LVL103-.Ltext0
 3013 05b9 4E060000 		.4byte	.LVL104-.Ltext0
 3014 05bd 0100     		.2byte	0x1
 3015 05bf 53       		.byte	0x53
 3016 05c0 5A060000 		.4byte	.LVL105-.Ltext0
 3017 05c4 6A060000 		.4byte	.LVL107-.Ltext0
 3018 05c8 0100     		.2byte	0x1
 3019 05ca 53       		.byte	0x53
 3020 05cb 86060000 		.4byte	.LVL108-.Ltext0
 3021 05cf 8A060000 		.4byte	.LVL109-.Ltext0
 3022 05d3 0100     		.2byte	0x1
 3023 05d5 53       		.byte	0x53
 3024 05d6 00000000 		.4byte	0x0
 3025 05da 00000000 		.4byte	0x0
 3026              	.LLST55:
 3027 05de A8060000 		.4byte	.LFB13-.Ltext0
 3028 05e2 AA060000 		.4byte	.LCFI16-.Ltext0
 3029 05e6 0100     		.2byte	0x1
 3030 05e8 5D       		.byte	0x5d
 3031 05e9 AA060000 		.4byte	.LCFI16-.Ltext0
 3032 05ed C0060000 		.4byte	.LFE13-.Ltext0
 3033 05f1 0200     		.2byte	0x2
 3034 05f3 7D       		.byte	0x7d
 3035 05f4 04       		.sleb128 4
 3036 05f5 00000000 		.4byte	0x0
 3037 05f9 00000000 		.4byte	0x0
 3038              	.LLST56:
 3039 05fd C0060000 		.4byte	.LFB25-.Ltext0
 3040 0601 C2060000 		.4byte	.LCFI17-.Ltext0
 3041 0605 0100     		.2byte	0x1
 3042 0607 5D       		.byte	0x5d
 3043 0608 C2060000 		.4byte	.LCFI17-.Ltext0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 88


 3044 060c 34070000 		.4byte	.LFE25-.Ltext0
 3045 0610 0200     		.2byte	0x2
 3046 0612 7D       		.byte	0x7d
 3047 0613 0C       		.sleb128 12
 3048 0614 00000000 		.4byte	0x0
 3049 0618 00000000 		.4byte	0x0
 3050              	.LLST57:
 3051 061c C2060000 		.4byte	.LVL113-.Ltext0
 3052 0620 CE060000 		.4byte	.LVL114-.Ltext0
 3053 0624 0100     		.2byte	0x1
 3054 0626 50       		.byte	0x50
 3055 0627 16070000 		.4byte	.LVL119-.Ltext0
 3056 062b 34070000 		.4byte	.LFE25-.Ltext0
 3057 062f 0100     		.2byte	0x1
 3058 0631 50       		.byte	0x50
 3059 0632 00000000 		.4byte	0x0
 3060 0636 00000000 		.4byte	0x0
 3061              	.LLST58:
 3062 063a C2060000 		.4byte	.LVL113-.Ltext0
 3063 063e D2060000 		.4byte	.LVL115-.Ltext0
 3064 0642 0100     		.2byte	0x1
 3065 0644 54       		.byte	0x54
 3066 0645 E6060000 		.4byte	.LVL116-.Ltext0
 3067 0649 E8060000 		.4byte	.LVL117-.Ltext0
 3068 064d 0100     		.2byte	0x1
 3069 064f 54       		.byte	0x54
 3070 0650 F0060000 		.4byte	.LVL118-.Ltext0
 3071 0654 34070000 		.4byte	.LFE25-.Ltext0
 3072 0658 0100     		.2byte	0x1
 3073 065a 54       		.byte	0x54
 3074 065b 00000000 		.4byte	0x0
 3075 065f 00000000 		.4byte	0x0
 3076              	.LLST59:
 3077 0663 34070000 		.4byte	.LFB2-.Ltext0
 3078 0667 36070000 		.4byte	.LCFI18-.Ltext0
 3079 066b 0100     		.2byte	0x1
 3080 066d 5D       		.byte	0x5d
 3081 066e 36070000 		.4byte	.LCFI18-.Ltext0
 3082 0672 38070000 		.4byte	.LCFI19-.Ltext0
 3083 0676 0200     		.2byte	0x2
 3084 0678 7D       		.byte	0x7d
 3085 0679 14       		.sleb128 20
 3086 067a 38070000 		.4byte	.LCFI19-.Ltext0
 3087 067e AC080000 		.4byte	.LFE2-.Ltext0
 3088 0682 0200     		.2byte	0x2
 3089 0684 7D       		.byte	0x7d
 3090 0685 1C       		.sleb128 28
 3091 0686 00000000 		.4byte	0x0
 3092 068a 00000000 		.4byte	0x0
 3093              	.LLST60:
 3094 068e 36070000 		.4byte	.LVL120-.Ltext0
 3095 0692 3E070000 		.4byte	.LVL122-.Ltext0
 3096 0696 0100     		.2byte	0x1
 3097 0698 50       		.byte	0x50
 3098 0699 3E070000 		.4byte	.LVL122-.Ltext0
 3099 069d AC080000 		.4byte	.LFE2-.Ltext0
 3100 06a1 0200     		.2byte	0x2
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 89


 3101 06a3 91       		.byte	0x91
 3102 06a4 7C       		.sleb128 -4
 3103 06a5 00000000 		.4byte	0x0
 3104 06a9 00000000 		.4byte	0x0
 3105              	.LLST61:
 3106 06ad 36070000 		.4byte	.LVL120-.Ltext0
 3107 06b1 48070000 		.4byte	.LVL124-.Ltext0
 3108 06b5 0100     		.2byte	0x1
 3109 06b7 51       		.byte	0x51
 3110 06b8 48070000 		.4byte	.LVL124-.Ltext0
 3111 06bc 72080000 		.4byte	.LVL144-.Ltext0
 3112 06c0 0100     		.2byte	0x1
 3113 06c2 57       		.byte	0x57
 3114 06c3 00000000 		.4byte	0x0
 3115 06c7 00000000 		.4byte	0x0
 3116              	.LLST62:
 3117 06cb 36070000 		.4byte	.LVL120-.Ltext0
 3118 06cf 3C070000 		.4byte	.LVL121-.Ltext0
 3119 06d3 0100     		.2byte	0x1
 3120 06d5 52       		.byte	0x52
 3121 06d6 44070000 		.4byte	.LVL123-.Ltext0
 3122 06da 86070000 		.4byte	.LVL131-.Ltext0
 3123 06de 0100     		.2byte	0x1
 3124 06e0 54       		.byte	0x54
 3125 06e1 70080000 		.4byte	.LVL140-.Ltext0
 3126 06e5 72080000 		.4byte	.LVL142-.Ltext0
 3127 06e9 0100     		.2byte	0x1
 3128 06eb 54       		.byte	0x54
 3129 06ec 00000000 		.4byte	0x0
 3130 06f0 00000000 		.4byte	0x0
 3131              	.LLST63:
 3132 06f4 36070000 		.4byte	.LVL120-.Ltext0
 3133 06f8 48070000 		.4byte	.LVL124-.Ltext0
 3134 06fc 0100     		.2byte	0x1
 3135 06fe 53       		.byte	0x53
 3136 06ff 48070000 		.4byte	.LVL124-.Ltext0
 3137 0703 AC080000 		.4byte	.LFE2-.Ltext0
 3138 0707 0200     		.2byte	0x2
 3139 0709 91       		.byte	0x91
 3140 070a 78       		.sleb128 -8
 3141 070b 00000000 		.4byte	0x0
 3142 070f 00000000 		.4byte	0x0
 3143              	.LLST64:
 3144 0713 36070000 		.4byte	.LVL120-.Ltext0
 3145 0717 8A070000 		.4byte	.LVL132-.Ltext0
 3146 071b 0200     		.2byte	0x2
 3147 071d 91       		.byte	0x91
 3148 071e 00       		.sleb128 0
 3149 071f 8A070000 		.4byte	.LVL132-.Ltext0
 3150 0723 CC070000 		.4byte	.LVL136-.Ltext0
 3151 0727 0100     		.2byte	0x1
 3152 0729 54       		.byte	0x54
 3153 072a CC070000 		.4byte	.LVL136-.Ltext0
 3154 072e 0C080000 		.4byte	.LVL137-.Ltext0
 3155 0732 0200     		.2byte	0x2
 3156 0734 91       		.byte	0x91
 3157 0735 14       		.sleb128 20
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 90


 3158 0736 0C080000 		.4byte	.LVL137-.Ltext0
 3159 073a 20080000 		.4byte	.LVL138-.Ltext0
 3160 073e 0100     		.2byte	0x1
 3161 0740 54       		.byte	0x54
 3162 0741 20080000 		.4byte	.LVL138-.Ltext0
 3163 0745 70080000 		.4byte	.LVL140-.Ltext0
 3164 0749 0200     		.2byte	0x2
 3165 074b 91       		.byte	0x91
 3166 074c 14       		.sleb128 20
 3167 074d 70080000 		.4byte	.LVL140-.Ltext0
 3168 0751 AC080000 		.4byte	.LFE2-.Ltext0
 3169 0755 0200     		.2byte	0x2
 3170 0757 91       		.byte	0x91
 3171 0758 00       		.sleb128 0
 3172 0759 00000000 		.4byte	0x0
 3173 075d 00000000 		.4byte	0x0
 3174              	.LLST65:
 3175 0761 36070000 		.4byte	.LVL120-.Ltext0
 3176 0765 56080000 		.4byte	.LVL139-.Ltext0
 3177 0769 0200     		.2byte	0x2
 3178 076b 91       		.byte	0x91
 3179 076c 04       		.sleb128 4
 3180 076d 56080000 		.4byte	.LVL139-.Ltext0
 3181 0771 70080000 		.4byte	.LVL140-.Ltext0
 3182 0775 0200     		.2byte	0x2
 3183 0777 91       		.byte	0x91
 3184 0778 18       		.sleb128 24
 3185 0779 70080000 		.4byte	.LVL140-.Ltext0
 3186 077d AC080000 		.4byte	.LFE2-.Ltext0
 3187 0781 0200     		.2byte	0x2
 3188 0783 91       		.byte	0x91
 3189 0784 04       		.sleb128 4
 3190 0785 00000000 		.4byte	0x0
 3191 0789 00000000 		.4byte	0x0
 3192              	.LLST66:
 3193 078d 64070000 		.4byte	.LVL129-.Ltext0
 3194 0791 68070000 		.4byte	.LVL130-.Ltext0
 3195 0795 0100     		.2byte	0x1
 3196 0797 50       		.byte	0x50
 3197 0798 70080000 		.4byte	.LVL140-.Ltext0
 3198 079c 72080000 		.4byte	.LVL141-.Ltext0
 3199 07a0 0100     		.2byte	0x1
 3200 07a2 50       		.byte	0x50
 3201 07a3 00000000 		.4byte	0x0
 3202 07a7 00000000 		.4byte	0x0
 3203              	.LLST67:
 3204 07ab 4A070000 		.4byte	.LVL125-.Ltext0
 3205 07af 4E070000 		.4byte	.LVL126-.Ltext0
 3206 07b3 0100     		.2byte	0x1
 3207 07b5 56       		.byte	0x56
 3208 07b6 4E070000 		.4byte	.LVL126-.Ltext0
 3209 07ba 52070000 		.4byte	.LVL127-.Ltext0
 3210 07be 0100     		.2byte	0x1
 3211 07c0 50       		.byte	0x50
 3212 07c1 52070000 		.4byte	.LVL127-.Ltext0
 3213 07c5 72080000 		.4byte	.LVL143-.Ltext0
 3214 07c9 0100     		.2byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 91


 3215 07cb 56       		.byte	0x56
 3216 07cc 00000000 		.4byte	0x0
 3217 07d0 00000000 		.4byte	0x0
 3218              	.LLST68:
 3219 07d4 B0070000 		.4byte	.LVL134-.Ltext0
 3220 07d8 B4070000 		.4byte	.LVL135-.Ltext0
 3221 07dc 0100     		.2byte	0x1
 3222 07de 50       		.byte	0x50
 3223 07df 00000000 		.4byte	0x0
 3224 07e3 00000000 		.4byte	0x0
 3225              	.LLST69:
 3226 07e7 AC080000 		.4byte	.LFB12-.Ltext0
 3227 07eb AE080000 		.4byte	.LCFI20-.Ltext0
 3228 07ef 0100     		.2byte	0x1
 3229 07f1 5D       		.byte	0x5d
 3230 07f2 AE080000 		.4byte	.LCFI20-.Ltext0
 3231 07f6 B0080000 		.4byte	.LCFI21-.Ltext0
 3232 07fa 0200     		.2byte	0x2
 3233 07fc 7D       		.byte	0x7d
 3234 07fd 0C       		.sleb128 12
 3235 07fe B0080000 		.4byte	.LCFI21-.Ltext0
 3236 0802 F0080000 		.4byte	.LFE12-.Ltext0
 3237 0806 0200     		.2byte	0x2
 3238 0808 7D       		.byte	0x7d
 3239 0809 14       		.sleb128 20
 3240 080a 00000000 		.4byte	0x0
 3241 080e 00000000 		.4byte	0x0
 3242              	.LLST70:
 3243 0812 C4080000 		.4byte	.LVL145-.Ltext0
 3244 0816 C8080000 		.4byte	.LVL146-.Ltext0
 3245 081a 0100     		.2byte	0x1
 3246 081c 54       		.byte	0x54
 3247 081d C8080000 		.4byte	.LVL146-.Ltext0
 3248 0821 CC080000 		.4byte	.LVL147-.Ltext0
 3249 0825 0100     		.2byte	0x1
 3250 0827 50       		.byte	0x50
 3251 0828 CC080000 		.4byte	.LVL147-.Ltext0
 3252 082c DA080000 		.4byte	.LVL149-.Ltext0
 3253 0830 0100     		.2byte	0x1
 3254 0832 54       		.byte	0x54
 3255 0833 DA080000 		.4byte	.LVL149-.Ltext0
 3256 0837 F0080000 		.4byte	.LFE12-.Ltext0
 3257 083b 0100     		.2byte	0x1
 3258 083d 50       		.byte	0x50
 3259 083e 00000000 		.4byte	0x0
 3260 0842 00000000 		.4byte	0x0
 3261              	.LLST71:
 3262 0846 F0080000 		.4byte	.LFB23-.Ltext0
 3263 084a F2080000 		.4byte	.LCFI22-.Ltext0
 3264 084e 0100     		.2byte	0x1
 3265 0850 5D       		.byte	0x5d
 3266 0851 F2080000 		.4byte	.LCFI22-.Ltext0
 3267 0855 4C090000 		.4byte	.LFE23-.Ltext0
 3268 0859 0200     		.2byte	0x2
 3269 085b 7D       		.byte	0x7d
 3270 085c 10       		.sleb128 16
 3271 085d 00000000 		.4byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 92


 3272 0861 00000000 		.4byte	0x0
 3273              	.LLST72:
 3274 0865 F2080000 		.4byte	.LVL150-.Ltext0
 3275 0869 FA080000 		.4byte	.LVL151-.Ltext0
 3276 086d 0100     		.2byte	0x1
 3277 086f 50       		.byte	0x50
 3278 0870 FA080000 		.4byte	.LVL151-.Ltext0
 3279 0874 32090000 		.4byte	.LVL152-.Ltext0
 3280 0878 0100     		.2byte	0x1
 3281 087a 54       		.byte	0x54
 3282 087b 34090000 		.4byte	.LVL153-.Ltext0
 3283 087f 36090000 		.4byte	.LVL154-.Ltext0
 3284 0883 0100     		.2byte	0x1
 3285 0885 54       		.byte	0x54
 3286 0886 00000000 		.4byte	0x0
 3287 088a 00000000 		.4byte	0x0
 3288              	.LLST73:
 3289 088e F2080000 		.4byte	.LVL150-.Ltext0
 3290 0892 FA080000 		.4byte	.LVL151-.Ltext0
 3291 0896 0100     		.2byte	0x1
 3292 0898 51       		.byte	0x51
 3293 0899 FA080000 		.4byte	.LVL151-.Ltext0
 3294 089d 3C090000 		.4byte	.LVL156-.Ltext0
 3295 08a1 0100     		.2byte	0x1
 3296 08a3 56       		.byte	0x56
 3297 08a4 00000000 		.4byte	0x0
 3298 08a8 00000000 		.4byte	0x0
 3299              	.LLST74:
 3300 08ac 32090000 		.4byte	.LVL152-.Ltext0
 3301 08b0 34090000 		.4byte	.LVL153-.Ltext0
 3302 08b4 0100     		.2byte	0x1
 3303 08b6 54       		.byte	0x54
 3304 08b7 36090000 		.4byte	.LVL154-.Ltext0
 3305 08bb 3C090000 		.4byte	.LVL155-.Ltext0
 3306 08bf 0100     		.2byte	0x1
 3307 08c1 54       		.byte	0x54
 3308 08c2 00000000 		.4byte	0x0
 3309 08c6 00000000 		.4byte	0x0
 3310              		.file 2 "./FreeRTOS/include/projdefs.h"
 3311              		.file 3 "./portable/portmacro.h"
 3312              		.file 4 "./FreeRTOS/include/list.h"
 3313              		.file 5 "./FreeRTOS/include/task.h"
 3314              		.section	.debug_info
 3315 0000 060C0000 		.4byte	0xc06
 3316 0004 0200     		.2byte	0x2
 3317 0006 00000000 		.4byte	.Ldebug_abbrev0
 3318 000a 04       		.byte	0x4
 3319 000b 01       		.uleb128 0x1
 3320 000c 36030000 		.4byte	.LASF116
 3321 0010 01       		.byte	0x1
 3322 0011 00010000 		.4byte	.LASF117
 3323 0015 61030000 		.4byte	.LASF118
 3324 0019 00000000 		.4byte	.Ltext0
 3325 001d 4C090000 		.4byte	.Letext0
 3326 0021 00000000 		.4byte	.Ldebug_line0
 3327 0025 02       		.uleb128 0x2
 3328 0026 04       		.byte	0x4
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 93


 3329 0027 07       		.byte	0x7
 3330 0028 69020000 		.4byte	.LASF0
 3331 002c 03       		.uleb128 0x3
 3332 002d 04       		.byte	0x4
 3333 002e 05       		.byte	0x5
 3334 002f 696E7400 		.ascii	"int\000"
 3335 0033 02       		.uleb128 0x2
 3336 0034 04       		.byte	0x4
 3337 0035 05       		.byte	0x5
 3338 0036 49010000 		.4byte	.LASF1
 3339 003a 02       		.uleb128 0x2
 3340 003b 08       		.byte	0x8
 3341 003c 05       		.byte	0x5
 3342 003d F2000000 		.4byte	.LASF2
 3343 0041 02       		.uleb128 0x2
 3344 0042 04       		.byte	0x4
 3345 0043 07       		.byte	0x7
 3346 0044 11020000 		.4byte	.LASF3
 3347 0048 04       		.uleb128 0x4
 3348 0049 04       		.byte	0x4
 3349 004a 07       		.byte	0x7
 3350 004b 02       		.uleb128 0x2
 3351 004c 01       		.byte	0x1
 3352 004d 08       		.byte	0x8
 3353 004e 85040000 		.4byte	.LASF4
 3354 0052 05       		.uleb128 0x5
 3355 0053 04       		.byte	0x4
 3356 0054 02       		.uleb128 0x2
 3357 0055 02       		.byte	0x2
 3358 0056 05       		.byte	0x5
 3359 0057 93040000 		.4byte	.LASF5
 3360 005b 02       		.uleb128 0x2
 3361 005c 01       		.byte	0x1
 3362 005d 08       		.byte	0x8
 3363 005e 6A050000 		.4byte	.LASF6
 3364 0062 02       		.uleb128 0x2
 3365 0063 02       		.byte	0x2
 3366 0064 07       		.byte	0x7
 3367 0065 B3020000 		.4byte	.LASF7
 3368 0069 02       		.uleb128 0x2
 3369 006a 08       		.byte	0x8
 3370 006b 07       		.byte	0x7
 3371 006c 82000000 		.4byte	.LASF8
 3372 0070 02       		.uleb128 0x2
 3373 0071 01       		.byte	0x1
 3374 0072 06       		.byte	0x6
 3375 0073 54000000 		.4byte	.LASF9
 3376 0077 06       		.uleb128 0x6
 3377 0078 88050000 		.4byte	.LASF10
 3378 007c 02       		.byte	0x2
 3379 007d 36       		.byte	0x36
 3380 007e 82000000 		.4byte	0x82
 3381 0082 07       		.uleb128 0x7
 3382 0083 04       		.byte	0x4
 3383 0084 88000000 		.4byte	0x88
 3384 0088 08       		.uleb128 0x8
 3385 0089 01       		.byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 94


 3386 008a 94000000 		.4byte	0x94
 3387 008e 09       		.uleb128 0x9
 3388 008f 52000000 		.4byte	0x52
 3389 0093 00       		.byte	0x0
 3390 0094 06       		.uleb128 0x6
 3391 0095 91010000 		.4byte	.LASF11
 3392 0099 03       		.byte	0x3
 3393 009a 67       		.byte	0x67
 3394 009b 25000000 		.4byte	0x25
 3395 009f 0A       		.uleb128 0xa
 3396 00a0 AB060000 		.4byte	.LASF18
 3397 00a4 14       		.byte	0x14
 3398 00a5 04       		.byte	0x4
 3399 00a6 5F       		.byte	0x5f
 3400 00a7 F2000000 		.4byte	0xf2
 3401 00ab 0B       		.uleb128 0xb
 3402 00ac 30060000 		.4byte	.LASF12
 3403 00b0 04       		.byte	0x4
 3404 00b1 60       		.byte	0x60
 3405 00b2 94000000 		.4byte	0x94
 3406 00b6 02       		.byte	0x2
 3407 00b7 23       		.byte	0x23
 3408 00b8 00       		.uleb128 0x0
 3409 00b9 0B       		.uleb128 0xb
 3410 00ba 91060000 		.4byte	.LASF13
 3411 00be 04       		.byte	0x4
 3412 00bf 61       		.byte	0x61
 3413 00c0 F2000000 		.4byte	0xf2
 3414 00c4 02       		.byte	0x2
 3415 00c5 23       		.byte	0x23
 3416 00c6 04       		.uleb128 0x4
 3417 00c7 0B       		.uleb128 0xb
 3418 00c8 25040000 		.4byte	.LASF14
 3419 00cc 04       		.byte	0x4
 3420 00cd 62       		.byte	0x62
 3421 00ce F2000000 		.4byte	0xf2
 3422 00d2 02       		.byte	0x2
 3423 00d3 23       		.byte	0x23
 3424 00d4 08       		.uleb128 0x8
 3425 00d5 0B       		.uleb128 0xb
 3426 00d6 3E040000 		.4byte	.LASF15
 3427 00da 04       		.byte	0x4
 3428 00db 63       		.byte	0x63
 3429 00dc 52000000 		.4byte	0x52
 3430 00e0 02       		.byte	0x2
 3431 00e1 23       		.byte	0x23
 3432 00e2 0C       		.uleb128 0xc
 3433 00e3 0B       		.uleb128 0xb
 3434 00e4 4E040000 		.4byte	.LASF16
 3435 00e8 04       		.byte	0x4
 3436 00e9 64       		.byte	0x64
 3437 00ea 52000000 		.4byte	0x52
 3438 00ee 02       		.byte	0x2
 3439 00ef 23       		.byte	0x23
 3440 00f0 10       		.uleb128 0x10
 3441 00f1 00       		.byte	0x0
 3442 00f2 07       		.uleb128 0x7
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 95


 3443 00f3 04       		.byte	0x4
 3444 00f4 F8000000 		.4byte	0xf8
 3445 00f8 0C       		.uleb128 0xc
 3446 00f9 AB060000 		.4byte	.LASF18
 3447 00fd 9F000000 		.4byte	0x9f
 3448 0101 06       		.uleb128 0x6
 3449 0102 1A000000 		.4byte	.LASF17
 3450 0106 04       		.byte	0x4
 3451 0107 66       		.byte	0x66
 3452 0108 9F000000 		.4byte	0x9f
 3453 010c 0A       		.uleb128 0xa
 3454 010d C6000000 		.4byte	.LASF19
 3455 0111 0C       		.byte	0xc
 3456 0112 04       		.byte	0x4
 3457 0113 69       		.byte	0x69
 3458 0114 43010000 		.4byte	0x143
 3459 0118 0B       		.uleb128 0xb
 3460 0119 30060000 		.4byte	.LASF12
 3461 011d 04       		.byte	0x4
 3462 011e 6A       		.byte	0x6a
 3463 011f 94000000 		.4byte	0x94
 3464 0123 02       		.byte	0x2
 3465 0124 23       		.byte	0x23
 3466 0125 00       		.uleb128 0x0
 3467 0126 0B       		.uleb128 0xb
 3468 0127 91060000 		.4byte	.LASF13
 3469 012b 04       		.byte	0x4
 3470 012c 6B       		.byte	0x6b
 3471 012d F2000000 		.4byte	0xf2
 3472 0131 02       		.byte	0x2
 3473 0132 23       		.byte	0x23
 3474 0133 04       		.uleb128 0x4
 3475 0134 0B       		.uleb128 0xb
 3476 0135 25040000 		.4byte	.LASF14
 3477 0139 04       		.byte	0x4
 3478 013a 6C       		.byte	0x6c
 3479 013b F2000000 		.4byte	0xf2
 3480 013f 02       		.byte	0x2
 3481 0140 23       		.byte	0x23
 3482 0141 08       		.uleb128 0x8
 3483 0142 00       		.byte	0x0
 3484 0143 06       		.uleb128 0x6
 3485 0144 35010000 		.4byte	.LASF20
 3486 0148 04       		.byte	0x4
 3487 0149 6E       		.byte	0x6e
 3488 014a 0C010000 		.4byte	0x10c
 3489 014e 0A       		.uleb128 0xa
 3490 014f E3040000 		.4byte	.LASF21
 3491 0153 14       		.byte	0x14
 3492 0154 04       		.byte	0x4
 3493 0155 74       		.byte	0x74
 3494 0156 85010000 		.4byte	0x185
 3495 015a 0B       		.uleb128 0xb
 3496 015b 44020000 		.4byte	.LASF22
 3497 015f 04       		.byte	0x4
 3498 0160 75       		.byte	0x75
 3499 0161 85010000 		.4byte	0x185
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 96


 3500 0165 02       		.byte	0x2
 3501 0166 23       		.byte	0x23
 3502 0167 00       		.uleb128 0x0
 3503 0168 0B       		.uleb128 0xb
 3504 0169 46040000 		.4byte	.LASF23
 3505 016d 04       		.byte	0x4
 3506 016e 76       		.byte	0x76
 3507 016f 8A010000 		.4byte	0x18a
 3508 0173 02       		.byte	0x2
 3509 0174 23       		.byte	0x23
 3510 0175 04       		.uleb128 0x4
 3511 0176 0B       		.uleb128 0xb
 3512 0177 B3000000 		.4byte	.LASF24
 3513 017b 04       		.byte	0x4
 3514 017c 77       		.byte	0x77
 3515 017d 95010000 		.4byte	0x195
 3516 0181 02       		.byte	0x2
 3517 0182 23       		.byte	0x23
 3518 0183 08       		.uleb128 0x8
 3519 0184 00       		.byte	0x0
 3520 0185 0D       		.uleb128 0xd
 3521 0186 25000000 		.4byte	0x25
 3522 018a 07       		.uleb128 0x7
 3523 018b 04       		.byte	0x4
 3524 018c 90010000 		.4byte	0x190
 3525 0190 0D       		.uleb128 0xd
 3526 0191 01010000 		.4byte	0x101
 3527 0195 0D       		.uleb128 0xd
 3528 0196 43010000 		.4byte	0x143
 3529 019a 06       		.uleb128 0x6
 3530 019b 43010000 		.4byte	.LASF25
 3531 019f 04       		.byte	0x4
 3532 01a0 78       		.byte	0x78
 3533 01a1 4E010000 		.4byte	0x14e
 3534 01a5 06       		.uleb128 0x6
 3535 01a6 29010000 		.4byte	.LASF26
 3536 01aa 05       		.byte	0x5
 3537 01ab 52       		.byte	0x52
 3538 01ac 52000000 		.4byte	0x52
 3539 01b0 0A       		.uleb128 0xa
 3540 01b1 BC000000 		.4byte	.LASF27
 3541 01b5 08       		.byte	0x8
 3542 01b6 05       		.byte	0x5
 3543 01b7 58       		.byte	0x58
 3544 01b8 D9010000 		.4byte	0x1d9
 3545 01bc 0B       		.uleb128 0xb
 3546 01bd BC010000 		.4byte	.LASF28
 3547 01c1 05       		.byte	0x5
 3548 01c2 59       		.byte	0x59
 3549 01c3 33000000 		.4byte	0x33
 3550 01c7 02       		.byte	0x2
 3551 01c8 23       		.byte	0x23
 3552 01c9 00       		.uleb128 0x0
 3553 01ca 0B       		.uleb128 0xb
 3554 01cb 26020000 		.4byte	.LASF29
 3555 01cf 05       		.byte	0x5
 3556 01d0 5A       		.byte	0x5a
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 97


 3557 01d1 94000000 		.4byte	0x94
 3558 01d5 02       		.byte	0x2
 3559 01d6 23       		.byte	0x23
 3560 01d7 04       		.uleb128 0x4
 3561 01d8 00       		.byte	0x0
 3562 01d9 06       		.uleb128 0x6
 3563 01da DB020000 		.4byte	.LASF30
 3564 01de 05       		.byte	0x5
 3565 01df 5B       		.byte	0x5b
 3566 01e0 B0010000 		.4byte	0x1b0
 3567 01e4 0A       		.uleb128 0xa
 3568 01e5 52010000 		.4byte	.LASF31
 3569 01e9 44       		.byte	0x44
 3570 01ea 01       		.byte	0x1
 3571 01eb 45       		.byte	0x45
 3572 01ec 45020000 		.4byte	0x245
 3573 01f0 0B       		.uleb128 0xb
 3574 01f1 7B020000 		.4byte	.LASF32
 3575 01f5 01       		.byte	0x1
 3576 01f6 46       		.byte	0x46
 3577 01f7 45020000 		.4byte	0x245
 3578 01fb 02       		.byte	0x2
 3579 01fc 23       		.byte	0x23
 3580 01fd 00       		.uleb128 0x0
 3581 01fe 0B       		.uleb128 0xb
 3582 01ff FA040000 		.4byte	.LASF33
 3583 0203 01       		.byte	0x1
 3584 0204 47       		.byte	0x47
 3585 0205 01010000 		.4byte	0x101
 3586 0209 02       		.byte	0x2
 3587 020a 23       		.byte	0x23
 3588 020b 04       		.uleb128 0x4
 3589 020c 0B       		.uleb128 0xb
 3590 020d DC030000 		.4byte	.LASF34
 3591 0211 01       		.byte	0x1
 3592 0212 48       		.byte	0x48
 3593 0213 01010000 		.4byte	0x101
 3594 0217 02       		.byte	0x2
 3595 0218 23       		.byte	0x23
 3596 0219 18       		.uleb128 0x18
 3597 021a 0B       		.uleb128 0xb
 3598 021b B6060000 		.4byte	.LASF35
 3599 021f 01       		.byte	0x1
 3600 0220 49       		.byte	0x49
 3601 0221 25000000 		.4byte	0x25
 3602 0225 02       		.byte	0x2
 3603 0226 23       		.byte	0x23
 3604 0227 2C       		.uleb128 0x2c
 3605 0228 0B       		.uleb128 0xb
 3606 0229 7B030000 		.4byte	.LASF36
 3607 022d 01       		.byte	0x1
 3608 022e 4A       		.byte	0x4a
 3609 022f 4B020000 		.4byte	0x24b
 3610 0233 02       		.byte	0x2
 3611 0234 23       		.byte	0x23
 3612 0235 30       		.uleb128 0x30
 3613 0236 0B       		.uleb128 0xb
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 98


 3614 0237 66060000 		.4byte	.LASF37
 3615 023b 01       		.byte	0x1
 3616 023c 4B       		.byte	0x4b
 3617 023d 51020000 		.4byte	0x251
 3618 0241 02       		.byte	0x2
 3619 0242 23       		.byte	0x23
 3620 0243 34       		.uleb128 0x34
 3621 0244 00       		.byte	0x0
 3622 0245 07       		.uleb128 0x7
 3623 0246 04       		.byte	0x4
 3624 0247 85010000 		.4byte	0x185
 3625 024b 07       		.uleb128 0x7
 3626 024c 04       		.byte	0x4
 3627 024d 25000000 		.4byte	0x25
 3628 0251 0E       		.uleb128 0xe
 3629 0252 70000000 		.4byte	0x70
 3630 0256 61020000 		.4byte	0x261
 3631 025a 0F       		.uleb128 0xf
 3632 025b 48000000 		.4byte	0x48
 3633 025f 0F       		.byte	0xf
 3634 0260 00       		.byte	0x0
 3635 0261 06       		.uleb128 0x6
 3636 0262 A0020000 		.4byte	.LASF38
 3637 0266 01       		.byte	0x1
 3638 0267 61       		.byte	0x61
 3639 0268 E4010000 		.4byte	0x1e4
 3640 026c 10       		.uleb128 0x10
 3641 026d 01       		.byte	0x1
 3642 026e 54020000 		.4byte	.LASF41
 3643 0272 01       		.byte	0x1
 3644 0273 5503     		.2byte	0x355
 3645 0275 01       		.byte	0x1
 3646 0276 33000000 		.4byte	0x33
 3647 027a 00000000 		.4byte	.LFB9
 3648 027e 28000000 		.4byte	.LFE9
 3649 0282 01       		.byte	0x1
 3650 0283 5D       		.byte	0x5d
 3651 0284 B5020000 		.4byte	0x2b5
 3652 0288 11       		.uleb128 0x11
 3653 0289 4B050000 		.4byte	.LASF49
 3654 028d 01       		.byte	0x1
 3655 028e 5403     		.2byte	0x354
 3656 0290 A5010000 		.4byte	0x1a5
 3657 0294 00000000 		.4byte	.LLST1
 3658 0298 12       		.uleb128 0x12
 3659 0299 1E020000 		.4byte	.LASF39
 3660 029d 01       		.byte	0x1
 3661 029e 5603     		.2byte	0x356
 3662 02a0 33000000 		.4byte	0x33
 3663 02a4 1E000000 		.4byte	.LLST2
 3664 02a8 13       		.uleb128 0x13
 3665 02a9 C6020000 		.4byte	.LASF51
 3666 02ad 01       		.byte	0x1
 3667 02ae 5703     		.2byte	0x357
 3668 02b0 B5020000 		.4byte	0x2b5
 3669 02b4 00       		.byte	0x0
 3670 02b5 14       		.uleb128 0x14
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 99


 3671 02b6 BA020000 		.4byte	0x2ba
 3672 02ba 07       		.uleb128 0x7
 3673 02bb 04       		.byte	0x4
 3674 02bc C0020000 		.4byte	0x2c0
 3675 02c0 14       		.uleb128 0x14
 3676 02c1 61020000 		.4byte	0x261
 3677 02c5 15       		.uleb128 0x15
 3678 02c6 01       		.byte	0x1
 3679 02c7 4E030000 		.4byte	.LASF56
 3680 02cb 01       		.byte	0x1
 3681 02cc 7105     		.2byte	0x571
 3682 02ce 01       		.byte	0x1
 3683 02cf 28000000 		.4byte	.LFB19
 3684 02d3 8C000000 		.4byte	.LFE19
 3685 02d7 01       		.byte	0x1
 3686 02d8 5D       		.byte	0x5d
 3687 02d9 F8020000 		.4byte	0x2f8
 3688 02dd 16       		.uleb128 0x16
 3689 02de 52000000 		.4byte	.LBB2
 3690 02e2 76000000 		.4byte	.LBE2
 3691 02e6 12       		.uleb128 0x12
 3692 02e7 A7020000 		.4byte	.LASF40
 3693 02eb 01       		.byte	0x1
 3694 02ec 8705     		.2byte	0x587
 3695 02ee F8020000 		.4byte	0x2f8
 3696 02f2 3C000000 		.4byte	.LLST4
 3697 02f6 00       		.byte	0x0
 3698 02f7 00       		.byte	0x0
 3699 02f8 14       		.uleb128 0x14
 3700 02f9 FD020000 		.4byte	0x2fd
 3701 02fd 07       		.uleb128 0x7
 3702 02fe 04       		.byte	0x4
 3703 02ff 9A010000 		.4byte	0x19a
 3704 0303 17       		.uleb128 0x17
 3705 0304 01       		.byte	0x1
 3706 0305 EC060000 		.4byte	.LASF119
 3707 0309 01       		.byte	0x1
 3708 030a 0406     		.2byte	0x604
 3709 030c 01       		.byte	0x1
 3710 030d 01       		.byte	0x1
 3711 030e 1F030000 		.4byte	0x31f
 3712 0312 18       		.uleb128 0x18
 3713 0313 A9000000 		.4byte	.LASF85
 3714 0317 01       		.byte	0x1
 3715 0318 0306     		.2byte	0x603
 3716 031a 1F030000 		.4byte	0x31f
 3717 031e 00       		.byte	0x0
 3718 031f 14       		.uleb128 0x14
 3719 0320 24030000 		.4byte	0x324
 3720 0324 07       		.uleb128 0x7
 3721 0325 04       		.byte	0x4
 3722 0326 D9010000 		.4byte	0x1d9
 3723 032a 19       		.uleb128 0x19
 3724 032b 03030000 		.4byte	0x303
 3725 032f 8C000000 		.4byte	.LFB22
 3726 0333 A4000000 		.4byte	.LFE22
 3727 0337 01       		.byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 100


 3728 0338 5D       		.byte	0x5d
 3729 0339 45030000 		.4byte	0x345
 3730 033d 1A       		.uleb128 0x1a
 3731 033e 12030000 		.4byte	0x312
 3732 0342 01       		.byte	0x1
 3733 0343 50       		.byte	0x50
 3734 0344 00       		.byte	0x0
 3735 0345 1B       		.uleb128 0x1b
 3736 0346 01       		.byte	0x1
 3737 0347 E9040000 		.4byte	.LASF46
 3738 034b 01       		.byte	0x1
 3739 034c 3606     		.2byte	0x636
 3740 034e 01       		.byte	0x1
 3741 034f A4000000 		.4byte	.LFB24
 3742 0353 B0000000 		.4byte	.LFE24
 3743 0357 01       		.byte	0x1
 3744 0358 5D       		.byte	0x5d
 3745 0359 1C       		.uleb128 0x1c
 3746 035a 01       		.byte	0x1
 3747 035b CE050000 		.4byte	.LASF42
 3748 035f 01       		.byte	0x1
 3749 0360 5E04     		.2byte	0x45e
 3750 0362 01       		.byte	0x1
 3751 0363 25000000 		.4byte	0x25
 3752 0367 B0000000 		.4byte	.LFB17
 3753 036b CC000000 		.4byte	.LFE17
 3754 036f 4F000000 		.4byte	.LLST7
 3755 0373 88030000 		.4byte	0x388
 3756 0377 12       		.uleb128 0x12
 3757 0378 EB030000 		.4byte	.LASF43
 3758 037c 01       		.byte	0x1
 3759 037d 5F04     		.2byte	0x45f
 3760 037f 25000000 		.4byte	0x25
 3761 0383 6E000000 		.4byte	.LLST8
 3762 0387 00       		.byte	0x0
 3763 0388 1C       		.uleb128 0x1c
 3764 0389 01       		.byte	0x1
 3765 038a 0A030000 		.4byte	.LASF44
 3766 038e 01       		.byte	0x1
 3767 038f 4F04     		.2byte	0x44f
 3768 0391 01       		.byte	0x1
 3769 0392 94000000 		.4byte	0x94
 3770 0396 CC000000 		.4byte	.LFB16
 3771 039a E8000000 		.4byte	.LFE16
 3772 039e 81000000 		.4byte	.LLST9
 3773 03a2 B7030000 		.4byte	0x3b7
 3774 03a6 12       		.uleb128 0x12
 3775 03a7 19060000 		.4byte	.LASF45
 3776 03ab 01       		.byte	0x1
 3777 03ac 5004     		.2byte	0x450
 3778 03ae 94000000 		.4byte	0x94
 3779 03b2 A0000000 		.4byte	.LLST10
 3780 03b6 00       		.byte	0x0
 3781 03b7 1D       		.uleb128 0x1d
 3782 03b8 01       		.byte	0x1
 3783 03b9 20060000 		.4byte	.LASF47
 3784 03bd 01       		.byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 101


 3785 03be F503     		.2byte	0x3f5
 3786 03c0 01       		.byte	0x1
 3787 03c1 E8000000 		.4byte	.LFB14
 3788 03c5 04010000 		.4byte	.LFE14
 3789 03c9 B3000000 		.4byte	.LLST11
 3790 03cd 1C       		.uleb128 0x1c
 3791 03ce 01       		.byte	0x1
 3792 03cf DA060000 		.4byte	.LASF48
 3793 03d3 01       		.byte	0x1
 3794 03d4 AB02     		.2byte	0x2ab
 3795 03d6 01       		.byte	0x1
 3796 03d7 25000000 		.4byte	0x25
 3797 03db 04010000 		.4byte	.LFB6
 3798 03df 2C010000 		.4byte	.LFE6
 3799 03e3 D2000000 		.4byte	.LLST12
 3800 03e7 1C040000 		.4byte	0x41c
 3801 03eb 11       		.uleb128 0x11
 3802 03ec F5010000 		.4byte	.LASF50
 3803 03f0 01       		.byte	0x1
 3804 03f1 AA02     		.2byte	0x2aa
 3805 03f3 A5010000 		.4byte	0x1a5
 3806 03f7 F1000000 		.4byte	.LLST13
 3807 03fb 12       		.uleb128 0x12
 3808 03fc C6020000 		.4byte	.LASF51
 3809 0400 01       		.byte	0x1
 3810 0401 AC02     		.2byte	0x2ac
 3811 0403 1C040000 		.4byte	0x41c
 3812 0407 0F010000 		.4byte	.LLST14
 3813 040b 12       		.uleb128 0x12
 3814 040c 01030000 		.4byte	.LASF52
 3815 0410 01       		.byte	0x1
 3816 0411 AD02     		.2byte	0x2ad
 3817 0413 25000000 		.4byte	0x25
 3818 0417 2D010000 		.4byte	.LLST15
 3819 041b 00       		.byte	0x0
 3820 041c 07       		.uleb128 0x7
 3821 041d 04       		.byte	0x4
 3822 041e 61020000 		.4byte	0x261
 3823 0422 1C       		.uleb128 0x1c
 3824 0423 01       		.byte	0x1
 3825 0424 6F050000 		.4byte	.LASF53
 3826 0428 01       		.byte	0x1
 3827 0429 D505     		.2byte	0x5d5
 3828 042b 01       		.byte	0x1
 3829 042c 33000000 		.4byte	0x33
 3830 0430 2C010000 		.4byte	.LFB21
 3831 0434 A4010000 		.4byte	.LFE21
 3832 0438 40010000 		.4byte	.LLST16
 3833 043c 6D040000 		.4byte	0x46d
 3834 0440 11       		.uleb128 0x11
 3835 0441 24000000 		.4byte	.LASF54
 3836 0445 01       		.byte	0x1
 3837 0446 D405     		.2byte	0x5d4
 3838 0448 6D040000 		.4byte	0x46d
 3839 044c 5F010000 		.4byte	.LLST17
 3840 0450 12       		.uleb128 0x12
 3841 0451 5A040000 		.4byte	.LASF55
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 102


 3842 0455 01       		.byte	0x1
 3843 0456 D605     		.2byte	0x5d6
 3844 0458 1C040000 		.4byte	0x41c
 3845 045c 72010000 		.4byte	.LLST18
 3846 0460 13       		.uleb128 0x13
 3847 0461 1E020000 		.4byte	.LASF39
 3848 0465 01       		.byte	0x1
 3849 0466 D705     		.2byte	0x5d7
 3850 0468 33000000 		.4byte	0x33
 3851 046c 00       		.byte	0x0
 3852 046d 14       		.uleb128 0x14
 3853 046e 72040000 		.4byte	0x472
 3854 0472 07       		.uleb128 0x7
 3855 0473 04       		.byte	0x4
 3856 0474 78040000 		.4byte	0x478
 3857 0478 14       		.uleb128 0x14
 3858 0479 9A010000 		.4byte	0x19a
 3859 047d 1E       		.uleb128 0x1e
 3860 047e 01       		.byte	0x1
 3861 047f 9D040000 		.4byte	.LASF57
 3862 0483 01       		.byte	0x1
 3863 0484 CB04     		.2byte	0x4cb
 3864 0486 01       		.byte	0x1
 3865 0487 A4010000 		.4byte	.LFB18
 3866 048b 54020000 		.4byte	.LFE18
 3867 048f 90010000 		.4byte	.LLST19
 3868 0493 CC040000 		.4byte	0x4cc
 3869 0497 1F       		.uleb128 0x1f
 3870 0498 BC010000 		.4byte	.LBB3
 3871 049c D2010000 		.4byte	.LBE3
 3872 04a0 B5040000 		.4byte	0x4b5
 3873 04a4 12       		.uleb128 0x12
 3874 04a5 B5050000 		.4byte	.LASF58
 3875 04a9 01       		.byte	0x1
 3876 04aa D404     		.2byte	0x4d4
 3877 04ac FD020000 		.4byte	0x2fd
 3878 04b0 AF010000 		.4byte	.LLST20
 3879 04b4 00       		.byte	0x0
 3880 04b5 16       		.uleb128 0x16
 3881 04b6 D2010000 		.4byte	.LBB4
 3882 04ba 26020000 		.4byte	.LBE4
 3883 04be 13       		.uleb128 0x13
 3884 04bf C6020000 		.4byte	.LASF51
 3885 04c3 01       		.byte	0x1
 3886 04c4 E004     		.2byte	0x4e0
 3887 04c6 1C040000 		.4byte	0x41c
 3888 04ca 00       		.byte	0x0
 3889 04cb 00       		.byte	0x0
 3890 04cc 1C       		.uleb128 0x1c
 3891 04cd 01       		.byte	0x1
 3892 04ce D4040000 		.4byte	.LASF59
 3893 04d2 01       		.byte	0x1
 3894 04d3 FD03     		.2byte	0x3fd
 3895 04d5 01       		.byte	0x1
 3896 04d6 33000000 		.4byte	0x33
 3897 04da 54020000 		.4byte	.LFB15
 3898 04de 24030000 		.4byte	.LFE15
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 103


 3899 04e2 D8010000 		.4byte	.LLST21
 3900 04e6 21050000 		.4byte	0x521
 3901 04ea 13       		.uleb128 0x13
 3902 04eb C6020000 		.4byte	.LASF51
 3903 04ef 01       		.byte	0x1
 3904 04f0 FE03     		.2byte	0x3fe
 3905 04f2 1C040000 		.4byte	0x41c
 3906 04f6 12       		.uleb128 0x12
 3907 04f7 99000000 		.4byte	.LASF60
 3908 04fb 01       		.byte	0x1
 3909 04fc FF03     		.2byte	0x3ff
 3910 04fe 33000000 		.4byte	0x33
 3911 0502 F7010000 		.4byte	.LLST22
 3912 0506 16       		.uleb128 0x16
 3913 0507 74020000 		.4byte	.LBB5
 3914 050b F8020000 		.4byte	.LBE5
 3915 050f 12       		.uleb128 0x12
 3916 0510 CC020000 		.4byte	.LASF61
 3917 0514 01       		.byte	0x1
 3918 0515 0E04     		.2byte	0x40e
 3919 0517 33000000 		.4byte	0x33
 3920 051b 15020000 		.4byte	.LLST23
 3921 051f 00       		.byte	0x0
 3922 0520 00       		.byte	0x0
 3923 0521 1C       		.uleb128 0x1c
 3924 0522 01       		.byte	0x1
 3925 0523 0B050000 		.4byte	.LASF62
 3926 0527 01       		.byte	0x1
 3927 0528 9E03     		.2byte	0x39e
 3928 052a 01       		.byte	0x1
 3929 052b 33000000 		.4byte	0x33
 3930 052f 24030000 		.4byte	.LFB11
 3931 0533 A0030000 		.4byte	.LFE11
 3932 0537 28020000 		.4byte	.LLST24
 3933 053b 70050000 		.4byte	0x570
 3934 053f 11       		.uleb128 0x11
 3935 0540 E3000000 		.4byte	.LASF63
 3936 0544 01       		.byte	0x1
 3937 0545 9D03     		.2byte	0x39d
 3938 0547 A5010000 		.4byte	0x1a5
 3939 054b 53020000 		.4byte	.LLST25
 3940 054f 12       		.uleb128 0x12
 3941 0550 CC020000 		.4byte	.LASF61
 3942 0554 01       		.byte	0x1
 3943 0555 9F03     		.2byte	0x39f
 3944 0557 33000000 		.4byte	0x33
 3945 055b 66020000 		.4byte	.LLST26
 3946 055f 12       		.uleb128 0x12
 3947 0560 C6020000 		.4byte	.LASF51
 3948 0564 01       		.byte	0x1
 3949 0565 A003     		.2byte	0x3a0
 3950 0567 1C040000 		.4byte	0x41c
 3951 056b 84020000 		.4byte	.LLST27
 3952 056f 00       		.byte	0x0
 3953 0570 1E       		.uleb128 0x1e
 3954 0571 01       		.byte	0x1
 3955 0572 E8020000 		.4byte	.LASF64
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 104


 3956 0576 01       		.byte	0x1
 3957 0577 7403     		.2byte	0x374
 3958 0579 01       		.byte	0x1
 3959 057a A0030000 		.4byte	.LFB10
 3960 057e 08040000 		.4byte	.LFE10
 3961 0582 97020000 		.4byte	.LLST28
 3962 0586 AB050000 		.4byte	0x5ab
 3963 058a 11       		.uleb128 0x11
 3964 058b E3000000 		.4byte	.LASF63
 3965 058f 01       		.byte	0x1
 3966 0590 7303     		.2byte	0x373
 3967 0592 A5010000 		.4byte	0x1a5
 3968 0596 B6020000 		.4byte	.LLST29
 3969 059a 12       		.uleb128 0x12
 3970 059b C6020000 		.4byte	.LASF51
 3971 059f 01       		.byte	0x1
 3972 05a0 7503     		.2byte	0x375
 3973 05a2 1C040000 		.4byte	0x41c
 3974 05a6 DF020000 		.4byte	.LLST30
 3975 05aa 00       		.byte	0x0
 3976 05ab 1E       		.uleb128 0x1e
 3977 05ac 01       		.byte	0x1
 3978 05ad 30000000 		.4byte	.LASF65
 3979 05b1 01       		.byte	0x1
 3980 05b2 2A03     		.2byte	0x32a
 3981 05b4 01       		.byte	0x1
 3982 05b5 08040000 		.4byte	.LFB8
 3983 05b9 60040000 		.4byte	.LFE8
 3984 05bd F2020000 		.4byte	.LLST31
 3985 05c1 E6050000 		.4byte	0x5e6
 3986 05c5 11       		.uleb128 0x11
 3987 05c6 01070000 		.4byte	.LASF66
 3988 05ca 01       		.byte	0x1
 3989 05cb 2903     		.2byte	0x329
 3990 05cd A5010000 		.4byte	0x1a5
 3991 05d1 11030000 		.4byte	.LLST32
 3992 05d5 12       		.uleb128 0x12
 3993 05d6 C6020000 		.4byte	.LASF51
 3994 05da 01       		.byte	0x1
 3995 05db 2B03     		.2byte	0x32b
 3996 05dd 1C040000 		.4byte	0x41c
 3997 05e1 2F030000 		.4byte	.LLST33
 3998 05e5 00       		.byte	0x0
 3999 05e6 1E       		.uleb128 0x1e
 4000 05e7 01       		.byte	0x1
 4001 05e8 AB010000 		.4byte	.LASF67
 4002 05ec 01       		.byte	0x1
 4003 05ed C102     		.2byte	0x2c1
 4004 05ef 01       		.byte	0x1
 4005 05f0 60040000 		.4byte	.LFB7
 4006 05f4 FC040000 		.4byte	.LFE7
 4007 05f8 4D030000 		.4byte	.LLST34
 4008 05fc 51060000 		.4byte	0x651
 4009 0600 11       		.uleb128 0x11
 4010 0601 F5010000 		.4byte	.LASF50
 4011 0605 01       		.byte	0x1
 4012 0606 C002     		.2byte	0x2c0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 105


 4013 0608 A5010000 		.4byte	0x1a5
 4014 060c 6C030000 		.4byte	.LLST35
 4015 0610 11       		.uleb128 0x11
 4016 0611 30040000 		.4byte	.LASF68
 4017 0615 01       		.byte	0x1
 4018 0616 C002     		.2byte	0x2c0
 4019 0618 25000000 		.4byte	0x25
 4020 061c 95030000 		.4byte	.LLST36
 4021 0620 12       		.uleb128 0x12
 4022 0621 C6020000 		.4byte	.LASF51
 4023 0625 01       		.byte	0x1
 4024 0626 C202     		.2byte	0x2c2
 4025 0628 1C040000 		.4byte	0x41c
 4026 062c BE030000 		.4byte	.LLST37
 4027 0630 12       		.uleb128 0x12
 4028 0631 7F060000 		.4byte	.LASF69
 4029 0635 01       		.byte	0x1
 4030 0636 C302     		.2byte	0x2c3
 4031 0638 25000000 		.4byte	0x25
 4032 063c DC030000 		.4byte	.LLST38
 4033 0640 12       		.uleb128 0x12
 4034 0641 CC020000 		.4byte	.LASF61
 4035 0645 01       		.byte	0x1
 4036 0646 C302     		.2byte	0x2c3
 4037 0648 25000000 		.4byte	0x25
 4038 064c FA030000 		.4byte	.LLST39
 4039 0650 00       		.byte	0x0
 4040 0651 1E       		.uleb128 0x1e
 4041 0652 01       		.byte	0x1
 4042 0653 94050000 		.4byte	.LASF70
 4043 0657 01       		.byte	0x1
 4044 0658 E301     		.2byte	0x1e3
 4045 065a 01       		.byte	0x1
 4046 065b FC040000 		.4byte	.LFB3
 4047 065f 6C050000 		.4byte	.LFE3
 4048 0663 18040000 		.4byte	.LLST40
 4049 0667 8C060000 		.4byte	0x68c
 4050 066b 11       		.uleb128 0x11
 4051 066c AF030000 		.4byte	.LASF71
 4052 0670 01       		.byte	0x1
 4053 0671 E201     		.2byte	0x1e2
 4054 0673 A5010000 		.4byte	0x1a5
 4055 0677 37040000 		.4byte	.LLST41
 4056 067b 12       		.uleb128 0x12
 4057 067c C6020000 		.4byte	.LASF51
 4058 0680 01       		.byte	0x1
 4059 0681 E401     		.2byte	0x1e4
 4060 0683 1C040000 		.4byte	0x41c
 4061 0687 55040000 		.4byte	.LLST42
 4062 068b 00       		.byte	0x0
 4063 068c 1E       		.uleb128 0x1e
 4064 068d 01       		.byte	0x1
 4065 068e DF010000 		.4byte	.LASF72
 4066 0692 01       		.byte	0x1
 4067 0693 8F05     		.2byte	0x58f
 4068 0695 01       		.byte	0x1
 4069 0696 6C050000 		.4byte	.LFB20
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 106


 4070 069a D0050000 		.4byte	.LFE20
 4071 069e 73040000 		.4byte	.LLST43
 4072 06a2 D7060000 		.4byte	0x6d7
 4073 06a6 11       		.uleb128 0x11
 4074 06a7 24000000 		.4byte	.LASF54
 4075 06ab 01       		.byte	0x1
 4076 06ac 8E05     		.2byte	0x58e
 4077 06ae 6D040000 		.4byte	0x46d
 4078 06b2 92040000 		.4byte	.LLST44
 4079 06b6 11       		.uleb128 0x11
 4080 06b7 11010000 		.4byte	.LASF73
 4081 06bb 01       		.byte	0x1
 4082 06bc 8E05     		.2byte	0x58e
 4083 06be 94000000 		.4byte	0x94
 4084 06c2 A5040000 		.4byte	.LLST45
 4085 06c6 12       		.uleb128 0x12
 4086 06c7 79040000 		.4byte	.LASF74
 4087 06cb 01       		.byte	0x1
 4088 06cc 9005     		.2byte	0x590
 4089 06ce 94000000 		.4byte	0x94
 4090 06d2 C3040000 		.4byte	.LLST46
 4091 06d6 00       		.byte	0x0
 4092 06d7 1E       		.uleb128 0x1e
 4093 06d8 01       		.byte	0x1
 4094 06d9 1E010000 		.4byte	.LASF75
 4095 06dd 01       		.byte	0x1
 4096 06de 6E02     		.2byte	0x26e
 4097 06e0 01       		.byte	0x1
 4098 06e1 D0050000 		.4byte	.LFB5
 4099 06e5 28060000 		.4byte	.LFE5
 4100 06e9 D6040000 		.4byte	.LLST47
 4101 06ed 20070000 		.4byte	0x720
 4102 06f1 11       		.uleb128 0x11
 4103 06f2 49060000 		.4byte	.LASF76
 4104 06f6 01       		.byte	0x1
 4105 06f7 6D02     		.2byte	0x26d
 4106 06f9 94000000 		.4byte	0x94
 4107 06fd F5040000 		.4byte	.LLST48
 4108 0701 12       		.uleb128 0x12
 4109 0702 79040000 		.4byte	.LASF74
 4110 0706 01       		.byte	0x1
 4111 0707 6F02     		.2byte	0x26f
 4112 0709 94000000 		.4byte	0x94
 4113 070d 1E050000 		.4byte	.LLST49
 4114 0711 20       		.uleb128 0x20
 4115 0712 99000000 		.4byte	.LASF60
 4116 0716 01       		.byte	0x1
 4117 0717 7002     		.2byte	0x270
 4118 0719 33000000 		.4byte	0x33
 4119 071d 01       		.byte	0x1
 4120 071e 50       		.byte	0x50
 4121 071f 00       		.byte	0x0
 4122 0720 1E       		.uleb128 0x1e
 4123 0721 01       		.byte	0x1
 4124 0722 69040000 		.4byte	.LASF77
 4125 0726 01       		.byte	0x1
 4126 0727 2102     		.2byte	0x221
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 107


 4127 0729 01       		.byte	0x1
 4128 072a 28060000 		.4byte	.LFB4
 4129 072e A8060000 		.4byte	.LFE4
 4130 0732 31050000 		.4byte	.LLST50
 4131 0736 89070000 		.4byte	0x789
 4132 073a 11       		.uleb128 0x11
 4133 073b FB030000 		.4byte	.LASF78
 4134 073f 01       		.byte	0x1
 4135 0740 2002     		.2byte	0x220
 4136 0742 89070000 		.4byte	0x789
 4137 0746 50050000 		.4byte	.LLST51
 4138 074a 11       		.uleb128 0x11
 4139 074b 57060000 		.4byte	.LASF79
 4140 074f 01       		.byte	0x1
 4141 0750 2002     		.2byte	0x220
 4142 0752 94000000 		.4byte	0x94
 4143 0756 79050000 		.4byte	.LLST52
 4144 075a 12       		.uleb128 0x12
 4145 075b 79040000 		.4byte	.LASF74
 4146 075f 01       		.byte	0x1
 4147 0760 2202     		.2byte	0x222
 4148 0762 94000000 		.4byte	0x94
 4149 0766 97050000 		.4byte	.LLST53
 4150 076a 20       		.uleb128 0x20
 4151 076b 99000000 		.4byte	.LASF60
 4152 076f 01       		.byte	0x1
 4153 0770 2302     		.2byte	0x223
 4154 0772 33000000 		.4byte	0x33
 4155 0776 01       		.byte	0x1
 4156 0777 50       		.byte	0x50
 4157 0778 12       		.uleb128 0x12
 4158 0779 1E050000 		.4byte	.LASF80
 4159 077d 01       		.byte	0x1
 4160 077e 2302     		.2byte	0x223
 4161 0780 33000000 		.4byte	0x33
 4162 0784 AA050000 		.4byte	.LLST54
 4163 0788 00       		.byte	0x0
 4164 0789 14       		.uleb128 0x14
 4165 078a 8E070000 		.4byte	0x78e
 4166 078e 07       		.uleb128 0x7
 4167 078f 04       		.byte	0x4
 4168 0790 94000000 		.4byte	0x94
 4169 0794 1D       		.uleb128 0x1d
 4170 0795 01       		.byte	0x1
 4171 0796 C2040000 		.4byte	.LASF81
 4172 079a 01       		.byte	0x1
 4173 079b EA03     		.2byte	0x3ea
 4174 079d 01       		.byte	0x1
 4175 079e A8060000 		.4byte	.LFB13
 4176 07a2 C0060000 		.4byte	.LFE13
 4177 07a6 DE050000 		.4byte	.LLST55
 4178 07aa 21       		.uleb128 0x21
 4179 07ab 2B050000 		.4byte	.LASF83
 4180 07af 01       		.byte	0x1
 4181 07b0 D306     		.2byte	0x6d3
 4182 07b2 01       		.byte	0x1
 4183 07b3 01       		.byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 108


 4184 07b4 D5070000 		.4byte	0x7d5
 4185 07b8 22       		.uleb128 0x22
 4186 07b9 13       		.uleb128 0x13
 4187 07ba D6000000 		.4byte	.LASF82
 4188 07be 01       		.byte	0x1
 4189 07bf D606     		.2byte	0x6d6
 4190 07c1 33000000 		.4byte	0x33
 4191 07c5 22       		.uleb128 0x22
 4192 07c6 13       		.uleb128 0x13
 4193 07c7 C6020000 		.4byte	.LASF51
 4194 07cb 01       		.byte	0x1
 4195 07cc E206     		.2byte	0x6e2
 4196 07ce 1C040000 		.4byte	0x41c
 4197 07d2 00       		.byte	0x0
 4198 07d3 00       		.byte	0x0
 4199 07d4 00       		.byte	0x0
 4200 07d5 21       		.uleb128 0x21
 4201 07d6 1C030000 		.4byte	.LASF84
 4202 07da 01       		.byte	0x1
 4203 07db 5B07     		.2byte	0x75b
 4204 07dd 01       		.byte	0x1
 4205 07de 01       		.byte	0x1
 4206 07df F0070000 		.4byte	0x7f0
 4207 07e3 18       		.uleb128 0x18
 4208 07e4 C6020000 		.4byte	.LASF51
 4209 07e8 01       		.byte	0x1
 4210 07e9 5A07     		.2byte	0x75a
 4211 07eb 1C040000 		.4byte	0x41c
 4212 07ef 00       		.byte	0x0
 4213 07f0 23       		.uleb128 0x23
 4214 07f1 42030000 		.4byte	.LASF120
 4215 07f5 01       		.byte	0x1
 4216 07f6 4606     		.2byte	0x646
 4217 07f8 01       		.byte	0x1
 4218 07f9 C0060000 		.4byte	.LFB25
 4219 07fd 34070000 		.4byte	.LFE25
 4220 0801 FD050000 		.4byte	.LLST56
 4221 0805 63080000 		.4byte	0x863
 4222 0809 11       		.uleb128 0x11
 4223 080a 88020000 		.4byte	.LASF86
 4224 080e 01       		.byte	0x1
 4225 080f 4506     		.2byte	0x645
 4226 0811 52000000 		.4byte	0x52
 4227 0815 1C060000 		.4byte	.LLST57
 4228 0819 24       		.uleb128 0x24
 4229 081a AA070000 		.4byte	0x7aa
 4230 081e C2060000 		.4byte	.LBB12
 4231 0822 16070000 		.4byte	.LBE12
 4232 0826 01       		.byte	0x1
 4233 0827 4D06     		.2byte	0x64d
 4234 0829 16       		.uleb128 0x16
 4235 082a C2060000 		.4byte	.LBB14
 4236 082e 16070000 		.4byte	.LBE14
 4237 0832 25       		.uleb128 0x25
 4238 0833 B9070000 		.4byte	0x7b9
 4239 0837 16       		.uleb128 0x16
 4240 0838 DA060000 		.4byte	.LBB15
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 109


 4241 083c 16070000 		.4byte	.LBE15
 4242 0840 25       		.uleb128 0x25
 4243 0841 C6070000 		.4byte	0x7c6
 4244 0845 24       		.uleb128 0x24
 4245 0846 D5070000 		.4byte	0x7d5
 4246 084a 0A070000 		.4byte	.LBB16
 4247 084e 16070000 		.4byte	.LBE16
 4248 0852 01       		.byte	0x1
 4249 0853 ED06     		.2byte	0x6ed
 4250 0855 26       		.uleb128 0x26
 4251 0856 E3070000 		.4byte	0x7e3
 4252 085a 3A060000 		.4byte	.LLST58
 4253 085e 00       		.byte	0x0
 4254 085f 00       		.byte	0x0
 4255 0860 00       		.byte	0x0
 4256 0861 00       		.byte	0x0
 4257 0862 00       		.byte	0x0
 4258 0863 27       		.uleb128 0x27
 4259 0864 6F010000 		.4byte	.LASF121
 4260 0868 01       		.byte	0x1
 4261 0869 F606     		.2byte	0x6f6
 4262 086b 01       		.byte	0x1
 4263 086c 1C040000 		.4byte	0x41c
 4264 0870 01       		.byte	0x1
 4265 0871 8E080000 		.4byte	0x88e
 4266 0875 18       		.uleb128 0x18
 4267 0876 9E010000 		.4byte	.LASF87
 4268 087a 01       		.byte	0x1
 4269 087b F506     		.2byte	0x6f5
 4270 087d 62000000 		.4byte	0x62
 4271 0881 13       		.uleb128 0x13
 4272 0882 66010000 		.4byte	.LASF88
 4273 0886 01       		.byte	0x1
 4274 0887 F706     		.2byte	0x6f7
 4275 0889 1C040000 		.4byte	0x41c
 4276 088d 00       		.byte	0x0
 4277 088e 21       		.uleb128 0x21
 4278 088f 00000000 		.4byte	.LASF89
 4279 0893 01       		.byte	0x1
 4280 0894 8706     		.2byte	0x687
 4281 0896 01       		.byte	0x1
 4282 0897 01       		.byte	0x1
 4283 0898 C1080000 		.4byte	0x8c1
 4284 089c 18       		.uleb128 0x18
 4285 089d C6020000 		.4byte	.LASF51
 4286 08a1 01       		.byte	0x1
 4287 08a2 8606     		.2byte	0x686
 4288 08a4 1C040000 		.4byte	0x41c
 4289 08a8 18       		.uleb128 0x18
 4290 08a9 D3060000 		.4byte	.LASF90
 4291 08ad 01       		.byte	0x1
 4292 08ae 8606     		.2byte	0x686
 4293 08b0 C1080000 		.4byte	0x8c1
 4294 08b4 18       		.uleb128 0x18
 4295 08b5 B6060000 		.4byte	.LASF35
 4296 08b9 01       		.byte	0x1
 4297 08ba 8606     		.2byte	0x686
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 110


 4298 08bc 25000000 		.4byte	0x25
 4299 08c0 00       		.byte	0x0
 4300 08c1 14       		.uleb128 0x14
 4301 08c2 C6080000 		.4byte	0x8c6
 4302 08c6 07       		.uleb128 0x7
 4303 08c7 04       		.byte	0x4
 4304 08c8 CC080000 		.4byte	0x8cc
 4305 08cc 14       		.uleb128 0x14
 4306 08cd 70000000 		.4byte	0x70
 4307 08d1 21       		.uleb128 0x21
 4308 08d2 0E040000 		.4byte	.LASF91
 4309 08d6 01       		.byte	0x1
 4310 08d7 B306     		.2byte	0x6b3
 4311 08d9 01       		.byte	0x1
 4312 08da 01       		.byte	0x1
 4313 08db EC080000 		.4byte	0x8ec
 4314 08df 13       		.uleb128 0x13
 4315 08e0 B6060000 		.4byte	.LASF35
 4316 08e4 01       		.byte	0x1
 4317 08e5 B406     		.2byte	0x6b4
 4318 08e7 25000000 		.4byte	0x25
 4319 08eb 00       		.byte	0x0
 4320 08ec 1C       		.uleb128 0x1c
 4321 08ed 01       		.byte	0x1
 4322 08ee D0030000 		.4byte	.LASF92
 4323 08f2 01       		.byte	0x1
 4324 08f3 6601     		.2byte	0x166
 4325 08f5 01       		.byte	0x1
 4326 08f6 33000000 		.4byte	0x33
 4327 08fa 34070000 		.4byte	.LFB2
 4328 08fe AC080000 		.4byte	.LFE2
 4329 0902 63060000 		.4byte	.LLST59
 4330 0906 060A0000 		.4byte	0xa06
 4331 090a 11       		.uleb128 0x11
 4332 090b 86010000 		.4byte	.LASF93
 4333 090f 01       		.byte	0x1
 4334 0910 6501     		.2byte	0x165
 4335 0912 77000000 		.4byte	0x77
 4336 0916 8E060000 		.4byte	.LLST60
 4337 091a 11       		.uleb128 0x11
 4338 091b D3060000 		.4byte	.LASF90
 4339 091f 01       		.byte	0x1
 4340 0920 6501     		.2byte	0x165
 4341 0922 C1080000 		.4byte	0x8c1
 4342 0926 AD060000 		.4byte	.LLST61
 4343 092a 11       		.uleb128 0x11
 4344 092b 9E010000 		.4byte	.LASF87
 4345 092f 01       		.byte	0x1
 4346 0930 6501     		.2byte	0x165
 4347 0932 62000000 		.4byte	0x62
 4348 0936 CB060000 		.4byte	.LLST62
 4349 093a 11       		.uleb128 0x11
 4350 093b 88020000 		.4byte	.LASF86
 4351 093f 01       		.byte	0x1
 4352 0940 6501     		.2byte	0x165
 4353 0942 52000000 		.4byte	0x52
 4354 0946 F4060000 		.4byte	.LLST63
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 111


 4355 094a 11       		.uleb128 0x11
 4356 094b B6060000 		.4byte	.LASF35
 4357 094f 01       		.byte	0x1
 4358 0950 6501     		.2byte	0x165
 4359 0952 25000000 		.4byte	0x25
 4360 0956 13070000 		.4byte	.LLST64
 4361 095a 11       		.uleb128 0x11
 4362 095b 36020000 		.4byte	.LASF94
 4363 095f 01       		.byte	0x1
 4364 0960 6501     		.2byte	0x165
 4365 0962 060A0000 		.4byte	0xa06
 4366 0966 61070000 		.4byte	.LLST65
 4367 096a 12       		.uleb128 0x12
 4368 096b 1E020000 		.4byte	.LASF39
 4369 096f 01       		.byte	0x1
 4370 0970 6701     		.2byte	0x167
 4371 0972 33000000 		.4byte	0x33
 4372 0976 8D070000 		.4byte	.LLST66
 4373 097a 12       		.uleb128 0x12
 4374 097b 66010000 		.4byte	.LASF88
 4375 097f 01       		.byte	0x1
 4376 0980 6801     		.2byte	0x168
 4377 0982 1C040000 		.4byte	0x41c
 4378 0986 AB070000 		.4byte	.LLST67
 4379 098a 28       		.uleb128 0x28
 4380 098b 63080000 		.4byte	0x863
 4381 098f 00000000 		.4byte	.Ldebug_ranges0+0x0
 4382 0993 01       		.byte	0x1
 4383 0994 6C01     		.2byte	0x16c
 4384 0996 AB090000 		.4byte	0x9ab
 4385 099a 29       		.uleb128 0x29
 4386 099b 75080000 		.4byte	0x875
 4387 099f 2A       		.uleb128 0x2a
 4388 09a0 18000000 		.4byte	.Ldebug_ranges0+0x18
 4389 09a4 25       		.uleb128 0x25
 4390 09a5 81080000 		.4byte	0x881
 4391 09a9 00       		.byte	0x0
 4392 09aa 00       		.byte	0x0
 4393 09ab 16       		.uleb128 0x16
 4394 09ac 70070000 		.4byte	.LBB29
 4395 09b0 50080000 		.4byte	.LBE29
 4396 09b4 12       		.uleb128 0x12
 4397 09b5 7B020000 		.4byte	.LASF32
 4398 09b9 01       		.byte	0x1
 4399 09ba 7001     		.2byte	0x170
 4400 09bc 4B020000 		.4byte	0x24b
 4401 09c0 D4070000 		.4byte	.LLST68
 4402 09c4 28       		.uleb128 0x28
 4403 09c5 8E080000 		.4byte	0x88e
 4404 09c9 30000000 		.4byte	.Ldebug_ranges0+0x30
 4405 09cd 01       		.byte	0x1
 4406 09ce 7301     		.2byte	0x173
 4407 09d0 E4090000 		.4byte	0x9e4
 4408 09d4 29       		.uleb128 0x29
 4409 09d5 B4080000 		.4byte	0x8b4
 4410 09d9 29       		.uleb128 0x29
 4411 09da A8080000 		.4byte	0x8a8
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 112


 4412 09de 29       		.uleb128 0x29
 4413 09df 9C080000 		.4byte	0x89c
 4414 09e3 00       		.byte	0x0
 4415 09e4 24       		.uleb128 0x24
 4416 09e5 D1080000 		.4byte	0x8d1
 4417 09e9 D0070000 		.4byte	.LBB34
 4418 09ed 0C080000 		.4byte	.LBE34
 4419 09f1 01       		.byte	0x1
 4420 09f2 9B01     		.2byte	0x19b
 4421 09f4 16       		.uleb128 0x16
 4422 09f5 D0070000 		.4byte	.LBB35
 4423 09f9 0C080000 		.4byte	.LBE35
 4424 09fd 25       		.uleb128 0x25
 4425 09fe DF080000 		.4byte	0x8df
 4426 0a02 00       		.byte	0x0
 4427 0a03 00       		.byte	0x0
 4428 0a04 00       		.byte	0x0
 4429 0a05 00       		.byte	0x0
 4430 0a06 07       		.uleb128 0x7
 4431 0a07 04       		.byte	0x4
 4432 0a08 A5010000 		.4byte	0x1a5
 4433 0a0c 1E       		.uleb128 0x1e
 4434 0a0d 01       		.byte	0x1
 4435 0a0e CB010000 		.4byte	.LASF95
 4436 0a12 01       		.byte	0x1
 4437 0a13 C503     		.2byte	0x3c5
 4438 0a15 01       		.byte	0x1
 4439 0a16 AC080000 		.4byte	.LFB12
 4440 0a1a F0080000 		.4byte	.LFE12
 4441 0a1e E7070000 		.4byte	.LLST69
 4442 0a22 370A0000 		.4byte	0xa37
 4443 0a26 12       		.uleb128 0x12
 4444 0a27 1E020000 		.4byte	.LASF39
 4445 0a2b 01       		.byte	0x1
 4446 0a2c C603     		.2byte	0x3c6
 4447 0a2e 33000000 		.4byte	0x33
 4448 0a32 12080000 		.4byte	.LLST70
 4449 0a36 00       		.byte	0x0
 4450 0a37 1C       		.uleb128 0x1c
 4451 0a38 01       		.byte	0x1
 4452 0a39 A0050000 		.4byte	.LASF96
 4453 0a3d 01       		.byte	0x1
 4454 0a3e 0B06     		.2byte	0x60b
 4455 0a40 01       		.byte	0x1
 4456 0a41 33000000 		.4byte	0x33
 4457 0a45 F0080000 		.4byte	.LFB23
 4458 0a49 4C090000 		.4byte	.LFE23
 4459 0a4d 46080000 		.4byte	.LLST71
 4460 0a51 9C0A0000 		.4byte	0xa9c
 4461 0a55 11       		.uleb128 0x11
 4462 0a56 A9000000 		.4byte	.LASF85
 4463 0a5a 01       		.byte	0x1
 4464 0a5b 0A06     		.2byte	0x60a
 4465 0a5d 1F030000 		.4byte	0x31f
 4466 0a61 65080000 		.4byte	.LLST72
 4467 0a65 11       		.uleb128 0x11
 4468 0a66 71060000 		.4byte	.LASF97
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 113


 4469 0a6a 01       		.byte	0x1
 4470 0a6b 0A06     		.2byte	0x60a
 4471 0a6d 89070000 		.4byte	0x789
 4472 0a71 8E080000 		.4byte	.LLST73
 4473 0a75 12       		.uleb128 0x12
 4474 0a76 1E020000 		.4byte	.LASF39
 4475 0a7a 01       		.byte	0x1
 4476 0a7b 0C06     		.2byte	0x60c
 4477 0a7d 33000000 		.4byte	0x33
 4478 0a81 AC080000 		.4byte	.LLST74
 4479 0a85 24       		.uleb128 0x24
 4480 0a86 03030000 		.4byte	0x303
 4481 0a8a 28090000 		.4byte	.LBB38
 4482 0a8e 36090000 		.4byte	.LBE38
 4483 0a92 01       		.byte	0x1
 4484 0a93 2706     		.2byte	0x627
 4485 0a95 29       		.uleb128 0x29
 4486 0a96 3D030000 		.4byte	0x33d
 4487 0a9a 00       		.byte	0x0
 4488 0a9b 00       		.byte	0x0
 4489 0a9c 0E       		.uleb128 0xe
 4490 0a9d 9A010000 		.4byte	0x19a
 4491 0aa1 AC0A0000 		.4byte	0xaac
 4492 0aa5 0F       		.uleb128 0xf
 4493 0aa6 48000000 		.4byte	0x48
 4494 0aaa 04       		.byte	0x4
 4495 0aab 00       		.byte	0x0
 4496 0aac 2B       		.uleb128 0x2b
 4497 0aad BC050000 		.4byte	.LASF98
 4498 0ab1 01       		.byte	0x1
 4499 0ab2 71       		.byte	0x71
 4500 0ab3 9C0A0000 		.4byte	0xa9c
 4501 0ab7 05       		.byte	0x5
 4502 0ab8 03       		.byte	0x3
 4503 0ab9 2C000000 		.4byte	pxReadyTasksLists
 4504 0abd 2B       		.uleb128 0x2b
 4505 0abe E5050000 		.4byte	.LASF99
 4506 0ac2 01       		.byte	0x1
 4507 0ac3 72       		.byte	0x72
 4508 0ac4 9A010000 		.4byte	0x19a
 4509 0ac8 05       		.byte	0x5
 4510 0ac9 03       		.byte	0x3
 4511 0aca 90000000 		.4byte	xDelayedTaskList1
 4512 0ace 2B       		.uleb128 0x2b
 4513 0acf F7050000 		.4byte	.LASF100
 4514 0ad3 01       		.byte	0x1
 4515 0ad4 73       		.byte	0x73
 4516 0ad5 9A010000 		.4byte	0x19a
 4517 0ad9 05       		.byte	0x5
 4518 0ada 03       		.byte	0x3
 4519 0adb A4000000 		.4byte	xDelayedTaskList2
 4520 0adf 2B       		.uleb128 0x2b
 4521 0ae0 C1060000 		.4byte	.LASF101
 4522 0ae4 01       		.byte	0x1
 4523 0ae5 74       		.byte	0x74
 4524 0ae6 F00A0000 		.4byte	0xaf0
 4525 0aea 05       		.byte	0x5
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 114


 4526 0aeb 03       		.byte	0x3
 4527 0aec B8000000 		.4byte	pxDelayedTaskList
 4528 0af0 0D       		.uleb128 0xd
 4529 0af1 FD020000 		.4byte	0x2fd
 4530 0af5 2B       		.uleb128 0x2b
 4531 0af6 95030000 		.4byte	.LASF102
 4532 0afa 01       		.byte	0x1
 4533 0afb 75       		.byte	0x75
 4534 0afc F00A0000 		.4byte	0xaf0
 4535 0b00 05       		.byte	0x5
 4536 0b01 03       		.byte	0x3
 4537 0b02 BC000000 		.4byte	pxOverflowDelayedTaskList
 4538 0b06 2B       		.uleb128 0x2b
 4539 0b07 BE030000 		.4byte	.LASF103
 4540 0b0b 01       		.byte	0x1
 4541 0b0c 76       		.byte	0x76
 4542 0b0d 9A010000 		.4byte	0x19a
 4543 0b11 05       		.byte	0x5
 4544 0b12 03       		.byte	0x3
 4545 0b13 C0000000 		.4byte	xPendingReadyList
 4546 0b17 2B       		.uleb128 0x2b
 4547 0b18 51050000 		.4byte	.LASF104
 4548 0b1c 01       		.byte	0x1
 4549 0b1d 7A       		.byte	0x7a
 4550 0b1e 280B0000 		.4byte	0xb28
 4551 0b22 05       		.byte	0x5
 4552 0b23 03       		.byte	0x3
 4553 0b24 D4000000 		.4byte	xTasksWaitingTermination
 4554 0b28 0D       		.uleb128 0xd
 4555 0b29 9A010000 		.4byte	0x19a
 4556 0b2d 2B       		.uleb128 0x2b
 4557 0b2e 60000000 		.4byte	.LASF105
 4558 0b32 01       		.byte	0x1
 4559 0b33 7B       		.byte	0x7b
 4560 0b34 85010000 		.4byte	0x185
 4561 0b38 05       		.byte	0x5
 4562 0b39 03       		.byte	0x3
 4563 0b3a 24000000 		.4byte	uxTasksDeleted
 4564 0b3e 2B       		.uleb128 0x2b
 4565 0b3f 6F000000 		.4byte	.LASF106
 4566 0b43 01       		.byte	0x1
 4567 0b44 81       		.byte	0x81
 4568 0b45 9A010000 		.4byte	0x19a
 4569 0b49 05       		.byte	0x5
 4570 0b4a 03       		.byte	0x3
 4571 0b4b E8000000 		.4byte	xSuspendedTaskList
 4572 0b4f 2B       		.uleb128 0x2b
 4573 0b50 3D000000 		.4byte	.LASF107
 4574 0b54 01       		.byte	0x1
 4575 0b55 86       		.byte	0x86
 4576 0b56 85010000 		.4byte	0x185
 4577 0b5a 05       		.byte	0x5
 4578 0b5b 03       		.byte	0x3
 4579 0b5c 1C000000 		.4byte	uxCurrentNumberOfTasks
 4580 0b60 2B       		.uleb128 0x2b
 4581 0b61 95020000 		.4byte	.LASF108
 4582 0b65 01       		.byte	0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 115


 4583 0b66 87       		.byte	0x87
 4584 0b67 710B0000 		.4byte	0xb71
 4585 0b6b 05       		.byte	0x5
 4586 0b6c 03       		.byte	0x3
 4587 0b6d 0C000000 		.4byte	xTickCount
 4588 0b71 0D       		.uleb128 0xd
 4589 0b72 94000000 		.4byte	0x94
 4590 0b76 2B       		.uleb128 0x2b
 4591 0b77 83030000 		.4byte	.LASF109
 4592 0b7b 01       		.byte	0x1
 4593 0b7c 88       		.byte	0x88
 4594 0b7d 25000000 		.4byte	0x25
 4595 0b81 05       		.byte	0x5
 4596 0b82 03       		.byte	0x3
 4597 0b83 28000000 		.4byte	uxTopUsedPriority
 4598 0b87 2B       		.uleb128 0x2b
 4599 0b88 98060000 		.4byte	.LASF110
 4600 0b8c 01       		.byte	0x1
 4601 0b8d 89       		.byte	0x89
 4602 0b8e 85010000 		.4byte	0x185
 4603 0b92 05       		.byte	0x5
 4604 0b93 03       		.byte	0x3
 4605 0b94 14000000 		.4byte	uxTopReadyPriority
 4606 0b98 2B       		.uleb128 0x2b
 4607 0b99 B0040000 		.4byte	.LASF111
 4608 0b9d 01       		.byte	0x1
 4609 0b9e 8A       		.byte	0x8a
 4610 0b9f A90B0000 		.4byte	0xba9
 4611 0ba3 05       		.byte	0x5
 4612 0ba4 03       		.byte	0x3
 4613 0ba5 20000000 		.4byte	xSchedulerRunning
 4614 0ba9 0D       		.uleb128 0xd
 4615 0baa 33000000 		.4byte	0x33
 4616 0bae 2B       		.uleb128 0x2b
 4617 0baf FC010000 		.4byte	.LASF112
 4618 0bb3 01       		.byte	0x1
 4619 0bb4 8B       		.byte	0x8b
 4620 0bb5 85010000 		.4byte	0x185
 4621 0bb9 05       		.byte	0x5
 4622 0bba 03       		.byte	0x3
 4623 0bbb 10000000 		.4byte	uxSchedulerSuspended
 4624 0bbf 2B       		.uleb128 0x2b
 4625 0bc0 3B060000 		.4byte	.LASF113
 4626 0bc4 01       		.byte	0x1
 4627 0bc5 8C       		.byte	0x8c
 4628 0bc6 85010000 		.4byte	0x185
 4629 0bca 05       		.byte	0x5
 4630 0bcb 03       		.byte	0x3
 4631 0bcc 18000000 		.4byte	uxMissedTicks
 4632 0bd0 2B       		.uleb128 0x2b
 4633 0bd1 29030000 		.4byte	.LASF114
 4634 0bd5 01       		.byte	0x1
 4635 0bd6 8D       		.byte	0x8d
 4636 0bd7 A90B0000 		.4byte	0xba9
 4637 0bdb 05       		.byte	0x5
 4638 0bdc 03       		.byte	0x3
 4639 0bdd 04000000 		.4byte	xMissedYield
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 116


 4640 0be1 2B       		.uleb128 0x2b
 4641 0be2 09060000 		.4byte	.LASF115
 4642 0be6 01       		.byte	0x1
 4643 0be7 8E       		.byte	0x8e
 4644 0be8 A90B0000 		.4byte	0xba9
 4645 0bec 05       		.byte	0x5
 4646 0bed 03       		.byte	0x3
 4647 0bee 08000000 		.4byte	xNumOfOverflows
 4648 0bf2 2C       		.uleb128 0x2c
 4649 0bf3 F4020000 		.4byte	.LASF122
 4650 0bf7 01       		.byte	0x1
 4651 0bf8 6D       		.byte	0x6d
 4652 0bf9 040C0000 		.4byte	0xc04
 4653 0bfd 01       		.byte	0x1
 4654 0bfe 05       		.byte	0x5
 4655 0bff 03       		.byte	0x3
 4656 0c00 00000000 		.4byte	pxCurrentTCB
 4657 0c04 0D       		.uleb128 0xd
 4658 0c05 1C040000 		.4byte	0x41c
 4659 0c09 00       		.byte	0x0
 4660              		.section	.debug_abbrev
 4661 0000 01       		.uleb128 0x1
 4662 0001 11       		.uleb128 0x11
 4663 0002 01       		.byte	0x1
 4664 0003 25       		.uleb128 0x25
 4665 0004 0E       		.uleb128 0xe
 4666 0005 13       		.uleb128 0x13
 4667 0006 0B       		.uleb128 0xb
 4668 0007 03       		.uleb128 0x3
 4669 0008 0E       		.uleb128 0xe
 4670 0009 1B       		.uleb128 0x1b
 4671 000a 0E       		.uleb128 0xe
 4672 000b 11       		.uleb128 0x11
 4673 000c 01       		.uleb128 0x1
 4674 000d 12       		.uleb128 0x12
 4675 000e 01       		.uleb128 0x1
 4676 000f 10       		.uleb128 0x10
 4677 0010 06       		.uleb128 0x6
 4678 0011 00       		.byte	0x0
 4679 0012 00       		.byte	0x0
 4680 0013 02       		.uleb128 0x2
 4681 0014 24       		.uleb128 0x24
 4682 0015 00       		.byte	0x0
 4683 0016 0B       		.uleb128 0xb
 4684 0017 0B       		.uleb128 0xb
 4685 0018 3E       		.uleb128 0x3e
 4686 0019 0B       		.uleb128 0xb
 4687 001a 03       		.uleb128 0x3
 4688 001b 0E       		.uleb128 0xe
 4689 001c 00       		.byte	0x0
 4690 001d 00       		.byte	0x0
 4691 001e 03       		.uleb128 0x3
 4692 001f 24       		.uleb128 0x24
 4693 0020 00       		.byte	0x0
 4694 0021 0B       		.uleb128 0xb
 4695 0022 0B       		.uleb128 0xb
 4696 0023 3E       		.uleb128 0x3e
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 117


 4697 0024 0B       		.uleb128 0xb
 4698 0025 03       		.uleb128 0x3
 4699 0026 08       		.uleb128 0x8
 4700 0027 00       		.byte	0x0
 4701 0028 00       		.byte	0x0
 4702 0029 04       		.uleb128 0x4
 4703 002a 24       		.uleb128 0x24
 4704 002b 00       		.byte	0x0
 4705 002c 0B       		.uleb128 0xb
 4706 002d 0B       		.uleb128 0xb
 4707 002e 3E       		.uleb128 0x3e
 4708 002f 0B       		.uleb128 0xb
 4709 0030 00       		.byte	0x0
 4710 0031 00       		.byte	0x0
 4711 0032 05       		.uleb128 0x5
 4712 0033 0F       		.uleb128 0xf
 4713 0034 00       		.byte	0x0
 4714 0035 0B       		.uleb128 0xb
 4715 0036 0B       		.uleb128 0xb
 4716 0037 00       		.byte	0x0
 4717 0038 00       		.byte	0x0
 4718 0039 06       		.uleb128 0x6
 4719 003a 16       		.uleb128 0x16
 4720 003b 00       		.byte	0x0
 4721 003c 03       		.uleb128 0x3
 4722 003d 0E       		.uleb128 0xe
 4723 003e 3A       		.uleb128 0x3a
 4724 003f 0B       		.uleb128 0xb
 4725 0040 3B       		.uleb128 0x3b
 4726 0041 0B       		.uleb128 0xb
 4727 0042 49       		.uleb128 0x49
 4728 0043 13       		.uleb128 0x13
 4729 0044 00       		.byte	0x0
 4730 0045 00       		.byte	0x0
 4731 0046 07       		.uleb128 0x7
 4732 0047 0F       		.uleb128 0xf
 4733 0048 00       		.byte	0x0
 4734 0049 0B       		.uleb128 0xb
 4735 004a 0B       		.uleb128 0xb
 4736 004b 49       		.uleb128 0x49
 4737 004c 13       		.uleb128 0x13
 4738 004d 00       		.byte	0x0
 4739 004e 00       		.byte	0x0
 4740 004f 08       		.uleb128 0x8
 4741 0050 15       		.uleb128 0x15
 4742 0051 01       		.byte	0x1
 4743 0052 27       		.uleb128 0x27
 4744 0053 0C       		.uleb128 0xc
 4745 0054 01       		.uleb128 0x1
 4746 0055 13       		.uleb128 0x13
 4747 0056 00       		.byte	0x0
 4748 0057 00       		.byte	0x0
 4749 0058 09       		.uleb128 0x9
 4750 0059 05       		.uleb128 0x5
 4751 005a 00       		.byte	0x0
 4752 005b 49       		.uleb128 0x49
 4753 005c 13       		.uleb128 0x13
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 118


 4754 005d 00       		.byte	0x0
 4755 005e 00       		.byte	0x0
 4756 005f 0A       		.uleb128 0xa
 4757 0060 13       		.uleb128 0x13
 4758 0061 01       		.byte	0x1
 4759 0062 03       		.uleb128 0x3
 4760 0063 0E       		.uleb128 0xe
 4761 0064 0B       		.uleb128 0xb
 4762 0065 0B       		.uleb128 0xb
 4763 0066 3A       		.uleb128 0x3a
 4764 0067 0B       		.uleb128 0xb
 4765 0068 3B       		.uleb128 0x3b
 4766 0069 0B       		.uleb128 0xb
 4767 006a 01       		.uleb128 0x1
 4768 006b 13       		.uleb128 0x13
 4769 006c 00       		.byte	0x0
 4770 006d 00       		.byte	0x0
 4771 006e 0B       		.uleb128 0xb
 4772 006f 0D       		.uleb128 0xd
 4773 0070 00       		.byte	0x0
 4774 0071 03       		.uleb128 0x3
 4775 0072 0E       		.uleb128 0xe
 4776 0073 3A       		.uleb128 0x3a
 4777 0074 0B       		.uleb128 0xb
 4778 0075 3B       		.uleb128 0x3b
 4779 0076 0B       		.uleb128 0xb
 4780 0077 49       		.uleb128 0x49
 4781 0078 13       		.uleb128 0x13
 4782 0079 38       		.uleb128 0x38
 4783 007a 0A       		.uleb128 0xa
 4784 007b 00       		.byte	0x0
 4785 007c 00       		.byte	0x0
 4786 007d 0C       		.uleb128 0xc
 4787 007e 35       		.uleb128 0x35
 4788 007f 00       		.byte	0x0
 4789 0080 03       		.uleb128 0x3
 4790 0081 0E       		.uleb128 0xe
 4791 0082 49       		.uleb128 0x49
 4792 0083 13       		.uleb128 0x13
 4793 0084 00       		.byte	0x0
 4794 0085 00       		.byte	0x0
 4795 0086 0D       		.uleb128 0xd
 4796 0087 35       		.uleb128 0x35
 4797 0088 00       		.byte	0x0
 4798 0089 49       		.uleb128 0x49
 4799 008a 13       		.uleb128 0x13
 4800 008b 00       		.byte	0x0
 4801 008c 00       		.byte	0x0
 4802 008d 0E       		.uleb128 0xe
 4803 008e 01       		.uleb128 0x1
 4804 008f 01       		.byte	0x1
 4805 0090 49       		.uleb128 0x49
 4806 0091 13       		.uleb128 0x13
 4807 0092 01       		.uleb128 0x1
 4808 0093 13       		.uleb128 0x13
 4809 0094 00       		.byte	0x0
 4810 0095 00       		.byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 119


 4811 0096 0F       		.uleb128 0xf
 4812 0097 21       		.uleb128 0x21
 4813 0098 00       		.byte	0x0
 4814 0099 49       		.uleb128 0x49
 4815 009a 13       		.uleb128 0x13
 4816 009b 2F       		.uleb128 0x2f
 4817 009c 0B       		.uleb128 0xb
 4818 009d 00       		.byte	0x0
 4819 009e 00       		.byte	0x0
 4820 009f 10       		.uleb128 0x10
 4821 00a0 2E       		.uleb128 0x2e
 4822 00a1 01       		.byte	0x1
 4823 00a2 3F       		.uleb128 0x3f
 4824 00a3 0C       		.uleb128 0xc
 4825 00a4 03       		.uleb128 0x3
 4826 00a5 0E       		.uleb128 0xe
 4827 00a6 3A       		.uleb128 0x3a
 4828 00a7 0B       		.uleb128 0xb
 4829 00a8 3B       		.uleb128 0x3b
 4830 00a9 05       		.uleb128 0x5
 4831 00aa 27       		.uleb128 0x27
 4832 00ab 0C       		.uleb128 0xc
 4833 00ac 49       		.uleb128 0x49
 4834 00ad 13       		.uleb128 0x13
 4835 00ae 11       		.uleb128 0x11
 4836 00af 01       		.uleb128 0x1
 4837 00b0 12       		.uleb128 0x12
 4838 00b1 01       		.uleb128 0x1
 4839 00b2 40       		.uleb128 0x40
 4840 00b3 0A       		.uleb128 0xa
 4841 00b4 01       		.uleb128 0x1
 4842 00b5 13       		.uleb128 0x13
 4843 00b6 00       		.byte	0x0
 4844 00b7 00       		.byte	0x0
 4845 00b8 11       		.uleb128 0x11
 4846 00b9 05       		.uleb128 0x5
 4847 00ba 00       		.byte	0x0
 4848 00bb 03       		.uleb128 0x3
 4849 00bc 0E       		.uleb128 0xe
 4850 00bd 3A       		.uleb128 0x3a
 4851 00be 0B       		.uleb128 0xb
 4852 00bf 3B       		.uleb128 0x3b
 4853 00c0 05       		.uleb128 0x5
 4854 00c1 49       		.uleb128 0x49
 4855 00c2 13       		.uleb128 0x13
 4856 00c3 02       		.uleb128 0x2
 4857 00c4 06       		.uleb128 0x6
 4858 00c5 00       		.byte	0x0
 4859 00c6 00       		.byte	0x0
 4860 00c7 12       		.uleb128 0x12
 4861 00c8 34       		.uleb128 0x34
 4862 00c9 00       		.byte	0x0
 4863 00ca 03       		.uleb128 0x3
 4864 00cb 0E       		.uleb128 0xe
 4865 00cc 3A       		.uleb128 0x3a
 4866 00cd 0B       		.uleb128 0xb
 4867 00ce 3B       		.uleb128 0x3b
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 120


 4868 00cf 05       		.uleb128 0x5
 4869 00d0 49       		.uleb128 0x49
 4870 00d1 13       		.uleb128 0x13
 4871 00d2 02       		.uleb128 0x2
 4872 00d3 06       		.uleb128 0x6
 4873 00d4 00       		.byte	0x0
 4874 00d5 00       		.byte	0x0
 4875 00d6 13       		.uleb128 0x13
 4876 00d7 34       		.uleb128 0x34
 4877 00d8 00       		.byte	0x0
 4878 00d9 03       		.uleb128 0x3
 4879 00da 0E       		.uleb128 0xe
 4880 00db 3A       		.uleb128 0x3a
 4881 00dc 0B       		.uleb128 0xb
 4882 00dd 3B       		.uleb128 0x3b
 4883 00de 05       		.uleb128 0x5
 4884 00df 49       		.uleb128 0x49
 4885 00e0 13       		.uleb128 0x13
 4886 00e1 00       		.byte	0x0
 4887 00e2 00       		.byte	0x0
 4888 00e3 14       		.uleb128 0x14
 4889 00e4 26       		.uleb128 0x26
 4890 00e5 00       		.byte	0x0
 4891 00e6 49       		.uleb128 0x49
 4892 00e7 13       		.uleb128 0x13
 4893 00e8 00       		.byte	0x0
 4894 00e9 00       		.byte	0x0
 4895 00ea 15       		.uleb128 0x15
 4896 00eb 2E       		.uleb128 0x2e
 4897 00ec 01       		.byte	0x1
 4898 00ed 3F       		.uleb128 0x3f
 4899 00ee 0C       		.uleb128 0xc
 4900 00ef 03       		.uleb128 0x3
 4901 00f0 0E       		.uleb128 0xe
 4902 00f1 3A       		.uleb128 0x3a
 4903 00f2 0B       		.uleb128 0xb
 4904 00f3 3B       		.uleb128 0x3b
 4905 00f4 05       		.uleb128 0x5
 4906 00f5 27       		.uleb128 0x27
 4907 00f6 0C       		.uleb128 0xc
 4908 00f7 11       		.uleb128 0x11
 4909 00f8 01       		.uleb128 0x1
 4910 00f9 12       		.uleb128 0x12
 4911 00fa 01       		.uleb128 0x1
 4912 00fb 40       		.uleb128 0x40
 4913 00fc 0A       		.uleb128 0xa
 4914 00fd 01       		.uleb128 0x1
 4915 00fe 13       		.uleb128 0x13
 4916 00ff 00       		.byte	0x0
 4917 0100 00       		.byte	0x0
 4918 0101 16       		.uleb128 0x16
 4919 0102 0B       		.uleb128 0xb
 4920 0103 01       		.byte	0x1
 4921 0104 11       		.uleb128 0x11
 4922 0105 01       		.uleb128 0x1
 4923 0106 12       		.uleb128 0x12
 4924 0107 01       		.uleb128 0x1
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 121


 4925 0108 00       		.byte	0x0
 4926 0109 00       		.byte	0x0
 4927 010a 17       		.uleb128 0x17
 4928 010b 2E       		.uleb128 0x2e
 4929 010c 01       		.byte	0x1
 4930 010d 3F       		.uleb128 0x3f
 4931 010e 0C       		.uleb128 0xc
 4932 010f 03       		.uleb128 0x3
 4933 0110 0E       		.uleb128 0xe
 4934 0111 3A       		.uleb128 0x3a
 4935 0112 0B       		.uleb128 0xb
 4936 0113 3B       		.uleb128 0x3b
 4937 0114 05       		.uleb128 0x5
 4938 0115 27       		.uleb128 0x27
 4939 0116 0C       		.uleb128 0xc
 4940 0117 20       		.uleb128 0x20
 4941 0118 0B       		.uleb128 0xb
 4942 0119 01       		.uleb128 0x1
 4943 011a 13       		.uleb128 0x13
 4944 011b 00       		.byte	0x0
 4945 011c 00       		.byte	0x0
 4946 011d 18       		.uleb128 0x18
 4947 011e 05       		.uleb128 0x5
 4948 011f 00       		.byte	0x0
 4949 0120 03       		.uleb128 0x3
 4950 0121 0E       		.uleb128 0xe
 4951 0122 3A       		.uleb128 0x3a
 4952 0123 0B       		.uleb128 0xb
 4953 0124 3B       		.uleb128 0x3b
 4954 0125 05       		.uleb128 0x5
 4955 0126 49       		.uleb128 0x49
 4956 0127 13       		.uleb128 0x13
 4957 0128 00       		.byte	0x0
 4958 0129 00       		.byte	0x0
 4959 012a 19       		.uleb128 0x19
 4960 012b 2E       		.uleb128 0x2e
 4961 012c 01       		.byte	0x1
 4962 012d 31       		.uleb128 0x31
 4963 012e 13       		.uleb128 0x13
 4964 012f 11       		.uleb128 0x11
 4965 0130 01       		.uleb128 0x1
 4966 0131 12       		.uleb128 0x12
 4967 0132 01       		.uleb128 0x1
 4968 0133 40       		.uleb128 0x40
 4969 0134 0A       		.uleb128 0xa
 4970 0135 01       		.uleb128 0x1
 4971 0136 13       		.uleb128 0x13
 4972 0137 00       		.byte	0x0
 4973 0138 00       		.byte	0x0
 4974 0139 1A       		.uleb128 0x1a
 4975 013a 05       		.uleb128 0x5
 4976 013b 00       		.byte	0x0
 4977 013c 31       		.uleb128 0x31
 4978 013d 13       		.uleb128 0x13
 4979 013e 02       		.uleb128 0x2
 4980 013f 0A       		.uleb128 0xa
 4981 0140 00       		.byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 122


 4982 0141 00       		.byte	0x0
 4983 0142 1B       		.uleb128 0x1b
 4984 0143 2E       		.uleb128 0x2e
 4985 0144 00       		.byte	0x0
 4986 0145 3F       		.uleb128 0x3f
 4987 0146 0C       		.uleb128 0xc
 4988 0147 03       		.uleb128 0x3
 4989 0148 0E       		.uleb128 0xe
 4990 0149 3A       		.uleb128 0x3a
 4991 014a 0B       		.uleb128 0xb
 4992 014b 3B       		.uleb128 0x3b
 4993 014c 05       		.uleb128 0x5
 4994 014d 27       		.uleb128 0x27
 4995 014e 0C       		.uleb128 0xc
 4996 014f 11       		.uleb128 0x11
 4997 0150 01       		.uleb128 0x1
 4998 0151 12       		.uleb128 0x12
 4999 0152 01       		.uleb128 0x1
 5000 0153 40       		.uleb128 0x40
 5001 0154 0A       		.uleb128 0xa
 5002 0155 00       		.byte	0x0
 5003 0156 00       		.byte	0x0
 5004 0157 1C       		.uleb128 0x1c
 5005 0158 2E       		.uleb128 0x2e
 5006 0159 01       		.byte	0x1
 5007 015a 3F       		.uleb128 0x3f
 5008 015b 0C       		.uleb128 0xc
 5009 015c 03       		.uleb128 0x3
 5010 015d 0E       		.uleb128 0xe
 5011 015e 3A       		.uleb128 0x3a
 5012 015f 0B       		.uleb128 0xb
 5013 0160 3B       		.uleb128 0x3b
 5014 0161 05       		.uleb128 0x5
 5015 0162 27       		.uleb128 0x27
 5016 0163 0C       		.uleb128 0xc
 5017 0164 49       		.uleb128 0x49
 5018 0165 13       		.uleb128 0x13
 5019 0166 11       		.uleb128 0x11
 5020 0167 01       		.uleb128 0x1
 5021 0168 12       		.uleb128 0x12
 5022 0169 01       		.uleb128 0x1
 5023 016a 40       		.uleb128 0x40
 5024 016b 06       		.uleb128 0x6
 5025 016c 01       		.uleb128 0x1
 5026 016d 13       		.uleb128 0x13
 5027 016e 00       		.byte	0x0
 5028 016f 00       		.byte	0x0
 5029 0170 1D       		.uleb128 0x1d
 5030 0171 2E       		.uleb128 0x2e
 5031 0172 00       		.byte	0x0
 5032 0173 3F       		.uleb128 0x3f
 5033 0174 0C       		.uleb128 0xc
 5034 0175 03       		.uleb128 0x3
 5035 0176 0E       		.uleb128 0xe
 5036 0177 3A       		.uleb128 0x3a
 5037 0178 0B       		.uleb128 0xb
 5038 0179 3B       		.uleb128 0x3b
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 123


 5039 017a 05       		.uleb128 0x5
 5040 017b 27       		.uleb128 0x27
 5041 017c 0C       		.uleb128 0xc
 5042 017d 11       		.uleb128 0x11
 5043 017e 01       		.uleb128 0x1
 5044 017f 12       		.uleb128 0x12
 5045 0180 01       		.uleb128 0x1
 5046 0181 40       		.uleb128 0x40
 5047 0182 06       		.uleb128 0x6
 5048 0183 00       		.byte	0x0
 5049 0184 00       		.byte	0x0
 5050 0185 1E       		.uleb128 0x1e
 5051 0186 2E       		.uleb128 0x2e
 5052 0187 01       		.byte	0x1
 5053 0188 3F       		.uleb128 0x3f
 5054 0189 0C       		.uleb128 0xc
 5055 018a 03       		.uleb128 0x3
 5056 018b 0E       		.uleb128 0xe
 5057 018c 3A       		.uleb128 0x3a
 5058 018d 0B       		.uleb128 0xb
 5059 018e 3B       		.uleb128 0x3b
 5060 018f 05       		.uleb128 0x5
 5061 0190 27       		.uleb128 0x27
 5062 0191 0C       		.uleb128 0xc
 5063 0192 11       		.uleb128 0x11
 5064 0193 01       		.uleb128 0x1
 5065 0194 12       		.uleb128 0x12
 5066 0195 01       		.uleb128 0x1
 5067 0196 40       		.uleb128 0x40
 5068 0197 06       		.uleb128 0x6
 5069 0198 01       		.uleb128 0x1
 5070 0199 13       		.uleb128 0x13
 5071 019a 00       		.byte	0x0
 5072 019b 00       		.byte	0x0
 5073 019c 1F       		.uleb128 0x1f
 5074 019d 0B       		.uleb128 0xb
 5075 019e 01       		.byte	0x1
 5076 019f 11       		.uleb128 0x11
 5077 01a0 01       		.uleb128 0x1
 5078 01a1 12       		.uleb128 0x12
 5079 01a2 01       		.uleb128 0x1
 5080 01a3 01       		.uleb128 0x1
 5081 01a4 13       		.uleb128 0x13
 5082 01a5 00       		.byte	0x0
 5083 01a6 00       		.byte	0x0
 5084 01a7 20       		.uleb128 0x20
 5085 01a8 34       		.uleb128 0x34
 5086 01a9 00       		.byte	0x0
 5087 01aa 03       		.uleb128 0x3
 5088 01ab 0E       		.uleb128 0xe
 5089 01ac 3A       		.uleb128 0x3a
 5090 01ad 0B       		.uleb128 0xb
 5091 01ae 3B       		.uleb128 0x3b
 5092 01af 05       		.uleb128 0x5
 5093 01b0 49       		.uleb128 0x49
 5094 01b1 13       		.uleb128 0x13
 5095 01b2 02       		.uleb128 0x2
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 124


 5096 01b3 0A       		.uleb128 0xa
 5097 01b4 00       		.byte	0x0
 5098 01b5 00       		.byte	0x0
 5099 01b6 21       		.uleb128 0x21
 5100 01b7 2E       		.uleb128 0x2e
 5101 01b8 01       		.byte	0x1
 5102 01b9 03       		.uleb128 0x3
 5103 01ba 0E       		.uleb128 0xe
 5104 01bb 3A       		.uleb128 0x3a
 5105 01bc 0B       		.uleb128 0xb
 5106 01bd 3B       		.uleb128 0x3b
 5107 01be 05       		.uleb128 0x5
 5108 01bf 27       		.uleb128 0x27
 5109 01c0 0C       		.uleb128 0xc
 5110 01c1 20       		.uleb128 0x20
 5111 01c2 0B       		.uleb128 0xb
 5112 01c3 01       		.uleb128 0x1
 5113 01c4 13       		.uleb128 0x13
 5114 01c5 00       		.byte	0x0
 5115 01c6 00       		.byte	0x0
 5116 01c7 22       		.uleb128 0x22
 5117 01c8 0B       		.uleb128 0xb
 5118 01c9 01       		.byte	0x1
 5119 01ca 00       		.byte	0x0
 5120 01cb 00       		.byte	0x0
 5121 01cc 23       		.uleb128 0x23
 5122 01cd 2E       		.uleb128 0x2e
 5123 01ce 01       		.byte	0x1
 5124 01cf 03       		.uleb128 0x3
 5125 01d0 0E       		.uleb128 0xe
 5126 01d1 3A       		.uleb128 0x3a
 5127 01d2 0B       		.uleb128 0xb
 5128 01d3 3B       		.uleb128 0x3b
 5129 01d4 05       		.uleb128 0x5
 5130 01d5 27       		.uleb128 0x27
 5131 01d6 0C       		.uleb128 0xc
 5132 01d7 11       		.uleb128 0x11
 5133 01d8 01       		.uleb128 0x1
 5134 01d9 12       		.uleb128 0x12
 5135 01da 01       		.uleb128 0x1
 5136 01db 40       		.uleb128 0x40
 5137 01dc 06       		.uleb128 0x6
 5138 01dd 01       		.uleb128 0x1
 5139 01de 13       		.uleb128 0x13
 5140 01df 00       		.byte	0x0
 5141 01e0 00       		.byte	0x0
 5142 01e1 24       		.uleb128 0x24
 5143 01e2 1D       		.uleb128 0x1d
 5144 01e3 01       		.byte	0x1
 5145 01e4 31       		.uleb128 0x31
 5146 01e5 13       		.uleb128 0x13
 5147 01e6 11       		.uleb128 0x11
 5148 01e7 01       		.uleb128 0x1
 5149 01e8 12       		.uleb128 0x12
 5150 01e9 01       		.uleb128 0x1
 5151 01ea 58       		.uleb128 0x58
 5152 01eb 0B       		.uleb128 0xb
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 125


 5153 01ec 59       		.uleb128 0x59
 5154 01ed 05       		.uleb128 0x5
 5155 01ee 00       		.byte	0x0
 5156 01ef 00       		.byte	0x0
 5157 01f0 25       		.uleb128 0x25
 5158 01f1 34       		.uleb128 0x34
 5159 01f2 00       		.byte	0x0
 5160 01f3 31       		.uleb128 0x31
 5161 01f4 13       		.uleb128 0x13
 5162 01f5 00       		.byte	0x0
 5163 01f6 00       		.byte	0x0
 5164 01f7 26       		.uleb128 0x26
 5165 01f8 05       		.uleb128 0x5
 5166 01f9 00       		.byte	0x0
 5167 01fa 31       		.uleb128 0x31
 5168 01fb 13       		.uleb128 0x13
 5169 01fc 02       		.uleb128 0x2
 5170 01fd 06       		.uleb128 0x6
 5171 01fe 00       		.byte	0x0
 5172 01ff 00       		.byte	0x0
 5173 0200 27       		.uleb128 0x27
 5174 0201 2E       		.uleb128 0x2e
 5175 0202 01       		.byte	0x1
 5176 0203 03       		.uleb128 0x3
 5177 0204 0E       		.uleb128 0xe
 5178 0205 3A       		.uleb128 0x3a
 5179 0206 0B       		.uleb128 0xb
 5180 0207 3B       		.uleb128 0x3b
 5181 0208 05       		.uleb128 0x5
 5182 0209 27       		.uleb128 0x27
 5183 020a 0C       		.uleb128 0xc
 5184 020b 49       		.uleb128 0x49
 5185 020c 13       		.uleb128 0x13
 5186 020d 20       		.uleb128 0x20
 5187 020e 0B       		.uleb128 0xb
 5188 020f 01       		.uleb128 0x1
 5189 0210 13       		.uleb128 0x13
 5190 0211 00       		.byte	0x0
 5191 0212 00       		.byte	0x0
 5192 0213 28       		.uleb128 0x28
 5193 0214 1D       		.uleb128 0x1d
 5194 0215 01       		.byte	0x1
 5195 0216 31       		.uleb128 0x31
 5196 0217 13       		.uleb128 0x13
 5197 0218 55       		.uleb128 0x55
 5198 0219 06       		.uleb128 0x6
 5199 021a 58       		.uleb128 0x58
 5200 021b 0B       		.uleb128 0xb
 5201 021c 59       		.uleb128 0x59
 5202 021d 05       		.uleb128 0x5
 5203 021e 01       		.uleb128 0x1
 5204 021f 13       		.uleb128 0x13
 5205 0220 00       		.byte	0x0
 5206 0221 00       		.byte	0x0
 5207 0222 29       		.uleb128 0x29
 5208 0223 05       		.uleb128 0x5
 5209 0224 00       		.byte	0x0
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 126


 5210 0225 31       		.uleb128 0x31
 5211 0226 13       		.uleb128 0x13
 5212 0227 00       		.byte	0x0
 5213 0228 00       		.byte	0x0
 5214 0229 2A       		.uleb128 0x2a
 5215 022a 0B       		.uleb128 0xb
 5216 022b 01       		.byte	0x1
 5217 022c 55       		.uleb128 0x55
 5218 022d 06       		.uleb128 0x6
 5219 022e 00       		.byte	0x0
 5220 022f 00       		.byte	0x0
 5221 0230 2B       		.uleb128 0x2b
 5222 0231 34       		.uleb128 0x34
 5223 0232 00       		.byte	0x0
 5224 0233 03       		.uleb128 0x3
 5225 0234 0E       		.uleb128 0xe
 5226 0235 3A       		.uleb128 0x3a
 5227 0236 0B       		.uleb128 0xb
 5228 0237 3B       		.uleb128 0x3b
 5229 0238 0B       		.uleb128 0xb
 5230 0239 49       		.uleb128 0x49
 5231 023a 13       		.uleb128 0x13
 5232 023b 02       		.uleb128 0x2
 5233 023c 0A       		.uleb128 0xa
 5234 023d 00       		.byte	0x0
 5235 023e 00       		.byte	0x0
 5236 023f 2C       		.uleb128 0x2c
 5237 0240 34       		.uleb128 0x34
 5238 0241 00       		.byte	0x0
 5239 0242 03       		.uleb128 0x3
 5240 0243 0E       		.uleb128 0xe
 5241 0244 3A       		.uleb128 0x3a
 5242 0245 0B       		.uleb128 0xb
 5243 0246 3B       		.uleb128 0x3b
 5244 0247 0B       		.uleb128 0xb
 5245 0248 49       		.uleb128 0x49
 5246 0249 13       		.uleb128 0x13
 5247 024a 3F       		.uleb128 0x3f
 5248 024b 0C       		.uleb128 0xc
 5249 024c 02       		.uleb128 0x2
 5250 024d 0A       		.uleb128 0xa
 5251 024e 00       		.byte	0x0
 5252 024f 00       		.byte	0x0
 5253 0250 00       		.byte	0x0
 5254              		.section	.debug_pubnames,"",%progbits
 5255 0000 10020000 		.4byte	0x210
 5256 0004 0200     		.2byte	0x2
 5257 0006 00000000 		.4byte	.Ldebug_info0
 5258 000a 0A0C0000 		.4byte	0xc0a
 5259 000e 6C020000 		.4byte	0x26c
 5260 0012 78546173 		.ascii	"xTaskIsTaskSuspended\000"
 5260      6B497354 
 5260      61736B53 
 5260      75737065 
 5260      6E646564 
 5261 0027 C5020000 		.4byte	0x2c5
 5262 002b 76546173 		.ascii	"vTaskSwitchContext\000"
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 127


 5262      6B537769 
 5262      74636843 
 5262      6F6E7465 
 5262      787400
 5263 003e 2A030000 		.4byte	0x32a
 5264 0042 76546173 		.ascii	"vTaskSetTimeOutState\000"
 5264      6B536574 
 5264      54696D65 
 5264      4F757453 
 5264      74617465 
 5265 0057 45030000 		.4byte	0x345
 5266 005b 76546173 		.ascii	"vTaskMissedYield\000"
 5266      6B4D6973 
 5266      73656459 
 5266      69656C64 
 5266      00
 5267 006c 59030000 		.4byte	0x359
 5268 0070 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 5268      736B4765 
 5268      744E756D 
 5268      6265724F 
 5268      66546173 
 5269 0087 88030000 		.4byte	0x388
 5270 008b 78546173 		.ascii	"xTaskGetTickCount\000"
 5270      6B476574 
 5270      5469636B 
 5270      436F756E 
 5270      7400
 5271 009d B7030000 		.4byte	0x3b7
 5272 00a1 76546173 		.ascii	"vTaskSuspendAll\000"
 5272      6B537573 
 5272      70656E64 
 5272      416C6C00 
 5273 00b1 CD030000 		.4byte	0x3cd
 5274 00b5 75785461 		.ascii	"uxTaskPriorityGet\000"
 5274      736B5072 
 5274      696F7269 
 5274      74794765 
 5274      7400
 5275 00c7 22040000 		.4byte	0x422
 5276 00cb 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 5276      6B52656D 
 5276      6F766546 
 5276      726F6D45 
 5276      76656E74 
 5277 00e4 7D040000 		.4byte	0x47d
 5278 00e8 76546173 		.ascii	"vTaskIncrementTick\000"
 5278      6B496E63 
 5278      72656D65 
 5278      6E745469 
 5278      636B00
 5279 00fb CC040000 		.4byte	0x4cc
 5280 00ff 78546173 		.ascii	"xTaskResumeAll\000"
 5280      6B526573 
 5280      756D6541 
 5280      6C6C00
 5281 010e 21050000 		.4byte	0x521
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 128


 5282 0112 78546173 		.ascii	"xTaskResumeFromISR\000"
 5282      6B526573 
 5282      756D6546 
 5282      726F6D49 
 5282      535200
 5283 0125 70050000 		.4byte	0x570
 5284 0129 76546173 		.ascii	"vTaskResume\000"
 5284      6B526573 
 5284      756D6500 
 5285 0135 AB050000 		.4byte	0x5ab
 5286 0139 76546173 		.ascii	"vTaskSuspend\000"
 5286      6B537573 
 5286      70656E64 
 5286      00
 5287 0146 E6050000 		.4byte	0x5e6
 5288 014a 76546173 		.ascii	"vTaskPrioritySet\000"
 5288      6B507269 
 5288      6F726974 
 5288      79536574 
 5288      00
 5289 015b 51060000 		.4byte	0x651
 5290 015f 76546173 		.ascii	"vTaskDelete\000"
 5290      6B44656C 
 5290      65746500 
 5291 016b 8C060000 		.4byte	0x68c
 5292 016f 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 5292      6B506C61 
 5292      63654F6E 
 5292      4576656E 
 5292      744C6973 
 5293 0185 D7060000 		.4byte	0x6d7
 5294 0189 76546173 		.ascii	"vTaskDelay\000"
 5294      6B44656C 
 5294      617900
 5295 0194 20070000 		.4byte	0x720
 5296 0198 76546173 		.ascii	"vTaskDelayUntil\000"
 5296      6B44656C 
 5296      6179556E 
 5296      74696C00 
 5297 01a8 94070000 		.4byte	0x794
 5298 01ac 76546173 		.ascii	"vTaskEndScheduler\000"
 5298      6B456E64 
 5298      53636865 
 5298      64756C65 
 5298      7200
 5299 01be EC080000 		.4byte	0x8ec
 5300 01c2 78546173 		.ascii	"xTaskCreate\000"
 5300      6B437265 
 5300      61746500 
 5301 01ce 0C0A0000 		.4byte	0xa0c
 5302 01d2 76546173 		.ascii	"vTaskStartScheduler\000"
 5302      6B537461 
 5302      72745363 
 5302      68656475 
 5302      6C657200 
 5303 01e6 370A0000 		.4byte	0xa37
 5304 01ea 78546173 		.ascii	"xTaskCheckForTimeOut\000"
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 129


 5304      6B436865 
 5304      636B466F 
 5304      7254696D 
 5304      654F7574 
 5305 01ff F20B0000 		.4byte	0xbf2
 5306 0203 70784375 		.ascii	"pxCurrentTCB\000"
 5306      7272656E 
 5306      74544342 
 5306      00
 5307 0210 00000000 		.4byte	0x0
 5308              		.section	.debug_aranges,"",%progbits
 5309 0000 1C000000 		.4byte	0x1c
 5310 0004 0200     		.2byte	0x2
 5311 0006 00000000 		.4byte	.Ldebug_info0
 5312 000a 04       		.byte	0x4
 5313 000b 00       		.byte	0x0
 5314 000c 0000     		.2byte	0x0
 5315 000e 0000     		.2byte	0x0
 5316 0010 00000000 		.4byte	.Ltext0
 5317 0014 4C090000 		.4byte	.Letext0-.Ltext0
 5318 0018 00000000 		.4byte	0x0
 5319 001c 00000000 		.4byte	0x0
 5320              		.section	.debug_ranges,"",%progbits
 5321              	.Ldebug_ranges0:
 5322 0000 3C070000 		.4byte	.LBB25-.Ltext0
 5323 0004 3E070000 		.4byte	.LBE25-.Ltext0
 5324 0008 44070000 		.4byte	.LBB28-.Ltext0
 5325 000c 70070000 		.4byte	.LBE28-.Ltext0
 5326 0010 00000000 		.4byte	0x0
 5327 0014 00000000 		.4byte	0x0
 5328 0018 4A070000 		.4byte	.LBB26-.Ltext0
 5329 001c 50070000 		.4byte	.LBE26-.Ltext0
 5330 0020 56070000 		.4byte	.LBB27-.Ltext0
 5331 0024 70070000 		.4byte	.LBE27-.Ltext0
 5332 0028 00000000 		.4byte	0x0
 5333 002c 00000000 		.4byte	0x0
 5334 0030 70070000 		.4byte	.LBB30-.Ltext0
 5335 0034 9C070000 		.4byte	.LBE30-.Ltext0
 5336 0038 9E070000 		.4byte	.LBB33-.Ltext0
 5337 003c A8070000 		.4byte	.LBE33-.Ltext0
 5338 0040 00000000 		.4byte	0x0
 5339 0044 00000000 		.4byte	0x0
 5340              		.section	.debug_str,"MS",%progbits,1
 5341              	.LASF89:
 5342 0000 70727649 		.ascii	"prvInitialiseTCBVariables\000"
 5342      6E697469 
 5342      616C6973 
 5342      65544342 
 5342      56617269 
 5343              	.LASF17:
 5344 001a 784C6973 		.ascii	"xListItem\000"
 5344      74497465 
 5344      6D00
 5345              	.LASF54:
 5346 0024 70784576 		.ascii	"pxEventList\000"
 5346      656E744C 
 5346      69737400 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 130


 5347              	.LASF65:
 5348 0030 76546173 		.ascii	"vTaskSuspend\000"
 5348      6B537573 
 5348      70656E64 
 5348      00
 5349              	.LASF107:
 5350 003d 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 5350      7272656E 
 5350      744E756D 
 5350      6265724F 
 5350      66546173 
 5351              	.LASF9:
 5352 0054 7369676E 		.ascii	"signed char\000"
 5352      65642063 
 5352      68617200 
 5353              	.LASF105:
 5354 0060 75785461 		.ascii	"uxTasksDeleted\000"
 5354      736B7344 
 5354      656C6574 
 5354      656400
 5355              	.LASF106:
 5356 006f 78537573 		.ascii	"xSuspendedTaskList\000"
 5356      70656E64 
 5356      65645461 
 5356      736B4C69 
 5356      737400
 5357              	.LASF8:
 5358 0082 6C6F6E67 		.ascii	"long long unsigned int\000"
 5358      206C6F6E 
 5358      6720756E 
 5358      7369676E 
 5358      65642069 
 5359              	.LASF60:
 5360 0099 78416C72 		.ascii	"xAlreadyYielded\000"
 5360      65616479 
 5360      5969656C 
 5360      64656400 
 5361              	.LASF85:
 5362 00a9 70785469 		.ascii	"pxTimeOut\000"
 5362      6D654F75 
 5362      7400
 5363              	.LASF24:
 5364 00b3 784C6973 		.ascii	"xListEnd\000"
 5364      74456E64 
 5364      00
 5365              	.LASF27:
 5366 00bc 7854494D 		.ascii	"xTIME_OUT\000"
 5366      455F4F55 
 5366      5400
 5367              	.LASF19:
 5368 00c6 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 5368      495F4C49 
 5368      53545F49 
 5368      54454D00 
 5369              	.LASF82:
 5370 00d6 784C6973 		.ascii	"xListIsEmpty\000"
 5370      74497345 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 131


 5370      6D707479 
 5370      00
 5371              	.LASF63:
 5372 00e3 70785461 		.ascii	"pxTaskToResume\000"
 5372      736B546F 
 5372      52657375 
 5372      6D6500
 5373              	.LASF2:
 5374 00f2 6C6F6E67 		.ascii	"long long int\000"
 5374      206C6F6E 
 5374      6720696E 
 5374      7400
 5375              	.LASF117:
 5376 0100 46726565 		.ascii	"FreeRTOS/tasks.c\000"
 5376      52544F53 
 5376      2F746173 
 5376      6B732E63 
 5376      00
 5377              	.LASF73:
 5378 0111 78546963 		.ascii	"xTicksToWait\000"
 5378      6B73546F 
 5378      57616974 
 5378      00
 5379              	.LASF75:
 5380 011e 76546173 		.ascii	"vTaskDelay\000"
 5380      6B44656C 
 5380      617900
 5381              	.LASF26:
 5382 0129 78546173 		.ascii	"xTaskHandle\000"
 5382      6B48616E 
 5382      646C6500 
 5383              	.LASF20:
 5384 0135 784D696E 		.ascii	"xMiniListItem\000"
 5384      694C6973 
 5384      74497465 
 5384      6D00
 5385              	.LASF25:
 5386 0143 784C6973 		.ascii	"xList\000"
 5386      7400
 5387              	.LASF1:
 5388 0149 6C6F6E67 		.ascii	"long int\000"
 5388      20696E74 
 5388      00
 5389              	.LASF31:
 5390 0152 74736B54 		.ascii	"tskTaskControlBlock\000"
 5390      61736B43 
 5390      6F6E7472 
 5390      6F6C426C 
 5390      6F636B00 
 5391              	.LASF88:
 5392 0166 70784E65 		.ascii	"pxNewTCB\000"
 5392      77544342 
 5392      00
 5393              	.LASF121:
 5394 016f 70727641 		.ascii	"prvAllocateTCBAndStack\000"
 5394      6C6C6F63 
 5394      61746554 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 132


 5394      4342416E 
 5394      64537461 
 5395              	.LASF93:
 5396 0186 70765461 		.ascii	"pvTaskCode\000"
 5396      736B436F 
 5396      646500
 5397              	.LASF11:
 5398 0191 706F7274 		.ascii	"portTickType\000"
 5398      5469636B 
 5398      54797065 
 5398      00
 5399              	.LASF87:
 5400 019e 75735374 		.ascii	"usStackDepth\000"
 5400      61636B44 
 5400      65707468 
 5400      00
 5401              	.LASF67:
 5402 01ab 76546173 		.ascii	"vTaskPrioritySet\000"
 5402      6B507269 
 5402      6F726974 
 5402      79536574 
 5402      00
 5403              	.LASF28:
 5404 01bc 784F7665 		.ascii	"xOverflowCount\000"
 5404      72666C6F 
 5404      77436F75 
 5404      6E7400
 5405              	.LASF95:
 5406 01cb 76546173 		.ascii	"vTaskStartScheduler\000"
 5406      6B537461 
 5406      72745363 
 5406      68656475 
 5406      6C657200 
 5407              	.LASF72:
 5408 01df 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 5408      6B506C61 
 5408      63654F6E 
 5408      4576656E 
 5408      744C6973 
 5409              	.LASF50:
 5410 01f5 70785461 		.ascii	"pxTask\000"
 5410      736B00
 5411              	.LASF112:
 5412 01fc 75785363 		.ascii	"uxSchedulerSuspended\000"
 5412      68656475 
 5412      6C657253 
 5412      75737065 
 5412      6E646564 
 5413              	.LASF3:
 5414 0211 756E7369 		.ascii	"unsigned int\000"
 5414      676E6564 
 5414      20696E74 
 5414      00
 5415              	.LASF39:
 5416 021e 78526574 		.ascii	"xReturn\000"
 5416      75726E00 
 5417              	.LASF29:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 133


 5418 0226 7854696D 		.ascii	"xTimeOnEntering\000"
 5418      654F6E45 
 5418      6E746572 
 5418      696E6700 
 5419              	.LASF94:
 5420 0236 70784372 		.ascii	"pxCreatedTask\000"
 5420      65617465 
 5420      64546173 
 5420      6B00
 5421              	.LASF22:
 5422 0244 75784E75 		.ascii	"uxNumberOfItems\000"
 5422      6D626572 
 5422      4F664974 
 5422      656D7300 
 5423              	.LASF41:
 5424 0254 78546173 		.ascii	"xTaskIsTaskSuspended\000"
 5424      6B497354 
 5424      61736B53 
 5424      75737065 
 5424      6E646564 
 5425              	.LASF0:
 5426 0269 6C6F6E67 		.ascii	"long unsigned int\000"
 5426      20756E73 
 5426      69676E65 
 5426      6420696E 
 5426      7400
 5427              	.LASF32:
 5428 027b 7078546F 		.ascii	"pxTopOfStack\000"
 5428      704F6653 
 5428      7461636B 
 5428      00
 5429              	.LASF86:
 5430 0288 70765061 		.ascii	"pvParameters\000"
 5430      72616D65 
 5430      74657273 
 5430      00
 5431              	.LASF108:
 5432 0295 78546963 		.ascii	"xTickCount\000"
 5432      6B436F75 
 5432      6E7400
 5433              	.LASF38:
 5434 02a0 74736B54 		.ascii	"tskTCB\000"
 5434      434200
 5435              	.LASF40:
 5436 02a7 7078436F 		.ascii	"pxConstList\000"
 5436      6E73744C 
 5436      69737400 
 5437              	.LASF7:
 5438 02b3 73686F72 		.ascii	"short unsigned int\000"
 5438      7420756E 
 5438      7369676E 
 5438      65642069 
 5438      6E7400
 5439              	.LASF51:
 5440 02c6 70785443 		.ascii	"pxTCB\000"
 5440      4200
 5441              	.LASF61:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 134


 5442 02cc 78596965 		.ascii	"xYieldRequired\000"
 5442      6C645265 
 5442      71756972 
 5442      656400
 5443              	.LASF30:
 5444 02db 7854696D 		.ascii	"xTimeOutType\000"
 5444      654F7574 
 5444      54797065 
 5444      00
 5445              	.LASF64:
 5446 02e8 76546173 		.ascii	"vTaskResume\000"
 5446      6B526573 
 5446      756D6500 
 5447              	.LASF122:
 5448 02f4 70784375 		.ascii	"pxCurrentTCB\000"
 5448      7272656E 
 5448      74544342 
 5448      00
 5449              	.LASF52:
 5450 0301 75785265 		.ascii	"uxReturn\000"
 5450      7475726E 
 5450      00
 5451              	.LASF44:
 5452 030a 78546173 		.ascii	"xTaskGetTickCount\000"
 5452      6B476574 
 5452      5469636B 
 5452      436F756E 
 5452      7400
 5453              	.LASF84:
 5454 031c 70727644 		.ascii	"prvDeleteTCB\000"
 5454      656C6574 
 5454      65544342 
 5454      00
 5455              	.LASF114:
 5456 0329 784D6973 		.ascii	"xMissedYield\000"
 5456      73656459 
 5456      69656C64 
 5456      00
 5457              	.LASF116:
 5458 0336 474E5520 		.ascii	"GNU C 4.2.2\000"
 5458      4320342E 
 5458      322E3200 
 5459              	.LASF120:
 5460 0342 70727649 		.ascii	"prvIdleTask\000"
 5460      646C6554 
 5460      61736B00 
 5461              	.LASF56:
 5462 034e 76546173 		.ascii	"vTaskSwitchContext\000"
 5462      6B537769 
 5462      74636843 
 5462      6F6E7465 
 5462      787400
 5463              	.LASF118:
 5464 0361 2F637967 		.ascii	"/cygdrive/c/Downloads/EDU\000"
 5464      64726976 
 5464      652F632F 
 5464      446F776E 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 135


 5464      6C6F6164 
 5465              	.LASF36:
 5466 037b 70785374 		.ascii	"pxStack\000"
 5466      61636B00 
 5467              	.LASF109:
 5468 0383 7578546F 		.ascii	"uxTopUsedPriority\000"
 5468      70557365 
 5468      64507269 
 5468      6F726974 
 5468      7900
 5469              	.LASF102:
 5470 0395 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 5470      6572666C 
 5470      6F774465 
 5470      6C617965 
 5470      64546173 
 5471              	.LASF71:
 5472 03af 70785461 		.ascii	"pxTaskToDelete\000"
 5472      736B546F 
 5472      44656C65 
 5472      746500
 5473              	.LASF103:
 5474 03be 7850656E 		.ascii	"xPendingReadyList\000"
 5474      64696E67 
 5474      52656164 
 5474      794C6973 
 5474      7400
 5475              	.LASF92:
 5476 03d0 78546173 		.ascii	"xTaskCreate\000"
 5476      6B437265 
 5476      61746500 
 5477              	.LASF34:
 5478 03dc 78457665 		.ascii	"xEventListItem\000"
 5478      6E744C69 
 5478      73744974 
 5478      656D00
 5479              	.LASF43:
 5480 03eb 75784E75 		.ascii	"uxNumberOfTasks\000"
 5480      6D626572 
 5480      4F665461 
 5480      736B7300 
 5481              	.LASF78:
 5482 03fb 70785072 		.ascii	"pxPreviousWakeTime\000"
 5482      6576696F 
 5482      75735761 
 5482      6B655469 
 5482      6D6500
 5483              	.LASF91:
 5484 040e 70727649 		.ascii	"prvInitialiseTaskLists\000"
 5484      6E697469 
 5484      616C6973 
 5484      65546173 
 5484      6B4C6973 
 5485              	.LASF14:
 5486 0425 70785072 		.ascii	"pxPrevious\000"
 5486      6576696F 
 5486      757300
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 136


 5487              	.LASF68:
 5488 0430 75784E65 		.ascii	"uxNewPriority\000"
 5488      77507269 
 5488      6F726974 
 5488      7900
 5489              	.LASF15:
 5490 043e 70764F77 		.ascii	"pvOwner\000"
 5490      6E657200 
 5491              	.LASF23:
 5492 0446 7078496E 		.ascii	"pxIndex\000"
 5492      64657800 
 5493              	.LASF16:
 5494 044e 7076436F 		.ascii	"pvContainer\000"
 5494      6E746169 
 5494      6E657200 
 5495              	.LASF55:
 5496 045a 7078556E 		.ascii	"pxUnblockedTCB\000"
 5496      626C6F63 
 5496      6B656454 
 5496      434200
 5497              	.LASF77:
 5498 0469 76546173 		.ascii	"vTaskDelayUntil\000"
 5498      6B44656C 
 5498      6179556E 
 5498      74696C00 
 5499              	.LASF74:
 5500 0479 7854696D 		.ascii	"xTimeToWake\000"
 5500      65546F57 
 5500      616B6500 
 5501              	.LASF4:
 5502 0485 756E7369 		.ascii	"unsigned char\000"
 5502      676E6564 
 5502      20636861 
 5502      7200
 5503              	.LASF5:
 5504 0493 73686F72 		.ascii	"short int\000"
 5504      7420696E 
 5504      7400
 5505              	.LASF57:
 5506 049d 76546173 		.ascii	"vTaskIncrementTick\000"
 5506      6B496E63 
 5506      72656D65 
 5506      6E745469 
 5506      636B00
 5507              	.LASF111:
 5508 04b0 78536368 		.ascii	"xSchedulerRunning\000"
 5508      6564756C 
 5508      65725275 
 5508      6E6E696E 
 5508      6700
 5509              	.LASF81:
 5510 04c2 76546173 		.ascii	"vTaskEndScheduler\000"
 5510      6B456E64 
 5510      53636865 
 5510      64756C65 
 5510      7200
 5511              	.LASF59:
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 137


 5512 04d4 78546173 		.ascii	"xTaskResumeAll\000"
 5512      6B526573 
 5512      756D6541 
 5512      6C6C00
 5513              	.LASF21:
 5514 04e3 784C4953 		.ascii	"xLIST\000"
 5514      5400
 5515              	.LASF46:
 5516 04e9 76546173 		.ascii	"vTaskMissedYield\000"
 5516      6B4D6973 
 5516      73656459 
 5516      69656C64 
 5516      00
 5517              	.LASF33:
 5518 04fa 7847656E 		.ascii	"xGenericListItem\000"
 5518      65726963 
 5518      4C697374 
 5518      4974656D 
 5518      00
 5519              	.LASF62:
 5520 050b 78546173 		.ascii	"xTaskResumeFromISR\000"
 5520      6B526573 
 5520      756D6546 
 5520      726F6D49 
 5520      535200
 5521              	.LASF80:
 5522 051e 7853686F 		.ascii	"xShouldDelay\000"
 5522      756C6444 
 5522      656C6179 
 5522      00
 5523              	.LASF83:
 5524 052b 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 5524      6865636B 
 5524      5461736B 
 5524      73576169 
 5524      74696E67 
 5525              	.LASF49:
 5526 054b 78546173 		.ascii	"xTask\000"
 5526      6B00
 5527              	.LASF104:
 5528 0551 78546173 		.ascii	"xTasksWaitingTermination\000"
 5528      6B735761 
 5528      6974696E 
 5528      67546572 
 5528      6D696E61 
 5529              	.LASF6:
 5530 056a 63686172 		.ascii	"char\000"
 5530      00
 5531              	.LASF53:
 5532 056f 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 5532      6B52656D 
 5532      6F766546 
 5532      726F6D45 
 5532      76656E74 
 5533              	.LASF10:
 5534 0588 70645441 		.ascii	"pdTASK_CODE\000"
 5534      534B5F43 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 138


 5534      4F444500 
 5535              	.LASF70:
 5536 0594 76546173 		.ascii	"vTaskDelete\000"
 5536      6B44656C 
 5536      65746500 
 5537              	.LASF96:
 5538 05a0 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 5538      6B436865 
 5538      636B466F 
 5538      7254696D 
 5538      654F7574 
 5539              	.LASF58:
 5540 05b5 70785465 		.ascii	"pxTemp\000"
 5540      6D7000
 5541              	.LASF98:
 5542 05bc 70785265 		.ascii	"pxReadyTasksLists\000"
 5542      61647954 
 5542      61736B73 
 5542      4C697374 
 5542      7300
 5543              	.LASF42:
 5544 05ce 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 5544      736B4765 
 5544      744E756D 
 5544      6265724F 
 5544      66546173 
 5545              	.LASF99:
 5546 05e5 7844656C 		.ascii	"xDelayedTaskList1\000"
 5546      61796564 
 5546      5461736B 
 5546      4C697374 
 5546      3100
 5547              	.LASF100:
 5548 05f7 7844656C 		.ascii	"xDelayedTaskList2\000"
 5548      61796564 
 5548      5461736B 
 5548      4C697374 
 5548      3200
 5549              	.LASF115:
 5550 0609 784E756D 		.ascii	"xNumOfOverflows\000"
 5550      4F664F76 
 5550      6572666C 
 5550      6F777300 
 5551              	.LASF45:
 5552 0619 78546963 		.ascii	"xTicks\000"
 5552      6B7300
 5553              	.LASF47:
 5554 0620 76546173 		.ascii	"vTaskSuspendAll\000"
 5554      6B537573 
 5554      70656E64 
 5554      416C6C00 
 5555              	.LASF12:
 5556 0630 78497465 		.ascii	"xItemValue\000"
 5556      6D56616C 
 5556      756500
 5557              	.LASF113:
 5558 063b 75784D69 		.ascii	"uxMissedTicks\000"
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 139


 5558      73736564 
 5558      5469636B 
 5558      7300
 5559              	.LASF76:
 5560 0649 78546963 		.ascii	"xTicksToDelay\000"
 5560      6B73546F 
 5560      44656C61 
 5560      7900
 5561              	.LASF79:
 5562 0657 7854696D 		.ascii	"xTimeIncrement\000"
 5562      65496E63 
 5562      72656D65 
 5562      6E7400
 5563              	.LASF37:
 5564 0666 70635461 		.ascii	"pcTaskName\000"
 5564      736B4E61 
 5564      6D6500
 5565              	.LASF97:
 5566 0671 70785469 		.ascii	"pxTicksToWait\000"
 5566      636B7354 
 5566      6F576169 
 5566      7400
 5567              	.LASF69:
 5568 067f 75784375 		.ascii	"uxCurrentPriority\000"
 5568      7272656E 
 5568      74507269 
 5568      6F726974 
 5568      7900
 5569              	.LASF13:
 5570 0691 70784E65 		.ascii	"pxNext\000"
 5570      787400
 5571              	.LASF110:
 5572 0698 7578546F 		.ascii	"uxTopReadyPriority\000"
 5572      70526561 
 5572      64795072 
 5572      696F7269 
 5572      747900
 5573              	.LASF18:
 5574 06ab 784C4953 		.ascii	"xLIST_ITEM\000"
 5574      545F4954 
 5574      454D00
 5575              	.LASF35:
 5576 06b6 75785072 		.ascii	"uxPriority\000"
 5576      696F7269 
 5576      747900
 5577              	.LASF101:
 5578 06c1 70784465 		.ascii	"pxDelayedTaskList\000"
 5578      6C617965 
 5578      64546173 
 5578      6B4C6973 
 5578      7400
 5579              	.LASF90:
 5580 06d3 70634E61 		.ascii	"pcName\000"
 5580      6D6500
 5581              	.LASF48:
 5582 06da 75785461 		.ascii	"uxTaskPriorityGet\000"
 5582      736B5072 
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 140


 5582      696F7269 
 5582      74794765 
 5582      7400
 5583              	.LASF119:
 5584 06ec 76546173 		.ascii	"vTaskSetTimeOutState\000"
 5584      6B536574 
 5584      54696D65 
 5584      4F757453 
 5584      74617465 
 5585              	.LASF66:
 5586 0701 70785461 		.ascii	"pxTaskToSuspend\000"
 5586      736B546F 
 5586      53757370 
 5586      656E6400 
 5587              		.ident	"GCC: (GNU) 4.2.2"
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 141


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1      .text:00000000 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:16     .text:00000000 xTaskIsTaskSuspended
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:55     .text:00000020 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2030   .bss:000000e8 xSuspendedTaskList
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2024   .bss:000000c0 xPendingReadyList
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:64     .text:00000028 vTaskSwitchContext
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:61     .text:00000028 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:128    .text:00000078 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1988   .bss:00000010 uxSchedulerSuspended
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1979   .bss:00000004 xMissedYield
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1991   .bss:00000014 uxTopReadyPriority
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2009   .bss:0000002c pxReadyTasksLists
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1976   .bss:00000000 pxCurrentTCB
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:140    .text:0000008c vTaskSetTimeOutState
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:137    .text:0000008c $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:161    .text:0000009c $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1982   .bss:00000008 xNumOfOverflows
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1985   .bss:0000000c xTickCount
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:170    .text:000000a4 vTaskMissedYield
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:167    .text:000000a4 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:186    .text:000000ac $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:194    .text:000000b0 uxTaskGetNumberOfTasks
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:191    .text:000000b0 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:217    .text:000000c8 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1997   .bss:0000001c uxCurrentNumberOfTasks
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:225    .text:000000cc xTaskGetTickCount
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:222    .text:000000cc $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:248    .text:000000e4 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:256    .text:000000e8 vTaskSuspendAll
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:253    .text:000000e8 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:277    .text:00000100 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:285    .text:00000104 uxTaskPriorityGet
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:282    .text:00000104 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:324    .text:00000128 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:332    .text:0000012c xTaskRemoveFromEventList
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:329    .text:0000012c $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:406    .text:00000190 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:418    .text:000001a4 vTaskIncrementTick
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:415    .text:000001a4 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:521    .text:00000234 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2021   .bss:000000bc pxOverflowDelayedTaskList
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2018   .bss:000000b8 pxDelayedTaskList
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1994   .bss:00000018 uxMissedTicks
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:536    .text:00000254 xTaskResumeAll
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:533    .text:00000254 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:665    .text:00000304 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:680    .text:00000324 xTaskResumeFromISR
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:677    .text:00000324 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:764    .text:0000038c $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:776    .text:000003a0 vTaskResume
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:773    .text:000003a0 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:844    .text:000003fc $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:854    .text:00000408 vTaskSuspend
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:851    .text:00000408 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:922    .text:00000458 $d
ARM GAS  /cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s 			page 142


/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:931    .text:00000460 vTaskPrioritySet
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:928    .text:00000460 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1056   .text:000004f0 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1066   .text:000004fc vTaskDelete
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1063   .text:000004fc $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1144   .text:0000055c $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2027   .bss:000000d4 xTasksWaitingTermination
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2003   .bss:00000024 uxTasksDeleted
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2000   .bss:00000020 xSchedulerRunning
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1155   .text:0000056c vTaskPlaceOnEventList
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1152   .text:0000056c $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1224   .text:000005bc $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1236   .text:000005d0 vTaskDelay
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1233   .text:000005d0 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1299   .text:00000618 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1310   .text:00000628 vTaskDelayUntil
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1307   .text:00000628 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1413   .text:00000698 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1424   .text:000006a8 vTaskEndScheduler
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1421   .text:000006a8 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1444   .text:000006bc $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1448   .text:000006c0 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1451   .text:000006c0 prvIdleTask
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1539   .text:00000724 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1550   .text:00000734 xTaskCreate
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1547   .text:00000734 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1814   .text:00000878 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2012   .bss:00000090 xDelayedTaskList1
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2015   .bss:000000a4 xDelayedTaskList2
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:2006   .bss:00000028 uxTopUsedPriority
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1839   .text:000008ac vTaskStartScheduler
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1836   .text:000008ac $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1884   .text:000008e0 $d
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1895   .text:000008f0 xTaskCheckForTimeOut
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1892   .text:000008f0 $t
/cygdrive/c/DOCUME~1/Admin/USTAWI~1/Temp/ccgo5sZb.s:1967   .text:00000944 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
vListRemove
vListInsertEnd
vListInsert
vPortDisableInterruptsFromThumb
vPortEndScheduler
vPortFree
pvPortMalloc
memset
strncpy
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
xPortStartScheduler
