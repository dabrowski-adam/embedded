   1              		.file	"SPI_MCP23S08_SWITCH.c"
   9              	.Ltext0:
  10              		.global	MCP23S08_settings
  11              		.section	.rodata
  14              	MCP23S08_settings:
  15 0000 0F       		.byte	15
  16 0001 00       		.byte	0
  17 0002 00       		.byte	0
  18 0003 00       		.byte	0
  19 0004 00       		.byte	0
  20 0005 04       		.byte	4
  21 0006 FF       		.byte	-1
  22              		.text
  23              		.align	2
  24              		.global	SPIInit
  26              	SPIInit:
  27              	.LFB2:
  28              		.file 1 "SPI_MCP23S08_SWITCH.c"
   1:SPI_MCP23S08_SWITCH.c **** ////////////////////////////////////////////////////////
   2:SPI_MCP23S08_SWITCH.c **** // Function:	SPI example - dipswitch reading via MCP23S08
   3:SPI_MCP23S08_SWITCH.c **** // Target:		LPC2138
   4:SPI_MCP23S08_SWITCH.c **** // Board:		ZL6ARM
   5:SPI_MCP23S08_SWITCH.c **** // Quartz:		12MHz
   6:SPI_MCP23S08_SWITCH.c **** // Compiler:	ARM-GCC
   7:SPI_MCP23S08_SWITCH.c **** // Author:		Arkadiusz Antoniak @ 2006, Poland
   8:SPI_MCP23S08_SWITCH.c **** // Copyright:	(c) Arkadiusz Antoniak, 2006
   9:SPI_MCP23S08_SWITCH.c **** ////////////////////////////////////////////////////////
  10:SPI_MCP23S08_SWITCH.c **** #include <LPC213x.H>	    
  11:SPI_MCP23S08_SWITCH.c **** #include "lcd.h"
  12:SPI_MCP23S08_SWITCH.c **** 
  13:SPI_MCP23S08_SWITCH.c **** //Constants
  14:SPI_MCP23S08_SWITCH.c **** #define SLAVE_ADDRESS_MCP23S08_W 0x46
  15:SPI_MCP23S08_SWITCH.c **** #define SLAVE_ADDRESS_MCP23S08_R 0x47
  16:SPI_MCP23S08_SWITCH.c **** #define CS_SET IOSET0=(1<<27)
  17:SPI_MCP23S08_SWITCH.c **** #define CS_CLR IOCLR0=(1<<27)
  18:SPI_MCP23S08_SWITCH.c **** #define ADDR_MCP23S08_GPIO 0x09
  19:SPI_MCP23S08_SWITCH.c **** 
  20:SPI_MCP23S08_SWITCH.c **** //Globals
  21:SPI_MCP23S08_SWITCH.c **** const unsigned char MCP23S08_settings[]={
  22:SPI_MCP23S08_SWITCH.c **** 	0x0F,	//IODIR (0x00)
  23:SPI_MCP23S08_SWITCH.c **** 	0x00,	//IPOL (0x01)
  24:SPI_MCP23S08_SWITCH.c **** 	0x00,	//GPINTEN
  25:SPI_MCP23S08_SWITCH.c **** 	0x00,	//DEFVAL
  26:SPI_MCP23S08_SWITCH.c **** 	0x00,	//INTCON
  27:SPI_MCP23S08_SWITCH.c **** 	0x04,	//IOCON
  28:SPI_MCP23S08_SWITCH.c **** 	0xFF	//GPPU
  29:SPI_MCP23S08_SWITCH.c **** };
  30:SPI_MCP23S08_SWITCH.c **** 
  31:SPI_MCP23S08_SWITCH.c **** 
  32:SPI_MCP23S08_SWITCH.c **** //*******************************
  33:SPI_MCP23S08_SWITCH.c **** // SPI Init
  34:SPI_MCP23S08_SWITCH.c **** //*******************************
  35:SPI_MCP23S08_SWITCH.c **** void SPIInit(void)
  36:SPI_MCP23S08_SWITCH.c **** {
  29              		.loc 1 36 0
  30              		@ Function supports interworking.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              		@ lr needed for prologue
  37:SPI_MCP23S08_SWITCH.c **** 	//P0.4=SCK0, P0.5=MISO0, P0.6=MOSI0
  38:SPI_MCP23S08_SWITCH.c **** 	PINSEL0&=~(0x3F<<8);
  36              		.loc 1 38 0
  37 0000 0E12A0E3 		mov	r1, #-536870912
  38 0004 0B2981E2 		add	r2, r1, #180224
  39 0008 003092E5 		ldr	r3, [r2, #0]
  40 000c 3F3CC3E3 		bic	r3, r3, #16128
  41 0010 003082E5 		str	r3, [r2, #0]
  39:SPI_MCP23S08_SWITCH.c **** 	PINSEL0|=(0x15<<8);
  42              		.loc 1 39 0
  43 0014 003092E5 		ldr	r3, [r2, #0]
  44 0018 153C83E3 		orr	r3, r3, #5376
  45 001c 003082E5 		str	r3, [r2, #0]
  40:SPI_MCP23S08_SWITCH.c **** 
  41:SPI_MCP23S08_SWITCH.c **** 	//Initially CS set
  42:SPI_MCP23S08_SWITCH.c **** 	CS_SET;
  46              		.loc 1 42 0
  47 0020 0223A0E3 		mov	r2, #134217728
  48 0024 4E32A0E3 		mov	r3, #-536870908
  49 0028 0A3983E2 		add	r3, r3, #163840
  50 002c 002083E5 		str	r2, [r3, #0]
  43:SPI_MCP23S08_SWITCH.c **** 
  44:SPI_MCP23S08_SWITCH.c **** 	//Set bit rate 15MHz/S0SPCCR = cca. 1.8M
  45:SPI_MCP23S08_SWITCH.c **** 	S0SPCCR = 0x8;
  51              		.loc 1 45 0
  52 0030 0820A0E3 		mov	r2, #8
  53 0034 CE32A0E3 		mov	r3, #-536870900
  54 0038 023883E2 		add	r3, r3, #131072
  55 003c 0020C3E5 		strb	r2, [r3, #0]
  46:SPI_MCP23S08_SWITCH.c **** 
  47:SPI_MCP23S08_SWITCH.c **** 	//Control register: Master mode
  48:SPI_MCP23S08_SWITCH.c **** 	S0SPCR=(1<<5);
  56              		.loc 1 48 0
  57 0040 021881E2 		add	r1, r1, #131072
  58 0044 2030A0E3 		mov	r3, #32	@ movhi
  59 0048 B030C1E1 		strh	r3, [r1, #0]	@ movhi
  49:SPI_MCP23S08_SWITCH.c **** }
  60              		.loc 1 49 0
  61 004c 1EFF2FE1 		bx	lr
  62              	.LFE2:
  64              		.align	2
  65              		.global	WriteSPIByte
  67              	WriteSPIByte:
  68              	.LFB3:
  50:SPI_MCP23S08_SWITCH.c **** 
  51:SPI_MCP23S08_SWITCH.c **** //*************************************
  52:SPI_MCP23S08_SWITCH.c **** // Write SPI byte
  53:SPI_MCP23S08_SWITCH.c **** //*************************************
  54:SPI_MCP23S08_SWITCH.c **** unsigned char WriteSPIByte(unsigned char byte)
  55:SPI_MCP23S08_SWITCH.c **** {
  69              		.loc 1 55 0
  70              		@ Function supports interworking.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.LVL1:
  75              		@ lr needed for prologue
  76 0050 FF0000E2 		and	r0, r0, #255
  56:SPI_MCP23S08_SWITCH.c **** 	unsigned char spi_status,dummy;
  57:SPI_MCP23S08_SWITCH.c **** 
  58:SPI_MCP23S08_SWITCH.c **** 	//Write byte to SPI Data Register
  59:SPI_MCP23S08_SWITCH.c **** 	S0SPDR = byte;
  77              		.loc 1 59 0
  78 0054 8E32A0E3 		mov	r3, #-536870904
  79 0058 023883E2 		add	r3, r3, #131072
  80 005c B000C3E1 		strh	r0, [r3, #0]	@ movhi
  81 0060 4E32A0E3 		mov	r3, #-536870908
  82 0064 022883E2 		add	r2, r3, #131072
  83              	.L4:
  60:SPI_MCP23S08_SWITCH.c **** 
  61:SPI_MCP23S08_SWITCH.c **** 	//Wait for end of byte transmission
  62:SPI_MCP23S08_SWITCH.c **** 	while((S0SPSR & (1<<7))==0);
  84              		.loc 1 62 0
  85 0068 0030D2E5 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
  86 006c 800013E3 		tst	r3, #128
  87 0070 1800000A 		beq	.L4
  63:SPI_MCP23S08_SWITCH.c **** 
  64:SPI_MCP23S08_SWITCH.c **** 	//read SPI status register
  65:SPI_MCP23S08_SWITCH.c **** 	spi_status=S0SPSR;
  88              		.loc 1 65 0
  89 0074 0000D2E5 		ldrb	r0, [r2, #0]	@ zero_extendqisi2
  90              	.LVL2:
  66:SPI_MCP23S08_SWITCH.c **** 
  67:SPI_MCP23S08_SWITCH.c **** 	//dummy read of SPI data register to clear SPIF (S0SPSR.7) bit
  68:SPI_MCP23S08_SWITCH.c **** 	dummy=S0SPDR;	
  91              		.loc 1 68 0
  92 0078 8E32A0E3 		mov	r3, #-536870904
  93 007c 023883E2 		add	r3, r3, #131072
  94 0080 B030D3E1 		ldrh	r3, [r3, #0]
  69:SPI_MCP23S08_SWITCH.c **** 
  70:SPI_MCP23S08_SWITCH.c **** 	return (spi_status & 0x78);
  71:SPI_MCP23S08_SWITCH.c **** }
  95              		.loc 1 71 0
  96 0084 780000E2 		and	r0, r0, #120
  97 0088 1EFF2FE1 		bx	lr
  98              	.LFE3:
 100              		.align	2
 101              		.global	SPIMCP23S08SendMultipleBytes
 103              	SPIMCP23S08SendMultipleBytes:
 104              	.LFB4:
  72:SPI_MCP23S08_SWITCH.c **** 
  73:SPI_MCP23S08_SWITCH.c **** //*************************************
  74:SPI_MCP23S08_SWITCH.c **** // SPI Send multiple bytes to MCP23S08
  75:SPI_MCP23S08_SWITCH.c **** //*************************************
  76:SPI_MCP23S08_SWITCH.c **** unsigned char SPIMCP23S08SendMultipleBytes(const unsigned int SlaveAddress, const unsigned char Add
  77:SPI_MCP23S08_SWITCH.c **** {
 105              		.loc 1 77 0
 106              		@ Function supports interworking.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              	.LVL3:
 110 008c 0DC0A0E1 		mov	ip, sp
 111              	.LCFI0:
 112 0090 F0D82DE9 		stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
 113              	.LCFI1:
 114 0094 04B04CE2 		sub	fp, ip, #4
 115              	.LCFI2:
 116 0098 0270A0E1 		mov	r7, r2
 117 009c 0360A0E1 		mov	r6, r3
 118 00a0 FF5001E2 		and	r5, r1, #255
  78:SPI_MCP23S08_SWITCH.c **** 	unsigned int count;
  79:SPI_MCP23S08_SWITCH.c **** 	unsigned char err;
  80:SPI_MCP23S08_SWITCH.c **** 
  81:SPI_MCP23S08_SWITCH.c **** 	//Start
  82:SPI_MCP23S08_SWITCH.c **** 	CS_CLR;
 119              		.loc 1 82 0
 120 00a4 0243A0E3 		mov	r4, #134217728
 121 00a8 CE32A0E3 		mov	r3, #-536870900
 122              	.LVL4:
 123 00ac 0A3983E2 		add	r3, r3, #163840
 124 00b0 004083E5 		str	r4, [r3, #0]
  83:SPI_MCP23S08_SWITCH.c **** 
  84:SPI_MCP23S08_SWITCH.c **** 	//Write SlaveAddress to SPI
  85:SPI_MCP23S08_SWITCH.c **** 	if((err=WriteSPIByte(SlaveAddress & 0xFF))!=0)
 125              		.loc 1 85 0
 126 00b4 FF0000E2 		and	r0, r0, #255
 127              	.LVL5:
 128 00b8 FEFFFFEB 		bl	WriteSPIByte
 129              	.LVL6:
 130 00bc 000050E3 		cmp	r0, #0
  86:SPI_MCP23S08_SWITCH.c **** 	{
  87:SPI_MCP23S08_SWITCH.c **** 		CS_SET;
 131              		.loc 1 87 0
 132 00c0 4E32A013 		movne	r3, #-536870908
 133 00c4 0A398312 		addne	r3, r3, #163840
 134 00c8 00408315 		strne	r4, [r3, #0]
 135              		.loc 1 85 0
 136 00cc 5000001A 		bne	.L12
  88:SPI_MCP23S08_SWITCH.c **** 		return err;
  89:SPI_MCP23S08_SWITCH.c **** 	}
  90:SPI_MCP23S08_SWITCH.c **** 
  91:SPI_MCP23S08_SWITCH.c **** 	//Write Address to SPI
  92:SPI_MCP23S08_SWITCH.c **** 	if((err=WriteSPIByte(Address))!=0)
 137              		.loc 1 92 0
 138 00d0 0500A0E1 		mov	r0, r5
 139 00d4 FEFFFFEB 		bl	WriteSPIByte
 140 00d8 000050E3 		cmp	r0, #0
  93:SPI_MCP23S08_SWITCH.c **** 	{
  94:SPI_MCP23S08_SWITCH.c **** 		CS_SET;
 141              		.loc 1 94 0
 142 00dc 0223A013 		movne	r2, #134217728
 143 00e0 4E32A013 		movne	r3, #-536870908
 144 00e4 0A398312 		addne	r3, r3, #163840
 145 00e8 00208315 		strne	r2, [r3, #0]
 146              		.loc 1 92 0
 147 00ec 5000001A 		bne	.L12
 148 00f0 490000EA 		b	.L13
 149              	.L15:
  95:SPI_MCP23S08_SWITCH.c **** 		return err;
 150              		.loc 1 95 0
 151 00f4 0040A0E3 		mov	r4, #0
 152              	.LVL7:
 153              	.L16:
  96:SPI_MCP23S08_SWITCH.c **** 	}
  97:SPI_MCP23S08_SWITCH.c **** 
  98:SPI_MCP23S08_SWITCH.c **** 
  99:SPI_MCP23S08_SWITCH.c **** 	//Transmit all bytes
 100:SPI_MCP23S08_SWITCH.c **** 	for(count=0;count<NumberOfBytes;count++)
 101:SPI_MCP23S08_SWITCH.c **** 	{
 102:SPI_MCP23S08_SWITCH.c **** 		//Write byte
 103:SPI_MCP23S08_SWITCH.c **** 		if((err=WriteSPIByte(pData[count]))!=0)
 154              		.loc 1 103 0
 155 00f8 0400D7E7 		ldrb	r0, [r7, r4]	@ zero_extendqisi2
 156 00fc FEFFFFEB 		bl	WriteSPIByte
 157 0100 000050E3 		cmp	r0, #0
 158 0104 4C00001A 		bne	.L21
 159              		.loc 1 100 0
 160 0108 014084E2 		add	r4, r4, #1
 161 010c 040056E1 		cmp	r6, r4
 162 0110 3C00001A 		bne	.L16
 163              	.L19:
 104:SPI_MCP23S08_SWITCH.c **** 		{
 105:SPI_MCP23S08_SWITCH.c **** 			CS_SET;
 106:SPI_MCP23S08_SWITCH.c **** 			return err;
 107:SPI_MCP23S08_SWITCH.c **** 		}
 108:SPI_MCP23S08_SWITCH.c **** 	}
 109:SPI_MCP23S08_SWITCH.c **** 
 110:SPI_MCP23S08_SWITCH.c **** 	//End
 111:SPI_MCP23S08_SWITCH.c **** 	CS_SET;
 164              		.loc 1 111 0
 165 0114 0223A0E3 		mov	r2, #134217728
 166 0118 4E32A0E3 		mov	r3, #-536870908
 167 011c 0A3983E2 		add	r3, r3, #163840
 168 0120 002083E5 		str	r2, [r3, #0]
 169 0124 0000A0E3 		mov	r0, #0
 170 0128 500000EA 		b	.L12
 171              	.LVL8:
 172              	.L13:
 173              		.loc 1 100 0
 174 012c 000056E3 		cmp	r6, #0
 175 0130 4300000A 		beq	.L19
 176 0134 3B0000EA 		b	.L15
 177              	.LVL9:
 178              	.L21:
 179              		.loc 1 105 0
 180 0138 0223A0E3 		mov	r2, #134217728
 181 013c 4E32A0E3 		mov	r3, #-536870908
 182 0140 0A3983E2 		add	r3, r3, #163840
 183 0144 002083E5 		str	r2, [r3, #0]
 184              	.L12:
 112:SPI_MCP23S08_SWITCH.c **** 
 113:SPI_MCP23S08_SWITCH.c **** 	return 0;
 114:SPI_MCP23S08_SWITCH.c **** }
 185              		.loc 1 114 0
 186 0148 1CD04BE2 		sub	sp, fp, #28
 187 014c F0689DE8 		ldmfd	sp, {r4, r5, r6, r7, fp, sp, lr}
 188 0150 1EFF2FE1 		bx	lr
 189              	.LFE4:
 191              		.align	2
 192              		.global	SPIMCP23S08SendByte
 194              	SPIMCP23S08SendByte:
 195              	.LFB5:
 115:SPI_MCP23S08_SWITCH.c **** 
 116:SPI_MCP23S08_SWITCH.c **** //*******************************
 117:SPI_MCP23S08_SWITCH.c **** // SPI Send Byte to MCP23S08
 118:SPI_MCP23S08_SWITCH.c **** //*******************************
 119:SPI_MCP23S08_SWITCH.c **** unsigned char SPIMCP23S08SendByte(const unsigned int SlaveAddress, const unsigned char Address, uns
 120:SPI_MCP23S08_SWITCH.c **** {
 196              		.loc 1 120 0
 197              		@ Function supports interworking.
 198              		@ args = 0, pretend = 0, frame = 4
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200              	.LVL10:
 201 0154 0DC0A0E1 		mov	ip, sp
 202              	.LCFI3:
 203 0158 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 204              	.LCFI4:
 205 015c 04B04CE2 		sub	fp, ip, #4
 206              	.LCFI5:
 207 0160 04D04DE2 		sub	sp, sp, #4
 208              	.LCFI6:
 209 0164 FF1001E2 		and	r1, r1, #255
 210 0168 10204BE5 		strb	r2, [fp, #-16]
 121:SPI_MCP23S08_SWITCH.c **** 	return SPIMCP23S08SendMultipleBytes(SlaveAddress, Address, &DataByte, 1);
 211              		.loc 1 121 0
 212 016c 10204BE2 		sub	r2, fp, #16
 213              	.LVL11:
 214 0170 0130A0E3 		mov	r3, #1
 215 0174 FEFFFFEB 		bl	SPIMCP23S08SendMultipleBytes
 216              	.LVL12:
 122:SPI_MCP23S08_SWITCH.c **** }	  
 217              		.loc 1 122 0
 218 0178 0CD04BE2 		sub	sp, fp, #12
 219 017c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 220 0180 1EFF2FE1 		bx	lr
 221              	.LFE5:
 223              		.align	2
 224              		.global	MCP23S08_Init
 226              	MCP23S08_Init:
 227              	.LFB6:
 123:SPI_MCP23S08_SWITCH.c **** 
 124:SPI_MCP23S08_SWITCH.c **** //*******************************
 125:SPI_MCP23S08_SWITCH.c **** // MCP23S08 Initialization
 126:SPI_MCP23S08_SWITCH.c **** //*******************************
 127:SPI_MCP23S08_SWITCH.c **** unsigned char MCP23S08_Init(void)
 128:SPI_MCP23S08_SWITCH.c **** {
 228              		.loc 1 128 0
 229              		@ Function supports interworking.
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0184 0DC0A0E1 		mov	ip, sp
 233              	.LCFI7:
 234 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 235              	.LCFI8:
 236 018c 04B04CE2 		sub	fp, ip, #4
 237              	.LCFI9:
 129:SPI_MCP23S08_SWITCH.c **** 	return SPIMCP23S08SendMultipleBytes(SLAVE_ADDRESS_MCP23S08_W, 0, MCP23S08_settings, sizeof(MCP23S0
 238              		.loc 1 129 0
 239 0190 4600A0E3 		mov	r0, #70
 240 0194 0010A0E3 		mov	r1, #0
 241 0198 10209FE5 		ldr	r2, .L27
 242 019c 0730A0E3 		mov	r3, #7
 243 01a0 FEFFFFEB 		bl	SPIMCP23S08SendMultipleBytes
 130:SPI_MCP23S08_SWITCH.c **** }
 244              		.loc 1 130 0
 245 01a4 0CD04BE2 		sub	sp, fp, #12
 246 01a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 247 01ac 1EFF2FE1 		bx	lr
 248              	.L28:
 249              		.align	2
 250              	.L27:
 251 01b0 00000000 		.word	MCP23S08_settings
 252              	.LFE6:
 254              		.align	2
 255              		.global	SPIMCP23S08ReceiveByte
 257              	SPIMCP23S08ReceiveByte:
 258              	.LFB7:
 131:SPI_MCP23S08_SWITCH.c **** 
 132:SPI_MCP23S08_SWITCH.c **** //*******************************
 133:SPI_MCP23S08_SWITCH.c **** // SPI Receive Byte from MCP23S08
 134:SPI_MCP23S08_SWITCH.c **** //*******************************
 135:SPI_MCP23S08_SWITCH.c **** unsigned char SPIMCP23S08ReceiveByte(const unsigned int SlaveAddress, const unsigned char Address, 
 136:SPI_MCP23S08_SWITCH.c **** {
 259              		.loc 1 136 0
 260              		@ Function supports interworking.
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 1, uses_anonymous_args = 0
 263              	.LVL13:
 264 01b4 0DC0A0E1 		mov	ip, sp
 265              	.LCFI10:
 266 01b8 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
 267              	.LCFI11:
 268 01bc 04B04CE2 		sub	fp, ip, #4
 269              	.LCFI12:
 270 01c0 0250A0E1 		mov	r5, r2
 271 01c4 FF4001E2 		and	r4, r1, #255
 137:SPI_MCP23S08_SWITCH.c **** 	unsigned char err;
 138:SPI_MCP23S08_SWITCH.c **** 
 139:SPI_MCP23S08_SWITCH.c **** 	//Start
 140:SPI_MCP23S08_SWITCH.c **** 	CS_CLR;
 272              		.loc 1 140 0
 273 01c8 0223A0E3 		mov	r2, #134217728
 274              	.LVL14:
 275 01cc CE32A0E3 		mov	r3, #-536870900
 276 01d0 0A3983E2 		add	r3, r3, #163840
 277 01d4 002083E5 		str	r2, [r3, #0]
 141:SPI_MCP23S08_SWITCH.c **** 
 142:SPI_MCP23S08_SWITCH.c **** 	//Write SlaveAddress to SPI
 143:SPI_MCP23S08_SWITCH.c **** 	if((err=WriteSPIByte(SlaveAddress & 0xFF))!=0)
 278              		.loc 1 143 0
 279 01d8 FF0000E2 		and	r0, r0, #255
 280              	.LVL15:
 281 01dc FEFFFFEB 		bl	WriteSPIByte
 282              	.LVL16:
 283 01e0 000050E3 		cmp	r0, #0
 284 01e4 8900001A 		bne	.L32
 144:SPI_MCP23S08_SWITCH.c **** 		return err;
 145:SPI_MCP23S08_SWITCH.c **** 
 146:SPI_MCP23S08_SWITCH.c **** 	//Write Address to SPI
 147:SPI_MCP23S08_SWITCH.c **** 	if((err=WriteSPIByte(Address))!=0)
 285              		.loc 1 147 0
 286 01e8 0400A0E1 		mov	r0, r4
 287 01ec FEFFFFEB 		bl	WriteSPIByte
 288 01f0 000050E3 		cmp	r0, #0
 289 01f4 8900001A 		bne	.L32
 148:SPI_MCP23S08_SWITCH.c **** 		return err;
 149:SPI_MCP23S08_SWITCH.c **** 
 150:SPI_MCP23S08_SWITCH.c **** 	//Dummy write to SPI Data Register
 151:SPI_MCP23S08_SWITCH.c **** 	if((err=WriteSPIByte(0xFF))!=0)
 290              		.loc 1 151 0
 291 01f8 FF00A0E3 		mov	r0, #255
 292 01fc FEFFFFEB 		bl	WriteSPIByte
 293 0200 000050E3 		cmp	r0, #0
 294 0204 8900001A 		bne	.L32
 152:SPI_MCP23S08_SWITCH.c **** 		return err;
 153:SPI_MCP23S08_SWITCH.c **** 
 154:SPI_MCP23S08_SWITCH.c **** 	//Read data
 155:SPI_MCP23S08_SWITCH.c **** 	*pByte=S0SPDR;
 295              		.loc 1 155 0
 296 0208 8E32A0E3 		mov	r3, #-536870904
 297 020c 023883E2 		add	r3, r3, #131072
 298 0210 B030D3E1 		ldrh	r3, [r3, #0]
 299 0214 0030C5E5 		strb	r3, [r5, #0]
 156:SPI_MCP23S08_SWITCH.c **** 
 157:SPI_MCP23S08_SWITCH.c **** 	//End
 158:SPI_MCP23S08_SWITCH.c **** 	CS_SET;
 300              		.loc 1 158 0
 301 0218 0223A0E3 		mov	r2, #134217728
 302 021c 4E32A0E3 		mov	r3, #-536870908
 303 0220 0A3983E2 		add	r3, r3, #163840
 304 0224 002083E5 		str	r2, [r3, #0]
 305 0228 0000A0E3 		mov	r0, #0
 306              	.L32:
 159:SPI_MCP23S08_SWITCH.c **** 
 160:SPI_MCP23S08_SWITCH.c **** 	return 0;
 161:SPI_MCP23S08_SWITCH.c **** }
 307              		.loc 1 161 0
 308 022c 14D04BE2 		sub	sp, fp, #20
 309 0230 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 310 0234 1EFF2FE1 		bx	lr
 311              	.LFE7:
 313              		.align	2
 314              		.global	delay
 316              	delay:
 317              	.LFB8:
 162:SPI_MCP23S08_SWITCH.c **** 
 163:SPI_MCP23S08_SWITCH.c **** //*******************************
 164:SPI_MCP23S08_SWITCH.c **** // Delay function
 165:SPI_MCP23S08_SWITCH.c **** //*******************************
 166:SPI_MCP23S08_SWITCH.c **** void delay(unsigned int del_time) 
 167:SPI_MCP23S08_SWITCH.c **** { 
 318              		.loc 1 167 0
 319              		@ Function supports interworking.
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323              	.LVL17:
 324              		@ lr needed for prologue
 168:SPI_MCP23S08_SWITCH.c **** 	unsigned int i;
 169:SPI_MCP23S08_SWITCH.c **** 	for(i=0;i<del_time;i++);	   
 325              		.loc 1 169 0
 326 0238 000050E3 		cmp	r0, #0
 327 023c 1EFF2F01 		bxeq	lr
 328 0240 0030A0E3 		mov	r3, #0
 329              	.LVL18:
 330              	.L41:
 331 0244 013083E2 		add	r3, r3, #1
 332 0248 030050E1 		cmp	r0, r3
 333 024c 8F00001A 		bne	.L41
 334 0250 1EFF2FE1 		bx	lr
 335              	.LFE8:
 337              		.section	.rodata.str1.4,"aMS",%progbits,1
 338              		.align	2
 339              	.LC0:
 340 0000 53504920 		.ascii	"SPI MCP23S08\000"
 340      4D435032 
 340      33533038 
 340      00
 341 000d 000000   		.align	2
 342              	.LC1:
 343 0010 53574954 		.ascii	"SWITCH Reader\000"
 343      43482052 
 343      65616465 
 343      7200
 344 001e 0000     		.align	2
 345              	.LC2:
 346 0020 496E703D 		.ascii	"Inp=\000"
 346      00
 347 0025 000000   		.align	2
 348              	.LC3:
 349 0028 20646563 		.ascii	" dec        \000"
 349      20202020 
 349      20202020 
 349      00
 350 0035 000000   		.align	2
 351              	.LC4:
 352 0038 2062696E 		.ascii	" bin   \000"
 352      20202000 
 353              		.text
 354              		.align	2
 355              		.global	main
 357              	main:
 358              	.LFB9:
 170:SPI_MCP23S08_SWITCH.c **** }
 171:SPI_MCP23S08_SWITCH.c **** 
 172:SPI_MCP23S08_SWITCH.c **** //*******************************
 173:SPI_MCP23S08_SWITCH.c **** // MAIN
 174:SPI_MCP23S08_SWITCH.c **** //*******************************
 175:SPI_MCP23S08_SWITCH.c **** int main (void)
 176:SPI_MCP23S08_SWITCH.c **** {
 359              		.loc 1 176 0
 360              		@ Function supports interworking.
 361              		@ args = 0, pretend = 0, frame = 4
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0254 0DC0A0E1 		mov	ip, sp
 364              	.LCFI13:
 365 0258 70D82DE9 		stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}
 366              	.LCFI14:
 367 025c 04B04CE2 		sub	fp, ip, #4
 368              	.LCFI15:
 369 0260 04D04DE2 		sub	sp, sp, #4
 370              	.LCFI16:
 177:SPI_MCP23S08_SWITCH.c **** 	//Peripherials' frequency = fclk/4 = 15MHz
 178:SPI_MCP23S08_SWITCH.c **** 	VPBDIV&=0xFFFFFFFC;
 371              		.loc 1 178 0
 372 0264 0E12A0E3 		mov	r1, #-536870912
 373 0268 7F2981E2 		add	r2, r1, #2080768
 374 026c 0031D2E5 		ldrb	r3, [r2, #256]	@ zero_extendqisi2
 375 0270 FC3003E2 		and	r3, r3, #252
 376 0274 0031C2E5 		strb	r3, [r2, #256]
 179:SPI_MCP23S08_SWITCH.c **** 	VPBDIV|=0x00;
 377              		.loc 1 179 0
 378 0278 0031D2E5 		ldrb	r3, [r2, #256]	@ zero_extendqisi2
 379 027c FF3003E2 		and	r3, r3, #255
 380 0280 0031C2E5 		strb	r3, [r2, #256]
 180:SPI_MCP23S08_SWITCH.c **** 
 181:SPI_MCP23S08_SWITCH.c **** 	//Port direction configuration
 182:SPI_MCP23S08_SWITCH.c **** 	IODIR0 = 0xFF000000;
 381              		.loc 1 182 0
 382 0284 FF24A0E3 		mov	r2, #-16777216
 383 0288 8E32A0E3 		mov	r3, #-536870904
 384 028c 0A3983E2 		add	r3, r3, #163840
 385 0290 002083E5 		str	r2, [r3, #0]
 183:SPI_MCP23S08_SWITCH.c **** 	IODIR1 = 0x00FF0000;
 386              		.loc 1 183 0
 387 0294 0A1981E2 		add	r1, r1, #163840
 388 0298 FF38A0E3 		mov	r3, #16711680
 389 029c 183081E5 		str	r3, [r1, #24]
 184:SPI_MCP23S08_SWITCH.c **** 
 185:SPI_MCP23S08_SWITCH.c **** 	SPIInit();
 390              		.loc 1 185 0
 391 02a0 FEFFFFEB 		bl	SPIInit
 186:SPI_MCP23S08_SWITCH.c **** 	MCP23S08_Init();
 392              		.loc 1 186 0
 393 02a4 FEFFFFEB 		bl	MCP23S08_Init
 187:SPI_MCP23S08_SWITCH.c **** 	LCDInit();
 394              		.loc 1 187 0
 395 02a8 FEFFFFEB 		bl	LCDInit
 188:SPI_MCP23S08_SWITCH.c **** 
 189:SPI_MCP23S08_SWITCH.c **** 	LCDClear();
 396              		.loc 1 189 0
 397 02ac FEFFFFEB 		bl	LCDClear
 190:SPI_MCP23S08_SWITCH.c **** 
 191:SPI_MCP23S08_SWITCH.c **** 	LCDText("SPI MCP23S08");
 398              		.loc 1 191 0
 399 02b0 AC009FE5 		ldr	r0, .L51
 400 02b4 FEFFFFEB 		bl	LCDText
 192:SPI_MCP23S08_SWITCH.c **** 	LCDGotoXY(0,1);
 401              		.loc 1 192 0
 402 02b8 0000A0E3 		mov	r0, #0
 403 02bc 0110A0E3 		mov	r1, #1
 404 02c0 FEFFFFEB 		bl	LCDGotoXY
 193:SPI_MCP23S08_SWITCH.c **** 	LCDText("SWITCH Reader");
 405              		.loc 1 193 0
 406 02c4 9C009FE5 		ldr	r0, .L51+4
 407 02c8 FEFFFFEB 		bl	LCDText
 194:SPI_MCP23S08_SWITCH.c **** 	delay(0x400000);
 408              		.loc 1 194 0
 409 02cc 0105A0E3 		mov	r0, #4194304
 410 02d0 FEFFFFEB 		bl	delay
 411 02d4 90609FE5 		ldr	r6, .L51+8
 412 02d8 0150A0E3 		mov	r5, #1
 413              	.LVL19:
 414              	.L45:
 415              	.LBB2:
 195:SPI_MCP23S08_SWITCH.c **** 
 196:SPI_MCP23S08_SWITCH.c **** 
 197:SPI_MCP23S08_SWITCH.c **** 	//Reading switches
 198:SPI_MCP23S08_SWITCH.c **** 	while(1)
 199:SPI_MCP23S08_SWITCH.c **** 	{
 200:SPI_MCP23S08_SWITCH.c **** 		unsigned int i;
 201:SPI_MCP23S08_SWITCH.c **** 		unsigned char val;
 202:SPI_MCP23S08_SWITCH.c **** 		
 203:SPI_MCP23S08_SWITCH.c **** 		SPIMCP23S08ReceiveByte(SLAVE_ADDRESS_MCP23S08_R, ADDR_MCP23S08_GPIO, &val);
 416              		.loc 1 203 0
 417 02dc 4700A0E3 		mov	r0, #71
 418 02e0 0910A0E3 		mov	r1, #9
 419 02e4 19204BE2 		sub	r2, fp, #25
 420 02e8 FEFFFFEB 		bl	SPIMCP23S08ReceiveByte
 204:SPI_MCP23S08_SWITCH.c **** 		val&=0x0F;
 421              		.loc 1 204 0
 422 02ec 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 423 02f0 0F3003E2 		and	r3, r3, #15
 424 02f4 19304BE5 		strb	r3, [fp, #-25]
 205:SPI_MCP23S08_SWITCH.c **** 
 206:SPI_MCP23S08_SWITCH.c **** 		LCDGotoXY(0,0);
 425              		.loc 1 206 0
 426 02f8 0000A0E3 		mov	r0, #0
 427 02fc 0010A0E1 		mov	r1, r0
 428 0300 FEFFFFEB 		bl	LCDGotoXY
 207:SPI_MCP23S08_SWITCH.c **** 		LCDText("Inp=");
 429              		.loc 1 207 0
 430 0304 0600A0E1 		mov	r0, r6
 431 0308 FEFFFFEB 		bl	LCDText
 208:SPI_MCP23S08_SWITCH.c **** 		LCD32bitNumberDec(val);
 432              		.loc 1 208 0
 433 030c 19005BE5 		ldrb	r0, [fp, #-25]	@ zero_extendqisi2
 434 0310 FEFFFFEB 		bl	LCD32bitNumberDec
 209:SPI_MCP23S08_SWITCH.c **** 		LCDText(" dec        ");
 435              		.loc 1 209 0
 436 0314 54009FE5 		ldr	r0, .L51+12
 437 0318 FEFFFFEB 		bl	LCDText
 210:SPI_MCP23S08_SWITCH.c **** 
 211:SPI_MCP23S08_SWITCH.c **** 		LCDGotoXY(0,1);
 438              		.loc 1 211 0
 439 031c 0000A0E3 		mov	r0, #0
 440 0320 0110A0E3 		mov	r1, #1
 441 0324 FEFFFFEB 		bl	LCDGotoXY
 212:SPI_MCP23S08_SWITCH.c **** 		LCDText("Inp=");
 442              		.loc 1 212 0
 443 0328 0600A0E1 		mov	r0, r6
 444 032c FEFFFFEB 		bl	LCDText
 445 0330 0440A0E3 		mov	r4, #4
 446              	.L46:
 447              	.LBB3:
 213:SPI_MCP23S08_SWITCH.c **** 		for(i=4;i>0;i--)
 214:SPI_MCP23S08_SWITCH.c **** 		{
 215:SPI_MCP23S08_SWITCH.c **** 			unsigned int tmp=val&(1<<(i-1));
 448              		.loc 1 215 0
 449 0334 014044E2 		sub	r4, r4, #1
 216:SPI_MCP23S08_SWITCH.c **** 			LCD32bitNumberDec(tmp>>(i-1));
 450              		.loc 1 216 0
 451 0338 19005BE5 		ldrb	r0, [fp, #-25]	@ zero_extendqisi2
 452 033c 150400E0 		and	r0, r0, r5, asl r4
 453 0340 3004A0E1 		mov	r0, r0, lsr r4
 454 0344 FEFFFFEB 		bl	LCD32bitNumberDec
 455              	.LBE3:
 456              		.loc 1 213 0
 457 0348 000054E3 		cmp	r4, #0
 458 034c CB00001A 		bne	.L46
 217:SPI_MCP23S08_SWITCH.c **** 		}
 218:SPI_MCP23S08_SWITCH.c **** 		LCDText(" bin   ");
 459              		.loc 1 218 0
 460 0350 1C009FE5 		ldr	r0, .L51+16
 461 0354 FEFFFFEB 		bl	LCDText
 219:SPI_MCP23S08_SWITCH.c **** 
 220:SPI_MCP23S08_SWITCH.c **** 		delay(0x50000);
 462              		.loc 1 220 0
 463 0358 0508A0E3 		mov	r0, #327680
 464 035c FEFFFFEB 		bl	delay
 465 0360 B50000EA 		b	.L45
 466              	.L52:
 467              		.align	2
 468              	.L51:
 469 0364 00000000 		.word	.LC0
 470 0368 10000000 		.word	.LC1
 471 036c 20000000 		.word	.LC2
 472 0370 28000000 		.word	.LC3
 473 0374 38000000 		.word	.LC4
 474              	.LBE2:
 475              	.LFE9:
 660              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 SPI_MCP23S08_SWITCH.c
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:14     .rodata:00000000 MCP23S08_settings
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:26     .text:00000000 SPIInit
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:37     .text:00000000 $a
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:67     .text:00000050 WriteSPIByte
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:103    .text:0000008c SPIMCP23S08SendMultipleBytes
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:194    .text:00000154 SPIMCP23S08SendByte
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:226    .text:00000184 MCP23S08_Init
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:251    .text:000001b0 $d
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:257    .text:000001b4 SPIMCP23S08ReceiveByte
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:264    .text:000001b4 $a
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:316    .text:00000238 delay
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:357    .text:00000254 main
/cygdrive/c/DOCUME~1/ADMINI~1/USTAWI~1/Temp/ccmOWM6U.s:469    .text:00000364 $d

UNDEFINED SYMBOLS
LCDInit
LCDClear
LCDText
LCDGotoXY
LCD32bitNumberDec
